import{_ as n,p as i,q as r,R as e,t,Q as l}from"./framework-5866ffd3.js";const o={},a=e("p",null,[e("span",{style:{"font-family":"Arial","line-height":"18px"}})],-1),h=e("div",{class:"tit",style:{"font-family":"Arial","font-size":"14px","line-height":"26px",color:"#2e3b00","font-weight":"bold","text-align":"left","border-left-width":"5px","border-left-style":"solid","border-left-color":"#bcda15","text-indent":"8px"}}," freemarker常用语法 ",-1),s=e("div",{class:"date",style:{"font-family":"Verdana","font-size":"10px","line-height":"18px","margin-top":"0px","margin-right":"0px","margin-bottom":"8px","margin-left":"12px",color:"#888888","text-align":"left"}}," 2007年12月25日 星期二 10:57 ",-1),m=e("table",{style:{width:"958px"},border:"0",class:"ke-zeroborder"},[e("tbody",null,[e("tr",null,[e("td",{style:{"font-family":"Arial","font-size":"12px","line-height":"18px"}},[e("div",{id:"blog_text",class:"cnt",style:{"font-family":"Arial","font-size":"14px","line-height":"18px"}},[t(" 常用语法 "),e("br",{style:{"line-height":"normal"}}),t(" EG.一个对象BOOK "),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" 1.输出 ${book.name} ")]),e("p",{style:{"line-height":"normal"}}," 空值判断：${book.name?if_exists }, "),e("p",{style:{"line-height":"normal"}},[t(" ${book.name?default(‘xxx’)}//默认值xxx"),e("br",{style:{"line-height":"normal"}}),t(' ${ book.name!"xxx"}//默认值xxx ')]),e("p",{style:{"line-height":"normal"}}," 日期格式：${book.date?string('yyyy-MM-dd')} "),e("p",{style:{"line-height":"normal"}},[t(" 数字格式：${book?string.number}--20"),e("br",{style:{"line-height":"normal"}}),t(" ${book?string.currency}--<#-- $20.00 -->"),e("br",{style:{"line-height":"normal"}}),t(" ${book?string.percent}—<#-- 20% --> ")]),e("p",{style:{"line-height":"normal"}},[t(" 插入布尔值："),e("br",{style:{"line-height":"normal"}}),t(" <#assign foo=ture />"),e("br",{style:{"line-height":"normal"}}),t(' ${foo?string("yes","no")} <#-- yes -->'),e("br",{style:{"line-height":"normal"}}),e("br",{style:{"line-height":"normal"}}),t(" exp1?exists将会被exp1??代替 "),e("br",{style:{"line-height":"normal"}}),t(" exp1?if_exists将会被exp1!代替 "),e("br",{style:{"line-height":"normal"}}),t(" exp1?default(exp2)将会被exp1!exp2."),e("br",{style:{"line-height":"normal"}}),e("br",{style:{"line-height":"normal"}}),e("br",{style:{"line-height":"normal"}}),t(" 2．逻辑判断"),e("br",{style:{"line-height":"normal"}}),t(" a:"),e("br",{style:{"line-height":"normal"}}),t(" <#if condition>..."),e("br",{style:{"line-height":"normal"}}),t(" <#elseif condition2>..."),e("br",{style:{"line-height":"normal"}}),t(" <#elseif condition3>......"),e("br",{style:{"line-height":"normal"}}),t(" <#else>..."),e("br",{style:{"line-height":"normal"}}),t(" 其中空值判断可以写成<#if book.name?? >"),e("br",{style:{"line-height":"normal"}}),e("br",{style:{"line-height":"normal"}}),l("#if")]),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" b:"),e("br",{style:{"line-height":"normal"}}),t(" <#switch value>"),e("br",{style:{"line-height":"normal"}}),t(" <#case refValue1>"),e("br",{style:{"line-height":"normal"}}),t(" ..."),e("br",{style:{"line-height":"normal"}}),t(" <#break>"),e("br",{style:{"line-height":"normal"}}),t(" <#case refValue2>"),e("br",{style:{"line-height":"normal"}}),t(" ..."),e("br",{style:{"line-height":"normal"}}),t(" <#break>"),e("br",{style:{"line-height":"normal"}}),t(" ..."),e("br",{style:{"line-height":"normal"}}),t(" <#case refValueN>"),e("br",{style:{"line-height":"normal"}}),t(" ..."),e("br",{style:{"line-height":"normal"}}),t(" <#break>"),e("br",{style:{"line-height":"normal"}}),t(" <#default>"),e("br",{style:{"line-height":"normal"}}),t(" ..."),e("br",{style:{"line-height":"normal"}}),l("#switch"),e("br",{style:{"line-height":"normal"}}),e("br",{style:{"line-height":"normal"}}),t(" 3．循环读取"),e("br",{style:{"line-height":"normal"}}),t(" <#list sequence as item>"),e("br",{style:{"line-height":"normal"}}),t(" ..."),e("br",{style:{"line-height":"normal"}}),l("#list"),e("br",{style:{"line-height":"normal"}}),t(" 空值判断<#if bookList?size = 0> "),l("#list")]),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" e.g."),e("br",{style:{"line-height":"normal"}}),t(" <#list employees as e>"),e("br",{style:{"line-height":"normal"}}),t(" ${e_index}. ${e.name}"),e("br",{style:{"line-height":"normal"}}),l("#list"),e("br",{style:{"line-height":"normal"}}),t(" 输出:"),e("br",{style:{"line-height":"normal"}}),t(" 1. Readonly"),e("br",{style:{"line-height":"normal"}}),t(" 2. Robbin ")]),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" 4.FreeMarker ")]),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" 3 宏/模板 ")]),e("p",{style:{"line-height":"normal"}}," 宏Macro "),e("p",{style:{"line-height":"normal"}},[t(" 宏是在模板中使用macro指令定义"),e("br",{style:{"line-height":"normal"}}),t(" l.1 基本用法"),e("br",{style:{"line-height":"normal"}}),t(" 宏是和某个变量关联的模板片断，以便在模板中通过用户定义指令使用该变量，下面是一个例子： ")]),e("p",{style:{"line-height":"normal"}},[t(" <#macro greet>"),e("br",{style:{"line-height":"normal"}}),e("span",{style:{"font-size":"x-small"}},"Hello Joe!"),e("br",{style:{"line-height":"normal"}}),l("#macro")]),e("p",{style:{"line-height":"normal"}},[t(" 调用宏时，与使用FreeMarker的其他指令类似，"),e("br",{style:{"line-height":"normal"}}),t(" 只是使用@替代FTL标记中的#。 ")]),e("p",{style:{"line-height":"normal"}},[t(" <@greet><"),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@greet"),t("> ")]),e("p",{style:{"line-height":"normal"}}," <#--<@greet/>--> "),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" 在macro指令中可以在宏变量之后定义参数，如： ")]),e("p",{style:{"line-height":"normal"}},[t(" <#macro greet person>"),e("br",{style:{"line-height":"normal"}}),e("span",{style:{"font-size":"x-small"}},"Hello ${person}!"),e("br",{style:{"line-height":"normal"}}),l("#macro"),e("br",{style:{"line-height":"normal"}}),t(" 可以这样使用这个宏变量："),e("br",{style:{"line-height":"normal"}}),t(' <@greet person="Fred"/>'),e("br",{style:{"line-height":"normal"}}),t(" 但是下面的代码具有不同的意思："),e("br",{style:{"line-height":"normal"}}),t(" <@greet person=Fred/>"),e("br",{style:{"line-height":"normal"}}),t(" 这意味着将Fred变量的值传给person参数，该值不仅是字符串，还可以是其它类型，甚至是复杂的表达式。 ")]),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" 宏可以有多参数，下面是一个例子："),e("br",{style:{"line-height":"normal"}}),t(" <#macro greet person color>"),e("br",{style:{"line-height":"normal"}}),e("span",{style:{"font-size":"x-small",color:"${color}"}},"Hello ${person}!"),e("br",{style:{"line-height":"normal"}}),l("#macro")]),e("p",{style:{"line-height":"normal"}},[t(" 可以这样使用该宏变量，其中参数的次序是无关的："),e("br",{style:{"line-height":"normal"}}),t(' <@greet person="Fred" color="black"/> ')]),e("p",{style:{"line-height":"normal"}},[t(" 可以在定义参数时指定缺省值，否则，在调用宏的时候，必须对所有参数赋值："),e("br",{style:{"line-height":"normal"}}),t(' <#macro greet person color="black">'),e("br",{style:{"line-height":"normal"}}),e("span",{style:{"font-size":"x-small",color:"${color}"}},"Hello ${person}!"),e("br",{style:{"line-height":"normal"}}),l("#macro")]),e("p",{style:{"line-height":"normal"}}," 注意：宏的参数是局部变量，只能在宏定义中有效。 "),e("p",{style:{"line-height":"normal"}},[e("br")]),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" 在宏里嵌套内容"),e("br",{style:{"line-height":"normal"}}),t(" FreeMarker的宏可以有嵌套内容，"),e("br",{style:{"line-height":"normal"}}),t(" <#nested>指令会执行宏调用指令开始和结束标记之间的模板片断，举一个简单的例子： ")]),e("p",{style:{"line-height":"normal"}},[t(" <#macro border>"),e("br",{style:{"line-height":"normal"}}),e("table",{border:"4",cellspacing:"0",cellpadding:"4"},[e("tbody",null,[e("tr",null,[e("td",null,[e("br",{style:{"line-height":"normal"}}),t(" <#nested>"),e("br",{style:{"line-height":"normal"}})])])])]),e("br",{style:{"line-height":"normal"}}),l("#macro")]),e("p",{style:{"line-height":"normal"}},[t(" 执行宏调用："),e("br",{style:{"line-height":"normal"}}),t(" <@border>The bordered text<"),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@border"),t(">"),e("br",{style:{"line-height":"normal"}}),t(" 输出结果："),e("br",{style:{"line-height":"normal"}}),e("br",{style:{"line-height":"normal"}}),e("br",{style:{"line-height":"normal"}}),e("table",{border:"4",cellspacing:"0",cellpadding:"4"},[e("tbody",null,[e("tr",null,[e("td",null,[e("br",{style:{"line-height":"normal"}}),t(" The bordered text"),e("br",{style:{"line-height":"normal"}})])])])])]),e("p",{style:{"line-height":"normal"}},[t(" <#nested>指令可以被多次调用，每次都会执行相同的内容。"),e("br",{style:{"line-height":"normal"}}),t(" <#macro do_thrice>"),e("br",{style:{"line-height":"normal"}}),t(" <#nested>"),e("br",{style:{"line-height":"normal"}}),t(" <#nested>"),e("br",{style:{"line-height":"normal"}}),t(" <#nested>"),e("br",{style:{"line-height":"normal"}}),l("#macro")]),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" <@do_thrice>"),e("br",{style:{"line-height":"normal"}}),t(" Anything."),e("br",{style:{"line-height":"normal"}}),t(" <"),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@do_thrice"),t("> ")]),e("p",{style:{"line-height":"normal"}},[t(" FMPP 输出结果："),e("br",{style:{"line-height":"normal"}}),t(" Anything."),e("br",{style:{"line-height":"normal"}}),t(" Anything."),e("br",{style:{"line-height":"normal"}}),t(" Anything. ")]),e("p",{style:{"line-height":"normal"}},[t(" 嵌套内容可以是有效的FTL，下面是一个有些复杂的例子，我们将上面三个宏组合起来："),e("br",{style:{"line-height":"normal"}}),t(" <@border> ")]),e("ul",null,[e("br",{style:{"line-height":"normal"}}),t(" <@do_thrice>"),e("br",{style:{"line-height":"normal"}}),e("li",null,[t(' <@greet person="Joe"/>'),e("br",{style:{"line-height":"normal"}}),t(" <"),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@do_thrice"),t(">"),e("br",{style:{"line-height":"normal"}})])]),e("br",{style:{"line-height":"normal"}}),t(" <"),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@border"),t(">"),e("br",{style:{"line-height":"normal"}}),t(" 输出结果："),e("br",{style:{"line-height":"normal"}}),e("table",{border:"4",cellspacing:"0",cellpadding:"4"},[e("tbody",null,[e("tr",null,[e("td",null,[e("br",{style:{"line-height":"normal"}}),e("ul",null,[e("br",{style:{"line-height":"normal"}}),e("li",null,[e("span",{style:{"font-size":"x-small"}},"Hello Joe!"),e("br",{style:{"line-height":"normal"}})]),e("li",null,[e("span",{style:{"font-size":"x-small"}},"Hello Joe!"),e("br",{style:{"line-height":"normal"}})]),e("li",null,[e("span",{style:{"font-size":"x-small"}},"Hello Joe!"),e("br",{style:{"line-height":"normal"}})])]),e("br",{style:{"line-height":"normal"}})])])])]),e("p",null,[e("br")]),e("p",{style:{"line-height":"normal"}},[t(" 宏定义中的局部变量对嵌套内容是不可见的，例如："),e("br",{style:{"line-height":"normal"}}),t(" <#macro repeat count>"),e("br",{style:{"line-height":"normal"}}),t(' <#local y = "test">'),e("br",{style:{"line-height":"normal"}}),t(" <#list 1..count as x>"),e("br",{style:{"line-height":"normal"}}),t(" ${y} ${count}/${x}: <#nested>"),e("br",{style:{"line-height":"normal"}}),l("#list"),e("br",{style:{"line-height":"normal"}}),l("#macro")]),e("p",{style:{"line-height":"normal"}},[t(' <@repeat count=3>${y?default("?")} ${x?default("?")} ${count?default("?")}<'),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@repeat"),t("> ")]),e("p",{style:{"line-height":"normal"}},[t(" 输出结果："),e("br",{style:{"line-height":"normal"}}),t(" test 3/1: ? ? ?"),e("br",{style:{"line-height":"normal"}}),t(" test 3/2: ? ? ?"),e("br",{style:{"line-height":"normal"}}),t(" test 3/3: ? ? ? ")]),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" 在宏定义中使用循环变量"),e("br",{style:{"line-height":"normal"}}),t(" nestted指令也可以有循环变量（循环变量的含义见下节），调用宏的时候在宏指令的参数后面依次列出循环变量的名字，格式如下： ")]),e("p",{style:{"line-height":"normal"}}," <@ macro_name paramter list; loop variable list[,]> "),e("p",{style:{"line-height":"normal"}},[t(" 例如："),e("br",{style:{"line-height":"normal"}}),t(" <#macro repeat count>"),e("br",{style:{"line-height":"normal"}}),t(" <#list 1..count as x>"),e("br",{style:{"line-height":"normal"}}),t(" <#nested x, x/2, x==count>"),e("br",{style:{"line-height":"normal"}}),l("#list"),e("br",{style:{"line-height":"normal"}}),l("#macro")]),e("p",{style:{"line-height":"normal"}},[t(" <@repeat count=4 ; c, halfc, last>"),e("br",{style:{"line-height":"normal"}}),t(" ${c}. ${halfc}<#if last> Last! "),l("#if"),e("br",{style:{"line-height":"normal"}}),t(" <"),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@repeat"),t("> ")]),e("p",{style:{"line-height":"normal"}},[t(" 这里count是宏的参数，c, halfc,last则为循环变量，输出结果："),e("br",{style:{"line-height":"normal"}}),t(" 1. 0.5"),e("br",{style:{"line-height":"normal"}}),t(" 2. 1"),e("br",{style:{"line-height":"normal"}}),t(" 3. 1.5"),e("br",{style:{"line-height":"normal"}}),t(" 4. 2 Last!"),e("br",{style:{"line-height":"normal"}}),t(" 循环变量和宏标记指定的不同不会有问题，如果调用时少指定了循环变量，那么多余的值不可见。调用时多指定了循环变量，多余的循环变量 ")]),e("p",{style:{"line-height":"normal"}},[t(" 不会被创建："),e("br",{style:{"line-height":"normal"}}),t(" <@repeat count=4 ; c, halfc, last>"),e("br",{style:{"line-height":"normal"}}),t(" ${c}. ${halfc}<#if last> Last! "),l("#if"),e("br",{style:{"line-height":"normal"}}),t(" <"),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@repeat"),t("> ")]),e("p",{style:{"line-height":"normal"}},[t(" <@repeat count=4 ; c, halfc>"),e("br",{style:{"line-height":"normal"}}),t(" ${c}. ${halfc}"),e("br",{style:{"line-height":"normal"}}),t(" <"),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@repeat"),t("> ")]),e("p",{style:{"line-height":"normal"}},[t(" <@repeat count=4>"),e("br",{style:{"line-height":"normal"}}),t(" Just repeat it..."),e("br",{style:{"line-height":"normal"}}),t(" <"),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"}},"/@repeat"),t("> ")]),e("p",{style:{"line-height":"normal"}},[t(" 在模板中定义变量"),e("br",{style:{"line-height":"normal"}}),t(" 在模板中定义的变量有三种类型："),e("br",{style:{"line-height":"normal"}}),t(" plain变量：可以在模板的任何地方访问，包括使用include指令插入的模板，使用assign指令创建和替换。"),e("br",{style:{"line-height":"normal"}}),t(" 局部变量：在宏定义体中有效，使用local指令创建和替换。"),e("br",{style:{"line-height":"normal"}}),t(" 循环变量：只能存在于指令的嵌套内容，由指令（如list）自动创建；宏的参数是局部变量，而不是循环变量"),e("br",{style:{"line-height":"normal"}}),t(" 局部变量隐藏（而不是覆盖）同名的plain变量；循环变量隐藏同名的局部变量和plain变量，下面是一个例子： ")]),e("p",{style:{"line-height":"normal"}},[t(' <#assign x = "plain">'),e("br",{style:{"line-height":"normal"}}),e("br",{style:{"line-height":"normal"}}),t(" ${x} <#-- we see the plain var. here --> ")]),e("p",{style:{"line-height":"normal"}},[t(" <@test/>"),e("br",{style:{"line-height":"normal"}}),t(" 6. ${x} <#-- the value of plain var. was not changed -->"),e("br",{style:{"line-height":"normal"}}),t(' <#list ["loop"] as x>'),e("br",{style:{"line-height":"normal"}}),t(" 7. ${x} <#-- now the loop var. hides the plain var. -->"),e("br",{style:{"line-height":"normal"}}),t(' <#assign x = "plain2"> <#-- replace the plain var, hiding does not mater here -->'),e("br",{style:{"line-height":"normal"}}),t(" 8. ${x} <#-- it still hides the plain var. -->"),e("br",{style:{"line-height":"normal"}}),l("#list"),e("br",{style:{"line-height":"normal"}}),t(" 9. ${x} <#-- the new value of plain var. -->"),e("br",{style:{"line-height":"normal"}}),t(" <#macro test>"),e("br",{style:{"line-height":"normal"}}),t(" 2. ${x} <#-- we still see the plain var. here -->"),e("br",{style:{"line-height":"normal"}}),t(' <#local x = "local">'),e("br",{style:{"line-height":"normal"}}),t(" 3. ${x} <#-- now the local var. hides it -->"),e("br",{style:{"line-height":"normal"}}),t(' <#list ["loop"] as x>'),e("br",{style:{"line-height":"normal"}}),t(" 4. ${x} <#-- now the loop var. hides the local var. -->"),e("br",{style:{"line-height":"normal"}}),l("#list"),e("br",{style:{"line-height":"normal"}}),t(" 5. ${x} <#-- now we see the local var. again -->"),e("br",{style:{"line-height":"normal"}}),l("#macro"),e("br",{style:{"line-height":"normal"}}),t(" 输出结果："),e("br",{style:{"line-height":"normal"}}),t(" 1. plain"),e("br",{style:{"line-height":"normal"}}),t(" 2. plain"),e("br",{style:{"line-height":"normal"}}),t(" 3. local"),e("br",{style:{"line-height":"normal"}}),t(" 4. loop"),e("br",{style:{"line-height":"normal"}}),t(" 5. local"),e("br",{style:{"line-height":"normal"}}),t(" 6. plain"),e("br",{style:{"line-height":"normal"}}),t(" 7. loop"),e("br",{style:{"line-height":"normal"}}),t(" 8. loop"),e("br",{style:{"line-height":"normal"}}),t(" 9. plain2"),e("br",{style:{"line-height":"normal"}}),t(" 内部循环变量隐藏同名的外部循环变量，如："),e("br",{style:{"line-height":"normal"}}),t(' <#list ["loop 1"] as x>'),e("br",{style:{"line-height":"normal"}}),t(" ${x}"),e("br",{style:{"line-height":"normal"}}),t(' <#list ["loop 2"] as x>'),e("br",{style:{"line-height":"normal"}}),t(" ${x}"),e("br",{style:{"line-height":"normal"}}),t(' <#list ["loop 3"] as x>'),e("br",{style:{"line-height":"normal"}}),t(" ${x}"),e("br",{style:{"line-height":"normal"}}),l("#list"),e("br",{style:{"line-height":"normal"}}),t(" ${x}"),e("br",{style:{"line-height":"normal"}}),l("#list"),e("br",{style:{"line-height":"normal"}}),t(" ${x}"),e("br",{style:{"line-height":"normal"}}),l("#list"),e("br",{style:{"line-height":"normal"}}),t(" 输出结果："),e("br",{style:{"line-height":"normal"}}),t(" loop 1"),e("br",{style:{"line-height":"normal"}}),t(" loop 2"),e("br",{style:{"line-height":"normal"}}),t(" loop 3"),e("br",{style:{"line-height":"normal"}}),t(" loop 2"),e("br",{style:{"line-height":"normal"}}),t(" loop 1"),e("br",{style:{"line-height":"normal"}}),t(" 模板中的变量会隐藏（而不是覆盖）数据模型中同名变量，如果需要访问数据模型中的同名变量，使用特殊变量global，下面的例子假设数据 ")]),e("p",{style:{"line-height":"normal"}},[t(" 模型中的user的值是Big Joe："),e("br",{style:{"line-height":"normal"}}),t(' <#assign user = "Joe Hider">'),e("br",{style:{"line-height":"normal"}}),t(" ${user}          <#-- prints: Joe Hider -->"),e("br",{style:{"line-height":"normal"}}),t(" ${.globals.user} <#-- prints: Big Joe -->"),e("br",{style:{"line-height":"normal"}}),t(" 名字空间"),e("br",{style:{"line-height":"normal"}}),t(" 通常情况，只使用一个名字空间，称为主名字空间，但为了创建可重用的宏、变换器或其它变量的集合（通常称库），必须使用多名字空间， ")]),e("p",{style:{"line-height":"normal"}},[t(" 其目的是防止同名冲突"),e("br",{style:{"line-height":"normal"}}),t(" 创建库"),e("br",{style:{"line-height":"normal"}}),t(" 下面是一个创建库的例子（假设保存在lib/my_test.ftl中）："),e("br",{style:{"line-height":"normal"}}),t(" <#macro copyright date> ")]),e("p",null,[t(" Copyright (C) ${date} Julia Smith. All rights reserved."),e("br",{style:{"line-height":"normal"}}),e("br"),t(" Email: ${mail} ")]),e("br",{style:{"line-height":"normal"}}),l("#macro"),e("br",{style:{"line-height":"normal"}}),t(' <#assign mail = "'),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"},href:"mailto:jsmith@acme.com"},"jsmith@acme.com"),t('">'),e("br",{style:{"line-height":"normal"}}),t(" 使用import指令导入库到模板中，Freemarker会为导入的库创建新的名字空间，并可以通过import指令中指定的散列变量访问库中的变量："),e("br",{style:{"line-height":"normal"}}),t(' <#import "/lib/my_test.ftl" as my>'),e("br",{style:{"line-height":"normal"}}),t(' <#assign mail="'),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"},href:"mailto:fred@acme.com"},"fred@acme.com"),t('">'),e("br",{style:{"line-height":"normal"}}),t(' <@my.copyright date="1999-2002"/>'),e("br",{style:{"line-height":"normal"}}),t(" ${my.mail}"),e("br",{style:{"line-height":"normal"}}),t(" ${mail}"),e("br",{style:{"line-height":"normal"}}),t(" 输出结果："),e("br",{style:{"line-height":"normal"}}),e("p",null,[t(" Copyright (C) 1999-2002 Julia Smith. All rights reserved."),e("br",{style:{"line-height":"normal"}}),e("br"),t(" Email: "),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"},href:"mailto:jsmith@acme.com</p"},[t("jsmith@acme.com>"),e("br",{style:{"line-height":"normal"}})]),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"},href:"mailto:jsmith@acme.com"},"jsmith@acme.com"),e("br",{style:{"line-height":"normal"}}),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"},href:"mailto:fred@acme.com"},"fred@acme.com"),e("br",{style:{"line-height":"normal"}}),t(" 可以看到例子中使用的两个同名变量并没有冲突，因为它们位于不同的名字空间。还可以使用assign指令在导入的名字空间中创建或替代变量 ")]),e("p",{style:{"line-height":"normal"}},[t(" ，下面是一个例子："),e("br",{style:{"line-height":"normal"}}),t(' <#import "/lib/my_test.ftl" as my>'),e("br",{style:{"line-height":"normal"}}),t(" ${my.mail}"),e("br",{style:{"line-height":"normal"}}),t(' <#assign mail="'),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"},href:"mailto:jsmith@other.com"},"jsmith@other.com"),t('" in my>'),e("br",{style:{"line-height":"normal"}}),t(" ${my.mail}"),e("br",{style:{"line-height":"normal"}}),t(" 输出结果："),e("br",{style:{"line-height":"normal"}}),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"},href:"mailto:jsmith@acme.com"},"jsmith@acme.com"),e("br",{style:{"line-height":"normal"}}),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"},href:"mailto:jsmith@other.com"},"jsmith@other.com"),e("br",{style:{"line-height":"normal"}}),t(" 数据模型中的变量任何地方都可见，也包括不同的名字空间，下面是修改的库："),e("br",{style:{"line-height":"normal"}}),t(" <#macro copyright date> ")]),e("p",null," Copyright (C) ${date} ${user}. All rights reserved. "),e("br",{style:{"line-height":"normal"}}),l("#macro"),e("br",{style:{"line-height":"normal"}}),t(' <#assign mail = "'),e("a",{style:{color:"#446400","font-size":"14px","font-family":"Verdana, Arial, Helvetica, sans-serif","font-weight":"normal","text-decoration":"none","line-height":"normal"},href:"mailto:%24%7Buser%7D@acme.com"},"${user}@acme.com"),t('">'),e("br",{style:{"line-height":"normal"}}),t(" 假设数据模型中的user变量的值是Fred，则下面的代码："),e("br",{style:{"line-height":"normal"}}),t(' <#import "/lib/my_test.ftl" as my>'),e("br",{style:{"line-height":"normal"}}),t(' <@my.copyright date="1999-2002"/> '),e("br",{style:{"line-height":"normal"}}),t(" ${my.mail} "),e("br",{style:{"line-height":"normal"}}),t(" 输出结果： "),e("br",{style:{"line-height":"normal"}}),e("p",null," Copyright (C) 1999-2002 Fred. All rights reserved. "),t(" Fred@acme.com "),e("p",null,[e("br")]),e("p",{style:{"line-height":"normal"}},[e("br")]),e("p",{style:{"line-height":"normal"}},[e("br",{style:{"line-height":"normal"}}),t(" 四．Freemarker与Struts结合 ")]),e("p",{style:{"line-height":"normal"}}," 1.输出文件换成以ftl格式的文件 "),e("p",{style:{"line-height":"normal"}}," E.G. "),e("p",{style:{"line-height":"normal"}},[e("a",{name:"bookActionForm"})]),e("p",{style:{"line-height":"normal"}},' validate="true"> '),e("p",{style:{"line-height":"normal"}},' <forward name="list" path="/index.ftl"></forward> '),e("p",{style:{"line-height":"normal"}},[e("br")]),e("p",{style:{"line-height":"normal"}}," 2.使用struts，jstl等标签 "),e("p",{style:{"line-height":"normal"}},' a.导入à<#global html=JspTaglibs["/WEB-INF/tags/struts-html.tld"]> '),e("p",{style:{"line-height":"normal"}},[t(' 或<#assign html=JspTaglibs["/WEB-INF/struts-html.tld"]>'),e("br",{style:{"line-height":"normal"}}),t(' <#assign bean=JspTaglibs["/WEB-INF/struts-bean.tld"]>'),e("br",{style:{"line-height":"normal"}}),t(' <#assign logic=JspTaglibs["/WEB-INF/struts-logic.tld"]> ')]),e("p",{style:{"line-height":"normal"}},[t(' b.使用à<@bean.page id="request" property="request"/>,'),e("br",{style:{"line-height":"normal"}}),t(' <@html.text property="vo.newsTitle" styleClass="input1"/> ')]),e("p",{style:{"line-height":"normal"}}," 五．用Freemarker生成Html页面 "),e("p",{style:{"line-height":"normal"}}," 例子：MakeFileManager.java "),e("p",{style:{"line-height":"normal"}},[e("br")]),e("p",{style:{"line-height":"normal"}},[e("pre",{class:"prettyprint lang-java linenums"},`package example;
import freemarker.template.Configuration;
import java.text.SimpleDateFormat;
import java.io.File;
import freemarker.template.DefaultObjectWrapper;
import java.util.Map;
import java.util.HashMap;
import java.io.Writer;
import java.io.OutputStreamWriter;
import java.io.FileOutputStream;
import freemarker.template.TemplateException;
import java.io.IOException;
import freemarker.template.Template;
public class MakeFileManager {
public String make(Book book, BookFtl bookFtl) {
Configuration cfg = new Configuration();//配制
String realPath = bookFtl.getRealPath();
String templatePath = realPath + "/WEB-INF/templates/book";
String cDateStr = "book/" +
new SimpleDateFormat("yyyyMMdd").format(new java.util.
Date());
String filePostfix = ".html";
String path = realPath + "/" + cDateStr;
String fileTimeName = new SimpleDateFormat("yyyyMMddhhmmss").format(new
java.util.Date());
String returnFileName = cDateStr + "/" + fileTimeName + filePostfix;
String fileName = "";
File bookDir = new File(path);
if (bookDir.exists()) {
fileName = path + "/" + fileTimeName + filePostfix;
} else {
bookDir.mkdirs();
fileName = path + "/" + fileTimeName + filePostfix;
}
try {
//设置freemarker的参数
cfg.setNumberFormat("0.##########");//生成html文件时web.xml配制无效
//cfg.setEncoding();
cfg.setDirectoryForTemplateLoading(new File(templatePath));
cfg.setObjectWrapper(new DefaultObjectWrapper());
Template bookTemplate = cfg.getTemplate(bookFtl.getTemplateName());//模板对象
Map root = new HashMap();
root.put("book", book);
root.put("book2",book);
Writer out = new OutputStreamWriter(new FileOutputStream(fileName));
try {
bookTemplate.process(root, out);
} catch (TemplateException e) {
e.printStackTrace();
}
out.flush();
} catch (IOException e) {
e.printStackTrace();
}
return returnFileName;
}
} 
`)]),e("p",{style:{"line-height":"normal"}},[e("span",null,[t("表达式是"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("的核心功能，"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("中的插值支持多种表达式。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"一、直接指定值"),e("br",{style:{"margin-bottom":"20px"}}),t(" 直接指定值可以是字符串、数值、布尔值、集合及Map对象。"),e("br",{style:{"margin-bottom":"20px"}}),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"1. 字符串"),e("br",{style:{"margin-bottom":"20px"}}),t(' 直接指定字符串值使用单引号或双引号限定。字符串中可以使用转义字符”\\"。如果字符串内有大量的特殊字符，则可以在引号的前面加上一个字母r，则字符串内的所有字符都将直接输出。'),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"2. 数值"),e("br",{style:{"margin-bottom":"20px"}}),t(" 数值可以直接输入，不需要引号。"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("不支持科学计数法。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"3. 布尔值 "),e("br",{style:{"margin-bottom":"20px"}}),t(" 直接使用true或false，不使用引号。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"4. 集合"),e("br",{style:{"margin-bottom":"20px"}}),t(" 集合用中括号包括，集合元素之间用逗号分隔。"),e("br",{style:{"margin-bottom":"20px"}}),t(" 使用数字范围也可以表示一个数字集合，如1..5等同于集合[1, 2, 3, 4, 5]；同样也可以用5..1来表示[5, 4, 3, 2, 1]。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"5. Map对象"),e("br",{style:{"margin-bottom":"20px"}}),t(" Map对象使用花括号包括，Map中的key-value对之间用冒号分隔，多组key-value对之间用逗号分隔。"),e("br",{style:{"margin-bottom":"20px"}}),t(" 注意：Map对象的key和value都是表达式，但key必须是字符串。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"二、输出变量值"),e("br",{style:{"margin-bottom":"20px"}}),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("的表达式输出变量时，这些变量可以是顶层变量，也可以是Map对象的变量，还可以是集合中的变量，并可以使用点（.）语法来访问Java对象的属性。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"1. 顶层变量"),e("br",{style:{"margin-bottom":"20px"}}),t(" 所谓顶层变量就是直接放在数据模型中的值。输出时直接用${variableName}即可。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"2. 输出集合元素"),e("br",{style:{"margin-bottom":"20px"}}),t(" 可以根据集合元素的索引来输出集合元素，索引用中括号包括。如： 输出[“1”， “2”， “3”]这个名为number的集合，可以用${number[0]}来输出第一个数字。"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("还支持用number[1..2]来表示原集合的子集合[“2”， “3”]。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"3. 输出Map元素"),e("br",{style:{"margin-bottom":"20px"}}),t(" 对于JavaBean实例，"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("一样把它看作属性为key，属性值为value的Map对象。"),e("br",{style:{"margin-bottom":"20px"}}),t(" 输出Map对象时，可以使用点语法或中括号语法，如下面的几种写法的效果是一样的："),e("br",{style:{"margin-bottom":"20px"}}),t(" book.author.name "),e("br",{style:{"margin-bottom":"20px"}}),t(' book.author["name"] '),e("br",{style:{"margin-bottom":"20px"}}),t(' book["author"].name '),e("br",{style:{"margin-bottom":"20px"}}),t(' book["author"]["name"] '),e("br",{style:{"margin-bottom":"20px"}}),t(" 使用点语法时，变量名字有和顶层变量一样的限制，但中括号语法没有任何限制。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"三、字符串操作"),e("br",{style:{"margin-bottom":"20px"}}),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"1. 字符串连接"),e("br",{style:{"margin-bottom":"20px"}}),t(" 字符串连接有两种语法："),e("br",{style:{"margin-bottom":"20px"}}),t(" （1） 使用${..}或#{..}在字符串常量内插入表达式的值；"),e("br",{style:{"margin-bottom":"20px"}}),t(" (2)  直接使用连接运算符“+”连接字符串。"),e("br",{style:{"margin-bottom":"20px"}}),t(" 如，下面两种写法等效："),e("br",{style:{"margin-bottom":"20px"}}),t(' ${"Hello, ${user}"} '),e("br",{style:{"margin-bottom":"20px"}}),t(' ${"Hello, " + user + "!"} '),e("br",{style:{"margin-bottom":"20px"}}),t(" 有一点需要注意： ${..}只能用于文本部分作为插值输出，而不能用于比较等其他用途，如："),e("br",{style:{"margin-bottom":"20px"}}),t(" <#if ${isBig}>Wow! "),l("#if"),e("br",{style:{"margin-bottom":"20px"}}),t(' <#if "${isBig}">Wow! '),l("#if"),e("br",{style:{"margin-bottom":"20px"}}),t(" 应该写成："),e("br",{style:{"margin-bottom":"20px"}}),t(" <#if isBig>Wow! "),l("#if"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"2. 截取子串"),e("br",{style:{"margin-bottom":"20px"}}),t(" 截取子串可以根据字符串的索引来进行，如果指定一个索引值，则取得字符串该索引处的字符；如果指定两个索引值，则截取两个索引中间的字符串子串。如："),e("br",{style:{"margin-bottom":"20px"}}),t(' <#assign number="01234">'),e("br",{style:{"margin-bottom":"20px"}}),t(" ${number[0]} <#-- 输出字符0 -->"),e("br",{style:{"margin-bottom":"20px"}}),t(" ${number[0..3]} <#-- 输出子串“0123” -->"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},[t("四、集合连接操作"),e("br",{style:{"margin-bottom":"20px"}})]),t(" 连接集合的运算符为“+”"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"五、Map连接操作"),e("br",{style:{"margin-bottom":"20px"}}),t(" Map连接操作的运算符为“+”"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"六、算术运算符"),e("br",{style:{"margin-bottom":"20px"}}),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("表达式中支持“+”、“－”、“*”、“/”、“%”运算符。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"七、比较运算符"),e("br",{style:{"margin-bottom":"20px"}}),t(" 表达式中支持的比较运算符有如下几种："),e("br",{style:{"margin-bottom":"20px"}}),t(" 1. =（或者==）： 判断两个值是否相等；"),e("br",{style:{"margin-bottom":"20px"}}),t(" 2. !=： 判断两个值是否不相等；"),e("br",{style:{"margin-bottom":"20px"}}),t(" 注： =和!=可以用作字符串、数值和日期的比较，但两边的数据类型必须相同。而且"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("的比较是精确比较，不会忽略大小写及空格。"),e("br",{style:{"margin-bottom":"20px"}}),t(" 3. >（或者gt）： 大于"),e("br",{style:{"margin-bottom":"20px"}}),t(" 4. >=（或者gte）： 大于等于"),e("br",{style:{"margin-bottom":"20px"}}),t(" 5. <（或者lt）： 小于"),e("br",{style:{"margin-bottom":"20px"}}),t(" 6. <=（或者lte）： 小于等于"),e("br",{style:{"margin-bottom":"20px"}}),t(" 注： 上面这些比较运算符可以用于数字和日期，但不能用于字符串。大部分时候，使用gt比>有更好的效果，因为"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("会把>解释成标签的结束字符。可以使用括号来避免这种情况，如：<#if (x>y)>。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"八、逻辑运算符"),e("br",{style:{"margin-bottom":"20px"}}),t(" 1. &&： 逻辑与；"),e("br",{style:{"margin-bottom":"20px"}}),t(" 2. ||： 逻辑或；"),e("br",{style:{"margin-bottom":"20px"}}),t(" 3. !： 逻辑非"),e("br",{style:{"margin-bottom":"20px"}}),t(" 逻辑运算符只能用于布尔值。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"九、内建函数"),e("br",{style:{"margin-bottom":"20px"}}),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("提供了一些内建函数来转换输出，可以在任何变量后紧跟?，?后紧跟内建函数，就可以通过内建函数来转换输出变量。字符串相关常用的内建函数："),e("br",{style:{"margin-bottom":"20px"}}),t(" 1. html： 对字符串进行HTML编码；"),e("br",{style:{"margin-bottom":"20px"}}),t(" 2. cap_first： 使字符串第一个字母大写；"),e("br",{style:{"margin-bottom":"20px"}}),t(" 3. lower_case： 将字符串转成小写；"),e("br",{style:{"margin-bottom":"20px"}}),t(" 4. upper_case： 将字符串转成大写；集合相关常用的内建函数："),e("br",{style:{"margin-bottom":"20px"}}),t(" 1. size： 获得集合中元素的个数；数字值相关常用的内建函数："),e("br",{style:{"margin-bottom":"20px"}}),t(" 1. int： 取得数字的整数部分。"),e("strong",{style:{"font-style":"inherit","font-weight":"bold"}},"十、空值处理运算符"),e("br",{style:{"margin-bottom":"20px"}}),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("的变量必须赋值，否则就会抛出异常。而对于"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("来说，null值和不存在的变量是完全一样的，因为"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("无法理解null值。"),e("br",{style:{"margin-bottom":"20px"}}),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"FreeMarker"),t("提供两个运算符来避免空值："),e("br",{style:{"margin-bottom":"20px"}}),t(" 1. !： 指定缺失变量的默认值；"),e("br",{style:{"margin-bottom":"20px"}}),t(" 2. ??：判断变量是否存在。"),e("br",{style:{"margin-bottom":"20px"}}),t(" !运算符有两种用法：variable!或variable!defaultValue。第一种用法不给变量"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"指定默认值"),t("，表明默认值是空字符串、长度为0的集合、或长度为0的Map对象。"),e("br",{style:{"margin-bottom":"20px"}}),t(" 使用!运算符"),e("span",{class:"highlight",style:{"background-color":"#ffff99","padding-top":"0px","padding-right":"1px","padding-bottom":"0px","padding-left":"1px"}},"指定默认值"),t("并不要求默认值的类型和变量类型相同。"),e("br",{style:{"margin-bottom":"20px"}}),t(" ??运算符返回布尔值，如：variable??，如果变量存在，返回true，否则返回false。")])])])])])])],-1),g=e("p",null,[e("br")],-1),y=[a,h,s,m,g];function b(p,f){return i(),r("div",null,y)}const c=n(o,[["render",b],["__file","2010-25.html.vue"]]);export{c as default};
