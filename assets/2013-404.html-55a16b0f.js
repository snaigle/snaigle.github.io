import{_ as t,p as r,q as e,a1 as o}from"./framework-5866ffd3.js";const l={},p=o(`<p> maven默认有一个中央服务器，定义在<em>\${M2_HOME}/lib/maven-2.0.10-uber.jar里</em></p><p> maven的全局配制文件为 \${M2_HOME}/conf/settings.xml </p><p> maven的用户级配制文件在 \${user.home}/.m2/settings.xml </p><p> 这里可以 </p><p> 1. 修改 localRepository的路径，默认在 \${user.home}/.m2/repository下 </p><p><br></p><pre> &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;
&lt;offline&gt;false&lt;/offline&gt;</pre><p> 2.  server，在分发验证用户密码 </p><p><br></p><pre>&lt;server&gt;
      &lt;id&gt;deploymentRepo&lt;/id&gt;
      &lt;username&gt;repouser&lt;/username&gt;
      &lt;password&gt;repopwd&lt;/password&gt;
    &lt;/server&gt;</pre><br><p> 3. mirror ，设置repository的镜像，mirrorOf是指定哪个repository，*指所有repository </p><p><br></p><pre>&lt;mirror&gt;
      &lt;id&gt;mirrorId&lt;/id&gt;
      &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;
      &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;
      &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;
    &lt;/mirror&gt;</pre><br><p> 4. profile 可以预先定义 repository和 pluginRepository，并可以通过activeProfiles指定哪个profile生效，也可以通过条件触发 </p><p><br></p><pre>&lt;profile&gt;
      &lt;id&gt;jdk-1.4&lt;/id&gt;
      &lt;activation&gt;
        &lt;jdk&gt;1.4&lt;/jdk&gt;
      &lt;/activation&gt;
      &lt;repositories&gt;
        &lt;repository&gt;
          &lt;id&gt;jdk14&lt;/id&gt;
          &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt;
          &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt;
          &lt;layout&gt;default&lt;/layout&gt;
          &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt;
        &lt;/repository&gt;
      &lt;/repositories&gt;
    &lt;/profile&gt;
    &lt;activeProfiles&gt;
      &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt;
      &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt;
    &lt;/activeProfiles&gt;</pre><br><p> 5. repository定义时可以指定是否需要从snapshot和 release取得资源 </p><p> 6. 打包，maven会识别项目version是否含有 -SNAPSHOT 后缀，有的话则在deploy时自动将该包upload到SNAPSHOT repository中，若没有则upload 到 release repository中。 </p><p> 7. 项目构建时maven会先从local repository中取jar，如果没有则去remote中取得并缓存到local中，若该包version后缀为-SNAPSHOT,那么每次构建时都会自动去SNAPSHOT repository中抓取，release version有缓存就用缓存 </p><p> 8. install会将构件安装到 本地库中，deploy将构件安装到远程库中 </p><p>     </p><pre>mvn install:install-file  -Dfile=path-to-your-artifact-jar -DgroupId=your.groupId  -DartifactId=your-artifactId  -Dversion=your-version -Dpackaging=jar -DgeneratePom=true
<p>mvn deploy:deploy-file -DrepositoryId=your-repository-id -Durl=dav:your-repository-url  -DgroupId=your.groupId  -DartifactId=your-artifactId -Dversion=your-version -Dpackaging=jar  -Dfile=jar-name</p>
</pre><p><br></p>`,26),i=[p];function a(n,s){return r(),e("div",null,i)}const d=t(l,[["render",a],["__file","2013-404.html.vue"]]);export{d as default};
