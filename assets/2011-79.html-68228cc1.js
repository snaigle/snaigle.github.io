import{_ as n,p as s,q as o,t,R as e}from"./framework-5866ffd3.js";const _={},c=e("p",null,"spring的事件处理  是这样做的: 所有需要监听或发布事件的service都要实现 applicationListener 接口",-1),l=e("p",null,"如果有事件 发布时，就调用所有的 service的 onEvent()方法。这样处理很方便的，只是觉得不够完美，也会有一些性能浪费。",-1),i=e("p",null," ",-1),r=e("p",null,"自己的设想： 在 仍然需要实现 applicationListener 接口， 在实现类中 用注解标明自己需要监听的事件",-1),a=e("p",null,"这样在初始化的时候就可以将该事件和处理类对应起来， 当有该事件触发时，就去找对应的处理类直接进行处理。",-1),p=e("p",null,"这样比上面那种要精确一些了",-1);function d(u,h){return s(),o("div",null,[c,t(),l,t(),i,t(),r,t(),a,t(),p])}const m=n(_,[["render",d],["__file","2011-79.html.vue"]]);export{m as default};
