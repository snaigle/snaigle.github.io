import{_ as e,p as a,q as t,a1 as n}from"./framework-5866ffd3.js";const s={},i=n(`<h3 id="安装certbot-auto" tabindex="-1"><a class="header-anchor" href="#安装certbot-auto" aria-hidden="true">#</a> 安装certbot-auto</h3><h4 id="方法一" tabindex="-1"><a class="header-anchor" href="#方法一" aria-hidden="true">#</a> 方法一</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget https://dl.eff.org/certbot-auto
chmod a+x certbot-auto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法二" tabindex="-1"><a class="header-anchor" href="#方法二" aria-hidden="true">#</a> 方法二</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git clone https://github.com/letsencrypt/letsencrypt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="申请证书" tabindex="-1"><a class="header-anchor" href="#申请证书" aria-hidden="true">#</a> 申请证书</h3><h4 id="webroot方式-适合80和443端口被占用的情况" tabindex="-1"><a class="header-anchor" href="#webroot方式-适合80和443端口被占用的情况" aria-hidden="true">#</a> webroot方式， 适合80和443端口被占用的情况</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>certbot-auto certonly --email op@helao.net --agree-tos \\
--webroot -w /data/www/helao.net -d helao.net -d www.helao.net
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="standalone-在目标机上直接开启80端口进行验证-适合空机器" tabindex="-1"><a class="header-anchor" href="#standalone-在目标机上直接开启80端口进行验证-适合空机器" aria-hidden="true">#</a> standalone，在目标机上直接开启80端口进行验证，适合空机器</h4><h4 id="manual-交互式申请-需要把目标文件放到对应的机器上即可-适合申请机器和目标机器不一样的情况" tabindex="-1"><a class="header-anchor" href="#manual-交互式申请-需要把目标文件放到对应的机器上即可-适合申请机器和目标机器不一样的情况" aria-hidden="true">#</a> manual ，交互式申请，需要把目标文件放到对应的机器上即可，适合申请机器和目标机器不一样的情况</h4><h3 id="生成dhparams" tabindex="-1"><a class="header-anchor" href="#生成dhparams" aria-hidden="true">#</a> 生成dhparams</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mkdir -p /etc/ssl/certs/
openssl dhparam -out /etc/ssl/certs/dhparams.pem 2048
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在nginx-conf中开启ssl" tabindex="-1"><a class="header-anchor" href="#在nginx-conf中开启ssl" aria-hidden="true">#</a> 在nginx.conf中开启ssl</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssl_certificate /etc/letsencrypt/live/helao.net/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/helao.net/privkey.pem;
ssl_dhparam /etc/ssl/certs/dhparams.pem;

ssl_ciphers &#39;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA&#39;;

ssl_prefer_server_ciphers  on;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在nginx-conf将http-重定向到https" tabindex="-1"><a class="header-anchor" href="#在nginx-conf将http-重定向到https" aria-hidden="true">#</a> 在nginx.conf将http 重定向到https</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>return 301 https://$host$request_uri;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="自动续期证书" tabindex="-1"><a class="header-anchor" href="#自动续期证书" aria-hidden="true">#</a> 自动续期证书</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>certbot renew --pre-hook &quot;service nginx stop&quot; \\
--post-hook &quot;service nginx start&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,18),d=[i];function r(l,c){return a(),t("div",null,d)}const o=e(s,[["render",r],["__file","2016-12-09-install-https-certs-by-letsencrypt.html.vue"]]);export{o as default};
