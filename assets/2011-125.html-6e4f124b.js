import{_ as e,p as n,q as l,t,R as s}from"./framework-5866ffd3.js";const o={},_=s("p",null,"grails 中的gorm框架是基于 hibernage，就是在hibernate基础上进行了一层薄薄的封装。",-1),p=s("p",null,"下面主要讲讲 几种关系",-1),c=s("p",null," 1，1对1",-1),a=s("p",null,"    在 class A {",-1),i=s("p",null,[s("span",{style:{"white-space":"pre"}}),t("B b")],-1),h=s("p",null,"      }",-1),d=s("p",null,[t("   "),s("span",{style:{"white-space":"pre"}}),t("class B{}")],-1),u=s("p",null,"    默认会级联  插入和更新",-1),r=s("p",null,"    当B 指定 static belongsTo 时，表示指定owner， 这样在删除A时 会将B级联删除",-1),y=s("p",null,"2，一对多",-1),w=s("p",null,"      class  A{",-1),B=s("p",null,[s("span",{style:{"white-space":"pre"}}),t("static hasMany = [bs:B]")],-1),b=s("p",null,[s("span",{style:{"white-space":"pre"}}),t("}")],-1),f=s("p",null,[s("span",{style:{"white-space":"pre"}}),t("class B{")],-1),m=s("p",null,[s("span",{style:{"white-space":"pre"}})],-1),g=s("p",null,[s("span",{style:{"white-space":"pre"}}),t("}")],-1),A=s("p",null," ",-1),x=s("p",null,"3，多对多",-1),M=s("p",null,[s("span",{style:{"white-space":"pre"}}),t("class A{")],-1),T=s("p",null,[s("span",{style:{"white-space":"pre"}}),t("static hasMany = [bs:B]")],-1),k=s("p",null,"}",-1),v=s("p",null,[s("span",{style:{"white-space":"pre"}}),t("class B{")],-1),N=s("p",null,[s("span",{style:{"white-space":"pre"}}),t("static hasMany = [as:A]")],-1),V=s("p",null,"}",-1),q=s("p",null,"必须要指定belongsTo 才可以，这样就能进行 级联插入和更新",-1),E=s("p",null,"多对多 删除时 ，会自动将关联表删除，而不会将 对应表中的数据删除，这需要手动处理",-1),R=s("p",null," ",-1),j=s("p",null,"还有一些 单向关联和双向关联的概念，明天再仔细整理一下再看",-1);function z(C,D){return n(),l("div",null,[_,t(),p,t(),c,t(),a,t(),i,t(),h,t(),d,t(),u,t(),r,t(),y,t(),w,t(),B,t(),b,t(),f,t(),m,t(),g,t(),A,t(),x,t(),M,t(),T,t(),k,t(),v,t(),N,t(),V,t(),q,t(),E,t(),R,t(),j])}const G=e(o,[["render",z],["__file","2011-125.html.vue"]]);export{G as default};
