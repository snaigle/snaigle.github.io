import{_ as o,p as l,q as i,R as t,t as e,a1 as n}from"./framework-5866ffd3.js";const a={},s=t("div",null,[t("div",{style:{"margin-left":"0px !important"}},[t("div",null,[t("table",{cellspacing:"0",cellpadding:"0",style:{"font-size":"13px"}},[t("tbody",null,[t("tr",null,[t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left",color:"#E6E1DC"}},[t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"sudo"),e(),t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"apt-get install"),e(" git-core "),t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"git-svn"),e(" ruby rubygems ")])])])])])]),t("br")])],-1),r=t("div",null,[t("div",{style:{"margin-left":"0px !important"}},[t("div",null,[t("table",{cellspacing:"0",cellpadding:"0",style:{"font-size":"13px"}},[t("tbody",null,[t("tr",null,[t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px","text-align":"right",color:"#888888","background-color":"#EEEEEE"}},[t("div",{style:{"margin-left":"0px !important"}},[t("br")])]),t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left",color:"#E6E1DC"}},[t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"sudo"),e(" gem "),t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"install"),e(" svn2git --source http:"),t("span",{style:{"line-height":"1.4em"}},"//"),e("gemcutter.org ")])])])])])]),t("br")])],-1),c=t("div",null,[t("div",{style:{"margin-left":"0px !important"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left","font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px",color:"#E6E1DC","background-color":"#2B2B2B"}},[t("table",{cellspacing:"0",cellpadding:"0",style:{"font-size":"13px"}},[t("tbody",null,[t("tr",null,[t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px","text-align":"right",color:"#888888","background-color":"#EEEEEE"}},[t("div",{style:{"margin-left":"0px !important"}},[t("br")])]),t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left",color:"#E6E1DC"}},[t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"sudo"),e(),t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"vim"),e(),t("span",{style:{"line-height":"1.4em"}},"/"),e("tmp"),t("span",{style:{"line-height":"1.4em"}},"/"),e("authors.txt ")])])])])])])])],-1),d=t("p",null," Then, for each author, you have to add the mapping between their Google Code and GitHub accounts. If a Google Code committer does not exist on GitHub, then you should map it to your own GitHub account. ",-1),p=t("div",null,[t("div",{style:{"margin-left":"0px !important"}},[t("div",null,[t("table",{cellspacing:"0",cellpadding:"0",style:{"font-size":"13px"}},[t("tbody",null,[t("tr",null,[t("td",null,[t("div",{style:{"margin-left":"0px !important"}},[t("br")])]),t("td",null,[t("div",null," (no author) = Frederick Giasson fred@f...com = Frederick Giasson ")])])])])])])],-1),m=n('<p> The format of this authors.txt file is: </p><div><div><div><table><tbody><tr><td><div><br></div></td><td style="font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;"><div style="margin-left:0px !important;text-align:left;color:#E6E1DC;"> Google-Account-Username = Name-Of-Author-On-GitHub </div></td></tr></tbody></table></div></div></div><p> Take note of the first Google Code committer (no author) mapping. This link is required for every authors.txt file. This placeholder is used to map the initial commit performed by the Google Code system. (When Google Code initializes a new project, it uses that username for creating the first commit of any project.) </p><p> When you are done, save the file. </p><p style="color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;"> Now that set up is complete, you are ready to migrate your project. First, let’s create the folder that will be used to checkout the SVN project on the server, and then to push it on GitHub. </p>',5),h=t("div",null,[t("div",null,[t("div",null,[t("table",{cellspacing:"0",cellpadding:"0",style:{"font-size":"13px"}},[t("tbody",null,[t("tr",null,[t("td",null,[t("div",{style:{"margin-left":"0px !important"}},[t("br")])]),t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left",color:"#E6E1DC"}},[t("span",{style:{"line-height":"1.4em",color:"#6E9CBE"}},"cd"),e(),t("span",{style:{"line-height":"1.4em"}},"/"),e("tmp"),t("span",{style:{"line-height":"1.4em"}},"/"),t("br"),t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"mkdir"),e(" myproject"),t("br"),t("span",{style:{"line-height":"1.4em",color:"#6E9CBE"}},"cd"),e(" myproject ")])])])])])])])],-1),g=t("p",null,[e(" In this tutorial, we have a normal migration scenario. However, your migration scenario may differ from this one. It is why I would suggest you check out the "),t("a",{href:"https://github.com/nirvdrum/svn2git"},"different scenarios that are supported by svn2git document"),e(" . Change the following command accordingly. Let’s migrate the Google Code SVN Project into the local Git repository: ")],-1),y=t("div",null,[t("div",{style:{"margin-left":"0px !important"}},[t("div",null,[t("table",{cellspacing:"0",cellpadding:"0",style:{"font-size":"13px"}},[t("tbody",null,[t("tr",null,[t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px","text-align":"right",color:"#888888","background-color":"#EEEEEE"}},[t("div",{style:{"margin-left":"0px !important"}},[t("br")])]),t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left",color:"#E6E1DC"}},[t("span",{style:{"line-height":"1.4em"}},"/"),e("var"),t("span",{style:{"line-height":"1.4em"}},"/"),e("lib"),t("span",{style:{"line-height":"1.4em"}},"/"),e("gems"),t("span",{style:{"line-height":"1.4em"}},"/"),t("span",{style:{"line-height":"1.4em",color:"#6D9CBE"}},"1.8"),t("span",{style:{"line-height":"1.4em"}},"/"),e("bin"),t("span",{style:{"line-height":"1.4em"}},"/"),e("svn2git http:"),t("span",{style:{"line-height":"1.4em"}},"//"),e("myproject.googlecode.com"),t("span",{style:{"line-height":"1.4em"}},"/"),t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"svn"),e(),t("span",{style:{"line-height":"1.4em"}},"--authors"),e(),t("span",{style:{"line-height":"1.4em"}},"/"),e("tmp"),t("span",{style:{"line-height":"1.4em"}},"/"),e("authors.txt "),t("span",{style:{"line-height":"1.4em"}},"--verbose")])])])])])])])],-1),u=t("p",{style:{color:"#444444","font-family":"'Lucida Grande', Verdana, Arial, sans-serif","text-align":"justify","background-color":"#FFFFFF"}}," Make sure that no errors have been reported during the process. If it is the case, then refer to the Possible Errors and Fixes section below to troubleshoot your issue. ",-1),f=t("p",{style:{color:"#444444","font-family":"'Lucida Grande', Verdana, Arial, sans-serif","text-align":"justify","background-color":"#FFFFFF"}},[e(" The next step is to create a new GitHub repository where to migrate the SVN project. "),t("a",{href:"https://github.com/repositories/new"},"Go to this GitHub page to create your new repository"),e(". Then you have to configure Git to add a remote link, from the local Git repository you created on your migration computer, to this remote GitHub repository: ")],-1),x=t("div",{style:{"margin-left":"0px",color:"#444444","font-family":"'Lucida Grande', Verdana, Arial, sans-serif","text-align":"justify","background-color":"#FFFFFF"}},[t("div",{style:{"margin-left":"0px !important"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left","font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px",color:"#E6E1DC","background-color":"#2B2B2B"}},[t("table",{cellspacing:"0",cellpadding:"0",style:{"font-size":"13px"}},[t("tbody",null,[t("tr",null,[t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px","text-align":"right",color:"#888888","background-color":"#EEEEEE"}},[t("div",{style:{"margin-left":"0px !important"}},[t("br")])]),t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left",color:"#E6E1DC"}},[t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"git remote"),e(" add origin "),t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"git"),t("span",{style:{"line-height":"1.4em"}},"@"),e("github.com:you-github-username"),t("span",{style:{"line-height":"1.4em"}},"/"),e("myproject.git ")])])])])])]),t("br")])],-1),b=t("p",{style:{color:"#444444","font-family":"'Lucida Grande', Verdana, Arial, sans-serif","text-align":"justify","background-color":"#FFFFFF"}}," Finally, let’s push the local Git repository master, branches and tags to GitHub. The first thing to push onto GitHub is the SVN’s trunk. It is done by running that command: ",-1),v=t("div",{style:{"margin-left":"0px",color:"#444444","font-family":"'Lucida Grande', Verdana, Arial, sans-serif","text-align":"justify","background-color":"#FFFFFF"}},[t("div",{style:{"margin-left":"0px !important"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left","font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px",color:"#E6E1DC","background-color":"#2B2B2B"}},[t("table",{cellspacing:"0",cellpadding:"0",style:{"font-size":"13px"}},[t("tbody",null,[t("tr",null,[t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px","text-align":"right",color:"#888888","background-color":"#EEEEEE"}},[t("div",{style:{"margin-left":"0px !important"}})]),t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left",color:"#E6E1DC"}},[t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"git push"),e(),t("span",{style:{"line-height":"1.4em"}},"-u"),e(" origin master ")])])])])])])])],-1),E=t("p",null," Then, if your project has multiple branches and tags, you can push them, one by one, using the same command. However, you will have to replace master by the name of that branch or tag. If you don’t know what is the exact name of these branches or tags, you can easily list all of them using this Git command: ",-1),C=t("div",null,[t("div",{style:{"margin-left":"0px !important"}},[t("div",null,[t("table",{cellspacing:"0",cellpadding:"0",style:{"font-size":"13px"}},[t("tbody",null,[t("tr",null,[t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px","text-align":"right",color:"#888888","background-color":"#EEEEEE"}},[t("div",{style:{"margin-left":"0px !important"}},[t("br")])]),t("td",{style:{"font-family":"Monaco, 'Lucida Console', monospace","font-size":"13px"}},[t("div",{style:{"margin-left":"0px !important","text-align":"left",color:"#E6E1DC"}},[t("span",{style:{"line-height":"1.4em",color:"#CC7833"}},"git show-ref")])])])])])])])],-1),_=[s,r,c,d,p,m,h,g,y,u,f,x,b,v,E,C];function F(G,k){return l(),i("div",null,_)}const L=o(a,[["render",F],["__file","2012-234.html.vue"]]);export{L as default};
