import{_ as t,p,q as a,a1 as r}from"./framework-5866ffd3.js";const i={},e=r("<p> jstat -gcutil pid </p><p> jmap -heap pid </p><p> jmap -histo pid </p><p> jstat -gc pid  </p><p> jstat -gcold pid </p><p> jstat -class pid </p><p> jstat -compile pid </p><p> jstat -gccapacity pid </p><p> jstat -printcompilation pid </p><p> jstat -gcnew pid </p><p><br></p><p> jmap -dump:format=b,file=<strong><strong></strong> </strong>m.dat<strong> </strong>pid  ||用jhat命令可以参看 jhat -port 5000 m.dat  </p><p><br></p><p>      -Xms：设置jvm内存的初始大小 <br>         -Xmx：设置jvm内存的最大值 <br>         -Xmn：设置新域的大小（这个似乎只对 jdk1.4来说是有效的，后来就废弃了） <br>         -Xss：设置每个线程的堆栈大小(也就是说,在相同物理内存下，减小这个值能生成更多的线程) <br>         -XX：NewRatio :设置新域与旧域之比，如-XX：NewRatio = 4就表示新域与旧域之比为1：4 <br>         -XX:NewSize：设置新域的初始值 <br>         -XX:MaxNewSize ：设置新域的最大值 <br>         -XX:MaxPermSize：设置永久域的最大值 <br>         -XX:SurvivorRatio=n:设置新域中Eden区与两个Survivor区的比值。（Eden区主要是用来存放新生的对象，而两个Survivor区则用来存放每次垃圾回收后存活下来的对象） </p>",14),o=[e];function s(c,n){return p(),a("div",null,o)}const m=t(i,[["render",s],["__file","2013-408.html.vue"]]);export{m as default};
