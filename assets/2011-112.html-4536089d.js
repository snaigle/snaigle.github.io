import{_ as o,p as s,q as l,t as n,R as t}from"./framework-5866ffd3.js";const e={},_=t("p",null,'对象有：  数组：[] ,  对象：{}, 字符串对象：" ", 方法：  function ,  类 ',-1),c=t("p",null,"          new   Array(x,x,x,x)   , Object()   String(),  Function  Class",-1),i=t("p",null,"typeof   obj:  显示对象的类型， 可以匹配的有 object，function,包括基本类型，不会区分 Array ,Array是object的一种。",-1),p=t("p",null,"instanceof   Type ,检测对象是什么类型，和java中的语法类似",-1),u=t("p",null," ",-1),h=t("p",null,"js判断对象的值时 ，首先调用valueOf() ，判断是否符合上下文，符合就返回，不符合就返回toString（） 值。需要覆盖toString 方法。",-1),r=t("p",null," ",-1),d=t("p",null,"==（类型不一致时 会做类型转换）  !=  ===(这个符号需要类型和值 完全相等)",-1),a=t("p",null," ",-1),f=t("p",null,"对象的 prototype 属性，感觉跟 父类的概念很类似",-1),x=t("p",null," ",-1),m=t("p",null,"function  有 call 和apply方法可以用来切换上下文",-1),y=t("p",null,"js中一切皆为对象",-1),j=t("p",null," ",-1),v=t("p",null,"还有 try， catch finally 语法，throw new Error（“”）；",-1),g=t("p",null,"列表中的常用方法：  concat（）， join（）， pop（），push（）",-1),w=t("p",null,"                              reverse() , slice();shift(),unshift,sort(),splice(),valueOf()",-1),b=t("p",null,"字符串也可以做下标 如  var a = new Array();  a['first'] = 'firse';",-1),S=t("p",null," ",-1),A=t("p",null,"js中的正则表达式 ：   ^ 表示开始，$表示结束,  * 0或者任意个，+ 表示 1个或多个， [] 从中取值，()表示分组，",-1),B=t("p",null," ",-1),O=t("p",null,"\\r 回车， \\n 换行， \\t 制表符，\\f 换页,\\x# 十六进制数， \\cX 控制字符",-1),k=t("p",null,"[...] 集合中的任一个， [^...] 不在集合中的任一个字符， . 除\\n 之外的任一个字符",-1),E=t("p",null,"\\w 所有的胆子，包括字符，数字及下划线， \\W不包括所有的胆子，\\w的补集",-1),N=t("p",null,"\\s 所有的空白字符，\\S 所有的非空白字符,\\d 所有的数字，\\D 所有的非数字,\\b 退格字符",-1),T=t("p",null,"{n} 重复n次，  () 分组的引用  \\1 以1开始",-1),V=t("p",null,"使用 正则   var regex = /pattern/",-1),q=t("p",null,"i，g,m 三种模式， i: 大小写开关， g 全文搜索开关，m: 多行搜索开关。",-1),C=t("p",null,"三个方法：  test(), exec();  compile();",-1),D=t("p",null,"String 中的方法 match(), replace (), search(), split()",-1),F=t("p",null," ",-1),R=t("p",null,"看了一个Y - 语法，晕死了，没看懂。闭包太能开发智力了",-1),W=t("p",null," ",-1),X=t("p",null," ",-1);function Y($,z){return s(),l("div",null,[_,n(),c,n(),i,n(),p,n(),u,n(),h,n(),r,n(),d,n(),a,n(),f,n(),x,n(),m,n(),y,n(),j,n(),v,n(),g,n(),w,n(),b,n(),S,n(),A,n(),B,n(),O,n(),k,n(),E,n(),N,n(),T,n(),V,n(),q,n(),C,n(),D,n(),F,n(),R,n(),W,n(),X])}const H=o(e,[["render",Y],["__file","2011-112.html.vue"]]);export{H as default};
