import{_ as s,p as n,q as o,t,R as e}from"./framework-5866ffd3.js";const _={},l=e("p",null,"当用spring的事物来管理 hibernate的session时，如果在事物中进行了 delete，save，update等操作，则连接不会释放，需要等到事物完成后才会进行关闭，所以当事物中有大量连接时 可想而知 ，这是个灾难。",-1),d=e("p",null,"按照我的想法，只对特定标识的 方法进行事物控制，这需要一个命名规则的问题。其他的方法不需要进行控制，没必要，要不然事物粒度太小了。",-1),p=e("p",null,"      我遇到了两个问题： updateA(  调用1000次  updateB)  ;  updateB（ updateC,updateD,...）",-1),a=e("p",null,"我将update开头的方法都进行了事物拦截，   updateB是private的。",-1),u=e("p",null,"每次我调用updateA时 ，就会产生几千个数据库连接 ，于是连接池爆满，然后挂掉。",-1),c=e("p",null,"这里是能理解的  ，updateB中产生了 数据操作， 于是连接不会关闭，等待事物关闭后才能释放。",-1),i=e("p",null," ",-1),r=e("p",null,"我去掉数据库连接池，采用直连的方式，连接数据库，则连接就不会超过10个，当数据库连接调用完后，连接释放了。",-1),h=e("p",null," ",-1),f=e("p",null,"我一直搞不明白这是怎么回事，貌似在 直连和连接池下，事物的实现方式是不一样的  。唉去研究他们的源码。郁闷",-1);function B(m,v){return n(),o("div",null,[l,t(),d,t(),p,t(),a,t(),u,t(),c,t(),i,t(),r,t(),h,t(),f])}const k=s(_,[["render",B],["__file","2010-44.html.vue"]]);export{k as default};
