<?xml version="1.0"  encoding="UTF-8"?>
<rss version="2.0">  <channel>
    <title>韭菜盒子</title>
    <link>https://helao.net</link>
    <pubDate>12 Oct 21 13:28 CST</pubDate>
    <item>
      <title>浅析HTTP(S)抓包</title>
      <link>https://helao.net/2021/how-to-capture-http-request.html</link>
      <pubDate>2021-05-14 02:19:00 +0800</pubDate>
      <description>&lt;h3&gt;背景&lt;/h3&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;常用抓包工具：charles,fiddler,mitm等，&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;http：设置系统代理&lt;/li&gt;&#xA;&lt;li&gt;https:  导入根证书&lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/li&gt;&#xA;&lt;li&gt;为什么有些app上抓不到包&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;no-proxy , 原因：httpclient实现比较多，并不能保证都完整支持http协议规范&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;drony,Thor,surge 模拟vpn网络，拦截请求后转发到代理服务&lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/li&gt;&#xA;&lt;li&gt;ssl pinning，例：nodejs 自带根证书，不使用操作系统中的根证书&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;根证书&lt;/li&gt;&#xA;&lt;li&gt;https证书校验：可考虑关闭https 证书校验&lt;/li&gt;&#xA;&lt;li&gt;使用http请求&lt;/li&gt;&#xA;&lt;li&gt;导入生产环境的证书（不安全）&lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h3&gt;实现思路&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;目标&lt;/h4&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;多租户&lt;/li&gt;&#xA;&lt;li&gt;证书安全&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h4&gt;思路&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram&#xA;user -&amp;gt;&amp;gt; proxy: new req&#xA;proxy -&amp;gt;&amp;gt;proxy: 提取sni ext，判断是否包含此域名证书&#xA;proxy -&amp;gt;&amp;gt; capture-server: 无证书，通过socks协议转发请求&#xA;proxy -&amp;gt;&amp;gt; user: 有证书，handshake&#xA;user -&amp;gt;&amp;gt; proxy: 发送完整请求&#xA;proxy -&amp;gt;&amp;gt; capture-server: 解析请求，并通过http-client转发(insecure模式)&#xA;capture-server -&amp;gt;&amp;gt; real-server: 解析请求，抓包，并转发请求&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;效果图：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/2021-05-14-how-to-capture-http-request/image-20210514171857844.png&#34; alt=&#34;&#34; width=&#34;600&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;管理后台&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/2021-05-14-how-to-capture-http-request/image-20210514171653804.png&#34; alt=&#34;&#34; width=&#34;600&#34;&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;使用说明&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;说明:&#xA;1. 客户端IP 是要抓包的机器(如手机/pc等)的IP地址，从各机器上查看&#xA;2. 代理IP 是抓包软件的IP，如charles或fiddler提供的代理地址&#xA;操作步骤:&#xA;1. 启动charles等抓包软件，记住代理IP，格式如 10.238.23.2:8888&#xA;2. 查看要抓包的客户端的IP，如手机或PC的本机IP，格式如：10.238.23.5&#xA;3. 在管理后台添加客户端IP和代理IP&#xA;4. 在要抓包的机器的设置DNS(10.238.17.13)或修改HOST(10.238.17.13 note.youdao.com)&#xA;5. 运行要抓包的app即可&#xA;注意:&#xA;1. 抓包软件和要抓包的app不应在同一个机器上，如要测试pc上的electron客户端时应在另一台机器上运行抓包软件&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;参考实现&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/snaigle/sniproxy&#34;&gt;https://github.com/snaigle/sniproxy&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>使用gpg签名git中的commit</title>
      <link>https://helao.net/2018/use-gpg-with-git.html</link>
      <pubDate>2018-10-08 11:23:00 +0800</pubDate>
      <description>&lt;h3&gt;使用gpg来签名commit&lt;/h3&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;以下以mac平台为例说明&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装gnu-suite , &lt;code&gt;brew install gpg&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;生成密钥 &lt;code&gt;gpg --gen-key&lt;/code&gt; ，输入名称、邮箱等信息&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;显示生成的密钥 &lt;code&gt;gpg --list-secret-keys --keyid-format LONG&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sec   rsa2048/98A8D73449878FED 2018-10-08 [SC] [expires: 2020-10-07]&#xA;  08FDCA340E820D3FBB207A7598A8D73449878FED&#xA;uid                 [ultimate] demo &amp;lt;demo@126.com&amp;gt;&#xA;ssb   rsa2048/34ED32BF8596D3FC 2018-10-08 [E] [expires: 2020-10-07]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-98A8D73449878FED```&#34;&gt;* ```gpg --armor --output pubkey.txt --export 98A8D73449878FED``` 导出公钥，并将公钥内容添加到github中&#xA;* 在本地项目下, 执行 &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;git config commit.gpgsign true&#xA;git config user.signingkey 98A8D73449878FED&#xA;&lt;code&gt;&#xA;* 正常提交commit 即可，push后在github上即可看到&lt;/code&gt;verified``` 标识&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>study-english-day-06</title>
      <link>https://helao.net/study/study-english-day-06/</link>
      <pubDate>2018-05-02 12:00:00 +0800</pubDate>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;offspring The father loves his offspring more than anything else.&lt;/li&gt;&#xA;&lt;li&gt;contribution  Thanks to all of you for making a contribution to our charity.&lt;/li&gt;&#xA;&lt;li&gt;lover I’m lucky to have such a beautiful woman for my lover!&lt;/li&gt;&#xA;&lt;li&gt;distinction  I completed my final year exam with distinction.&lt;/li&gt;&#xA;&lt;li&gt;sheet  Drop the dough onto a baking sheet with a teaspoon.&lt;/li&gt;&#xA;&lt;li&gt;root   The tree’s roots bring water in from the soil.&lt;/li&gt;&#xA;&lt;li&gt;permit  Okay, I permit you to take the car out tonight.&lt;/li&gt;&#xA;&lt;li&gt;starter  For my starter, I’ll have the soup.&lt;/li&gt;&#xA;&lt;li&gt;mill   The wind mill works by using wind power.&lt;/li&gt;&#xA;&lt;li&gt;martial art  ,     Every so often , a new martial art arrives from the East.&lt;/li&gt;&#xA;&lt;li&gt;consciousness   He lost consciousness after drinking too much.&lt;/li&gt;&#xA;&lt;li&gt;case   As a lawyer, I have lots of cases to deal with.&lt;/li&gt;&#xA;&lt;li&gt;problem They are talking about a big problem.&lt;/li&gt;&#xA;&lt;li&gt;merge The four parts merge into one.&lt;/li&gt;&#xA;&lt;li&gt;curly   Her fair is so curly because she uses a special hair product&lt;/li&gt;&#xA;&lt;li&gt;genre  My favorite movie genre is comedy.&lt;/li&gt;&#xA;&lt;li&gt;conduct   She says no, but her conduct is inconsistent with her words.&lt;/li&gt;&#xA;&lt;li&gt;dead  The fish is dead.&lt;/li&gt;&#xA;&lt;li&gt;headache   She hoped massaging her head would reduce her headache pain.&lt;/li&gt;&#xA;&lt;li&gt;fetch    here doggy, fetch!  I shouted as I threw the ball.&lt;/li&gt;&#xA;&lt;li&gt;quantity   I eat large quantity of food everyday.&lt;/li&gt;&#xA;&lt;li&gt;amount   He made a huge amount of money.&lt;/li&gt;&#xA;&lt;li&gt;random   The emperor  selected the bedmate at random.&lt;/li&gt;&#xA;&lt;li&gt;immune This shot will make you immune to all kinds of diseases.&lt;/li&gt;&#xA;&lt;li&gt;subordinate  My subordinates have to do whatever I say.&lt;/li&gt;&#xA;&lt;li&gt;nose  The shape of her nose is perfect.&lt;/li&gt;&#xA;&lt;li&gt;emphasize  I want to emphasize the importance of teamwork.&lt;/li&gt;&#xA;&lt;li&gt;hedge  I trim the hedges every day; I find it relaxing.&lt;/li&gt;&#xA;&lt;li&gt;sculpture   This is an old sculpture&lt;/li&gt;&#xA;&lt;li&gt;peer   I enjoy working with my peers; we all understand each other.&lt;/li&gt;&#xA;&lt;li&gt;participation Classroom participation will be a big part of your grade, so pay attention.&lt;/li&gt;&#xA;&lt;li&gt;ingredient  This kind of chocolate is made from many ingredients.&lt;/li&gt;&#xA;&lt;li&gt;homework  The tutor helped the children with their homework.&lt;/li&gt;&#xA;&lt;li&gt;embarrassment Much to his embarrassment, everyone saw his open zip.&lt;/li&gt;&#xA;&lt;li&gt;salary  He said he’d double my salary if I work for him.&lt;/li&gt;&#xA;&lt;li&gt;guide I am blind, but my dog can guide me home.&lt;/li&gt;&#xA;&lt;li&gt;masculine  Masculine looks often attract females.&lt;/li&gt;&#xA;&lt;li&gt;decisive The referee ordered the player off the field with a decisive gesture.&lt;/li&gt;&#xA;&lt;li&gt;deficit  To solve the deficit we need to earn more or spend less.&lt;/li&gt;&#xA;&lt;li&gt;payment  I made the payment online with my credit card.&lt;/li&gt;&#xA;&lt;li&gt;tube   We use these stainless steel tubes to pump dangerous chemicals through.&lt;/li&gt;&#xA;&lt;li&gt;realize   I realized my mistake too late.&lt;/li&gt;&#xA;&lt;li&gt;villain  I’m an evil villain in disguise, but don’t tell anyone.&lt;/li&gt;&#xA;&lt;li&gt;division  Our divorce caused a division in our family.&lt;/li&gt;&#xA;&lt;li&gt;solely   You think I’m solely responsible for this mistake? No way!&lt;/li&gt;&#xA;&lt;li&gt;sergeant   Since I was such a good soldier, they promoted me to sergeant.&lt;/li&gt;&#xA;&lt;li&gt;exclude The ugly duckling was excluded by this peers.&lt;/li&gt;&#xA;&lt;li&gt;chimney  We can see the smoke from the chimneys.&lt;/li&gt;&#xA;&lt;li&gt;impossible It is impossible for me to win this game.&lt;/li&gt;&#xA;&lt;li&gt;His marriage proposal was so surprising, at first I was too shocked to reply.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>study-english-day-04</title>
      <link>https://helao.net/英语/study-english-day-04/</link>
      <pubDate>2018-04-26 12:00:00 +0800</pubDate>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;cooperation&#xA;Cooperation between team members will be necessary to finish the task.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;refugee&#xA;The refugees run away from their wartorn country to find a better place to live.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;graph&#xA;The growth rate is high, as shown in this graph.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;enemy&#xA;Superman is fighting against his enemy.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;measure&#xA;He measured himself to see how tall he is.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;bake&#xA;This pizza is oven baked and 100% delicious.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;threat&#xA;Nuclear war is a serious threat.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;keeper&#xA;I&amp;rsquo;m a keeper at the zoo and look after animals.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;consume&#xA;This girl consumes a lot of fruit.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;shiny&#xA;The shiny sun blinded my eyes.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;lifespan&#xA;There are a few easy ways you can extend lifespan.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;waterfall&#xA;The stream drops over the boulders in a beautiful small waterfall.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;source&#xA;Milk,delivered straight from the source.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;cave&#xA;They lived in the cave and bhe big rock was the door.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;thriller&#xA;They didn&amp;rsquo;t expect the movie to be a thriller. It may have bean too exciting for them.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;objective&#xA;My objective this year is to lose weight!&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;support&#xA;That bridge is not strong enough to supporting heavy trucks.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;ethical&#xA;His conduct raises ethical questions.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;consistency&#xA;When it comes to playing darts, I have great consistency.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;occupy&#xA;That&amp;rsquo;s how some college students occupy the seats.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;suffering&#xA;My mother&amp;rsquo;s suffering is intense--her back really hurts.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;wrongly&#xA;He was wrongly accused.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;satisfied&#xA;Not everyone can be satisfied at the same time.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;chest&#xA;That&amp;rsquo;s a big chest for a man.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;amusing&#xA;We laughed at her amusing story.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;careful&#xA;The boy came to the piece with a careful look.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;rough&#xA;The hands of the farmer are rough.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;departmental&#xA;The high school adjusted its teaching approach and cancelled its departmental system.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;loyalty&#xA;I love my dog because of his strong sense of loyalty.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;chamber&#xA;The chamber has enough seats for a meeting.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;artefact&#xA;This old artefact was made by a craftsman thousands of years ago.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;hair&#xA;How did you get your hair so straight?&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;athlete&#xA;He&amp;rsquo;s a championship athlete; basketball is his game.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;hygiene&#xA;Hands should be washed with soap to improve hygience.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;monk&#xA;The monk has lived in the temple his whole life.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;fundamentally&#xA;I don&amp;rsquo;t think it has fundamentally altered the sport.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;bottle&#xA;I hope someone finds my message in this bottle.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;motivation&#xA;My parents always gave me the motivation to succeed.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;special&#xA;Today is a very special day to them.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;february&#xA;February is a cold month, but at least it&amp;rsquo;s short.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;poisonous&#xA;One bite from a poisonous snake could kill you.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;refreshing&#xA;I love to drink a glass of refreshing beer after work.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;nationalism&#xA;Supporting your country&amp;rsquo;s football team is a harmless type of nationalism.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;analyse&#xA;He tries to anlyse the blood on the cloth.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;specify&#xA;If you want to achieve your goals, it&amp;rsquo;s important to specify them clearly.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;reaction&#xA;Everyone had a strong reaction to the horror movie.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;melt&#xA;Ice melts and turns into water if it&amp;rsquo;s hot enough.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;ghost&#xA;There are ghosts in movies and stories, but I don&amp;rsquo;t think they are real.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;cessefire&#xA;The two sides agreed to honour a new ceasefire.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;rare&#xA;Pandas are hard to find because they&amp;rsquo;re so rare.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;type&#xA;She typed on the keyboard quickly.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;each&#xA;They are each wearing a hat&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;middle class&#xA;He comes from a completely uncultured, lower middle-class family.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;domestic&#xA;I&amp;rsquo;m a big fan of domestic products.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;sword&#xA;At the museum they had a sword on display that was over 800 years old.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;surgeon&#xA;When i told him about my stomach pain, the surgeon decided to operate.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>study-english-day-03</title>
      <link>https://helao.net/英语/study-english-day-03/</link>
      <pubDate>2018-04-25 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;revolution&#xA;The protests started a revolution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;cooperation&#xA;Coomperation between team members will be necessary to finish the task.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;constitution&#xA;All our country&amp;rsquo;s laws must be consistent with your constitution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ignore&#xA;The two sisters ignore the short guy and carry on talking.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;probably&#xA;The forecast said that it would probably rain on Saturday.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;shatter&#xA;Oh, no--something completely shattered our windows.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hygiene&#xA;Hands should be washed with soap to improve hygiene.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;coil&#xA;This is a coil of metal wire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;situated&#xA;The statue of liberty is situated near Ellis Island.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;destination&#xA;The road takes us to our destination.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;appointment&#xA;My doctor&amp;rsquo;s appointment lasted thirty minutes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;affect&#xA;Her break-up with her lover has badly affected her.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;equivalent&#xA;These two thing are of equivalent weight.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;drawing&#xA;That&amp;rsquo;s a simple drawing of a big head man.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;integrity&#xA;Lord Bao was wel known for his integrity in China.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;offence&#xA;Driving drunk is a legal offence.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;glimpse&#xA;Alice caught a quick glimpse of Wonderland through the tiny door.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;version&#xA;There are five versions of the product, so choose the one you like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;worthy&#xA;You are worthy of praise for all of your hard work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;famine&#xA;These poor African kids suffer a lot from famine.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;punk&#xA;How cool is this punk!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;world&#xA;This world has enough for everyone&amp;rsquo;s need, but not for everyone&amp;rsquo;s greed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;occupy&#xA;That&amp;rsquo;s how some college students occupy the seats.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;continuous&#xA;That genius drew a singing man with one continuous line.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;congratulate&#xA;I want to congratulate you on your promotion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;dressing&#xA;A Chinese girl in her native dressing&lt;/p&gt;&#xA;&#xA;&lt;p&gt;pamphlet&#xA;This pamphlet will explain how our product works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ballet&#xA;Miss Elephant&amp;rsquo;s dream is to become a ballet dancer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;poisonous&#xA;One bite from a poisonous snake could kill you&lt;/p&gt;&#xA;&#xA;&lt;p&gt;mandatory&#xA;Taking medicine was mandatory for the patient.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hairstyle&#xA;My dog really enjoys his new hairstyle.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;nervous&#xA;The girl is nervous about tomorrow&amp;rsquo;s exam.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;motivation&#xA;My parents always gave me the motivation to succeed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ethical&#xA;His conduct raises ethical questions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;advance&#xA;I&amp;rsquo;d like to advance as high up in this company as possible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ball&#xA;Kick the ball into the net.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;volunteer&#xA;Wiil anybody volunteer to clean the park up? I&amp;rsquo;ll do it!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;bankrupt&#xA;With no more money, I&amp;rsquo;m completely bankrupt.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;bathe&#xA;Tome and Jerry bathe together and help to rub each other&amp;rsquo;s body.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;block&#xA;Kids love to play with blocks.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;outlet&#xA;Water came out of the wall through several outlets.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;patrol&#xA;The patrol searched around for hidden enemies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;graceful&#xA;The graceful necks of the two swans met in a heart shape.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;fixed&#xA;Climbers run their ropes through these fixed anchor points to help them climb.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;conduct&#xA;She says no, but her conduct is inconsistent with her words.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;squat&#xA;In this exercise, squat low them jump as high as you can.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;seek&#xA;Let&amp;rsquo;s play hide and seek.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;deception&#xA;Nowadays photos often become &amp;ldquo;photos of deception&amp;rdquo;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;cast&#xA;My friend says he wants to fly, so I help to cast him.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;enjoyable&#xA;The family had an enjoyable afternoon together.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;code&#xA;Computers run on binary code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;slide&#xA;My kids laugh as they slide down the flume ride.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>study-english-day-02</title>
      <link>https://helao.net/study/study-english-day-02/</link>
      <pubDate>2018-04-24 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;gallery&#xA;This gallery has a lot of flower pictures.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;captitalism&#xA;Capitalism works for making money, but it doesn&amp;rsquo;t help the poor very much.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;tackle&#xA;The repairman is able to tackle any problems with this tools.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;promote&#xA;She was very good at her job, so her boss promoted her to higher position.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;partner&#xA;We are all partners here. Let&amp;rsquo;s work together to finish the job.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;premature&#xA;The premature bady was born one month early.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;state&#xA;There are fifty states in America.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;then&#xA;Type in your password , then take out your money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;dessert&#xA;Do you want to have some ice cream for dessert.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;criteria&#xA;What are the criteria for success to you?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;crucial&#xA;The red cog is crucial ; all other cogs depend on it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;younger&#xA;He is a younger man.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;knot&#xA;You can tie two ropes together with a knot.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;membrane&#xA;This leaf lost its green membrane, and only the veins remain.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;mode&#xA;The camera has many different modes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;liaison&#xA;We will need to maintain close liaison so our companies keep in contact.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;fellowship&#xA;Let&amp;rsquo;s hope that someday we all live together in fellowship as human beings.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;linguistic&#xA;Spanish, Portuguese, and French all have linguistic similarities.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;western&#xA;Is his how people dress in western areas?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;educate&#xA;My children were all educated in public schools.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;alphabetical&#xA;Please put the letters in alphabetical order.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;assert&#xA;They both assert their opposing opinions, and I have no idea whom I should believe.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;identity&#xA;The passport is used to verify your identity.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;important&#xA;He&amp;rsquo;s the most important person here.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;rock and roll&#xA;They have simply misunderstood what rock and roll is&lt;/p&gt;&#xA;&#xA;&lt;p&gt;concede&#xA;He finally conceded defeat in the tennis competition.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;latest&#xA;I always buy the latest Apple gadgets. Now it&amp;rsquo;s time for iPhone 5!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;jack&#xA;I have a jack to lift my car up if I need to make any repairs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;dwelling&#xA;This dwelling is in a very nice neighborhood.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;dark&#xA;I can&amp;rsquo;t see in the dark!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;fight&#xA;These tow men had a fight!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;swan&#xA;We sat by the lake and watched the swans swim.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;fine&#xA;The policeman fined the driver for driving too fast.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;cow&#xA;We use our cows for meat and milk.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;tired&#xA;She is so tired after running.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;donate&#xA;I donate blood to help those who need it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;glossy&#xA;Her glossy hair shined under the lights.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;unfortunately&#xA;Unfortunately, it&amp;rsquo;s supposed to rain all weekend.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;resemblance&#xA;There is a close resemblance between the two brothers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;want&#xA;This company wants a 20 year old with 10 years of work experience&amp;hellip;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;suitably&#xA;He went away suitably impressed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;speculate&#xA;I speculate the trend of foreign exchange market to make money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;medicine&#xA;I&amp;rsquo;m ill, The doctor gave me many medicines.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;theatre&#xA;Let&amp;rsquo;s go to the theatre and watch a play!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hall&#xA;There are many seats in the hall.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;loosely&#xA;Tie the rope loosely so we can use it again.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;laundry&#xA;Please do the laundry -- ny clothes stink.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;constantly&#xA;I am thinking about passing my exams constantly all day.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;prediction&#xA;The Chinese Zodiac makes many predictions about the future.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;scope&#xA;The sniper looked through the scope to see the target.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;curve&#xA;Make sure to turn, as the road curves up ahead.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>english-day-01</title>
      <link>https://helao.net/默认/english-day-01/</link>
      <pubDate>2018-04-23 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;obsessed&#xA;My children are obsessed with their Gameboys.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;saddle&#xA;This Western saddle is comfortable when I have to ride all day.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;dedicated&#xA;He was very dedicated to his homework.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;allege&#xA;She alleged that I was the criminal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;adoption&#xA;Adoption is a good option because it helps out many kids.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;examination&#xA;I visit the doctor every year for a health examination.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;inspector&#xA;The inspector is checking the goods.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;transfer&#xA;I&amp;rsquo;ll transfer these files from one folder to the other.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;slender&#xA;Ever since you started exercising, you&amp;rsquo;ve become so much more slender!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;involve&#xA;All parts of the machine are involved with each other.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;absorb&#xA;Sponges can absorb a lot of water.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;offend&#xA;His bad behavior really offended the woman.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;unfair&#xA;It&amp;rsquo;s unfair! She eats so much, but she&amp;rsquo;s still slim.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;envelop&#xA;The mother enveloped her baby in a cozy blanket.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;mould&#xA;I mould the clay with my hands to make a cup.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;depart&#xA;I will depart for a different city.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;preliminary&#xA;The preliminary drawings of the building are already finished.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;creation&#xA;No, I did not copy the disign; this is my own creation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;sow&#xA;If you sow the seeds, the plants will grow.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;market&#xA;I always buy begetables in the market.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;device&#xA;Mobile phones are widely used devices.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;full&#xA;After a long day of work, I enjoy a tall glass full of delicous, cold beer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;dig&#xA;To install the swimming pool thy used a machine to dig a big hole.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;natural&#xA;Only the natural vegetables are healthy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;essential&#xA;Hot pot and Mahong are essential componnents of Sichuanese culture.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;perspective&#xA;In correct perspective, all horizontal lines meet at a single point.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;apply&#xA;Now, I&amp;rsquo;ll apply some cream to your face.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;rare&#xA;Pandas are hard to find because they&amp;rsquo;re so rare.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;disadvantage&#xA;The one ant is at a disadvantage against so many others.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;wonder&#xA;The woman wonders if she carries a boy or a girl.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;sharp&#xA;This knife is very sharp!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;learning&#xA;He works so hard in school because he loves learning.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;stool&#xA;I bought some stools for my apartment in case guests come over.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;visit&#xA;My doctor visits me every week.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;indeed&#xA;We all think that it is good indeed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;stroke&#xA;The stroke of this club sent the ball flying high in the air.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;housing&#xA;The government will build more cheap housing to help poor people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;stain&#xA;You bad kitten! Look at all these stains by your paw.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;emergence&#xA;It was interesting to watch the plant&amp;rsquo;s slow emergence from the soil.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;adverb&#xA;Adverbs help to give more meaning to verbs and adjectives.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;slip&#xA;The floor is wet,make sure you don&amp;rsquo;t slip and fall.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;aged&#xA;We may be old and aged, but our lives are great. We&amp;rsquo;re got it made!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;reaction&#xA;Everyone had a strong reaction to the horror movie.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ecological&#xA;Ecological balance should be maintained by all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;lane&#xA;The small dirt lane goes through the forest.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;achievement&#xA;Graduating from university in such a short time is a major achievement.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;specify&#xA;If you want to achieve your goals, it&amp;rsquo;s important to specify them clearly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;kidney&#xA;Are you willing to sell your kidney for an Apple product?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;potential&#xA;He has a lot of potential , I could see him going places.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;extreme&#xA;The roller coaster has some pretty extreme turns; it might make you sick.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;counselling&#xA;It provides a counselling service for those in need.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;respond&#xA;The little boy responds to the customers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;special&#xA;Tody is a very special day to them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;literal&#xA;In contracts all word meanings are literal, whereas in literature they can be figurative.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;asylum&#xA;He acts like a dog, so we send him to an asylum.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;institute&#xA;This institute has trained many excellent doctors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;meet&#xA;We need to meet in this room every morning.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;bet&#xA;I made a huge bet in the game but I lost, and now I have no money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;reminder&#xA;I need a reminder to remind me of the dental appointment tomorrow.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;radical&#xA;This religious radical plans to kill everyone who doesn&amp;rsquo;t share his religion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;share&#xA;Would you like to share some ice cream with me?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;devoted&#xA;Though young, he is a devoted follower of this religion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;unkind&#xA;I don&amp;rsquo;t understand why my boss is so unkind to me&lt;/p&gt;&#xA;&#xA;&lt;p&gt;embody&#xA;In China, the Dragon embodies strength and good fortune.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;violin&#xA;She can play the violin well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;maternity&#xA;It&amp;rsquo;s not imprinting Effect but maternity that works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;gradual&#xA;The car chart shows gradual growth until the end.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;snack&#xA;I&amp;rsquo;ve put out a few snacks for you to enjoy before dinner.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;terrace&#xA;Look at the wonderful view from our terrace!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;inspiration&#xA;I come to the mountains to find inspiration and enlightenment.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;advice&#xA;The doctor is giving her some good advice.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;pop&#xA;Let&amp;rsquo;s pop open the champagne.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;substitution&#xA;Vitamin supplements are a subsitution for the nutrition of food.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;fuse&#xA;Run away from the bomb before the fuse burns down.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;delay&#xA;The flight was delayed , so I&amp;rsquo;ll have to wait until tomorrow.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;signal&#xA;When the traffic signal truns red, we should stop.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;whereby&#xA;She went to the Grammy Awards whereby she ended up with many wins.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;shark&#xA;I think the shark wants to eat me!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;improvement&#xA;I hope our sales show some improvement soon.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;existing&#xA;The existing chairman of China right now is President Xi.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;electricity&#xA;A man came to check the electricity.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;republican&#xA;The United States has a republican form of government.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;valuation&#xA;You need to conduct a thorough valucation of your house before selling it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;existence&#xA;Do you believe in the existence of dragons?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;medical&#xA;As a medical doctor, I work mainly with sick people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;biologist&#xA;The biologist is doing experiments in the laboratory.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;consideration&#xA;He gave my proposal due condideration.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;prime&#xA;Our prime task is to reduce the pollution. said the mayor.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;underground&#xA;The office building had underground parking.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;intake&#xA;The child was given special equipment for the intake of oxygen.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;collision&#xA;A black car is in collision with a red car.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;custody&#xA;They arrested me and I was taken into custody.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;cage&#xA;Get me out of this cage! Where&amp;rsquo;s the key?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;spirit&#xA;The Olympic spirit is &amp;ldquo;faster , higher and stronger&amp;rdquo;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;delight&#xA;The girl is smiling with delight.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;outweigh&#xA;There is something that outweighs money , such as love.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;local&#xA;The local people have their own clothing and culture.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;once&#xA;I&amp;rsquo;ve already told you once not to disturb me , watch out, because I won&amp;rsquo;t tell you twice!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;bother&#xA;Don&amp;rsquo;t bother me! I&amp;rsquo;ll never play with you again!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;clutch&#xA;He clutches his red packet and stays alert.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;magic&#xA;Pulling a rabbit out of a hat is the most classic magic trick.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;bracket&#xA;These are square brackets and curly brackets.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;constrain&#xA;He likes the girl, but he is constrained by his two friends.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;deserve&#xA;The winner deserves the prize, he was really the best.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;endure&#xA;I have to endure the weird smells on my way to work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;elaborate&#xA;The designs for the house are very elaborate; they took me days to draw.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;painful&#xA;My shoulder hurts, it&amp;rsquo;s very painful.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;outdoor&#xA;It&amp;rsquo;s nice to be outdoors in warm weather.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;cost&#xA;This bra costs $200! How expensive!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;billion&#xA;I don&amp;rsquo;t know why anyone would need a billion dollars.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;blonde&#xA;She has long, curly blonde hair&lt;/p&gt;&#xA;&#xA;&lt;p&gt;audit&#xA;My job is to audit the actual stock against what the computer says should be there.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;sector&#xA;All sectors of the economy are vital to the continued prosperity of our people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;pants&#xA;I bought several new pairs of pants.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>2018年如何前行</title>
      <link>https://helao.net/2018/how-to-run.html</link>
      <pubDate>2018-03-14 11:47:00 +0800</pubDate>
      <description>&lt;h3&gt;2018已来&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;加速前行 go go go !!!&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>双因素认证之TOTP</title>
      <link>https://helao.net/2017/2fa-totp.html</link>
      <pubDate>2017-11-30 04:21:03 +0800</pubDate>
      <description>&lt;h2&gt;从认证说起&lt;/h2&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;认证就是确认用户的身份&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h3&gt;一、双因素认证&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;认证的难点在于如何证明一个人的身份？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我们将能证明用户身份的特征分为以下三类：&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;秘密信息： 密码、私钥等&lt;/li&gt;&#xA;&lt;li&gt;个人物品：银行卡、手机等&lt;/li&gt;&#xA;&lt;li&gt;生理特征：指纹、faceId，虹膜等&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;这些证据就称为“因素”（factor)。因素越多，证明力就越强，身份就越可靠。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;双因素认证就是指，通过认证同时需要两个因素的证据。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如 去银行柜台取钱就是最常见的双因素认证，用户必须同时提供银行卡和密码，才能取到现金。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;二、双因素认证方案&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;常见的双因素组合是密码+手机，因为手机太普及了，硬件口令令牌都被淘汰了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如很多网站登录时，除了输入账号和密码外 还需要输入短消息验证码。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;三、OTP的概念&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;OTP的全称是“基于时间的一次性密码”(One-Time Password)。它是公认的可靠解决方案，已经写入国际标准RFC6238。它有几种实现方式，基于时间是TOTP，基于计数器的是HOTP。 步骤如下：&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;第一步，用户开启双因素认证后，服务器生成一个密钥&lt;/li&gt;&#xA;&lt;li&gt;第二步，服务器提示用户扫描二维码（或者手工输入也行），把密钥保存到用户的手机。也就是说，服务器和用户的手机现在都有了同一把密钥。（密钥必须跟手机绑定。一旦用户更换手机，就必须生成全新的密钥&lt;/li&gt;&#xA;&lt;li&gt;用户登录时，手机客户端使用这个密钥和当前时间戳，生成一个哈希，有效期默认为30秒。用户在有效期内，把这个哈希提交给服务器。&lt;/li&gt;&#xA;&lt;li&gt;第四步，服务器也使用密钥和当前时间戳，生成一个哈希，跟用户提交的哈希对比。只要两者不一致，就拒绝登录。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;TOTP和HOTP的算法基本一致，TOTP使用时间因子做为变量，HOTP使用counter来做为变量，下面我们只解释TOTP&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;四、TOTP算法&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;你可能有一个问题：客户端和服务器如何保证30秒期间都得到同一个哈希呢？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;答案就是下面的公式：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;TC = floor((unixtime(now)-unixtime(T0)) / TS)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;上面的公式中，TC表示一个时间计数器，unixtime(now) 是当前unix时间戳，unixtime(T0)是约定的起始时间点的时间戳，默认是0。TS内里是哈希有效期的时间长度，默认是30秒。因此，上面的公式就变成下面的形式。&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;TC = floor(unixtime(now) / 30)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;所以只要在30秒以内，TC的值都是一样的。前提是服务器和手机的时间必须同步。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;接下来，就可以算出哈希了。&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;TOTP = HASH(SecretKey,TC)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;上面代码中，&lt;code&gt;HASH&lt;/code&gt; 就是约定的哈希函数，默认是SHA-1.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;TOTP有硬件生成器和软件生成器之分，都是采用上面的算法。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;软件：推荐Google Authenticator ，当然也有微信小程序版的&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;五、TOTP的实现&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;TOTP很容易写，各个语言都有实现。下面我用Java来演示下真实代码&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;long timestamp = System.currentTimeMillis() / 1000 / 30;&#xA;        Mac mac = Mac.getInstance(&amp;quot;HMACSHA1&amp;quot;);&#xA;        mac.init(new SecretKeySpec(Base32String.decode(secretKey), &amp;quot;&amp;quot;));&#xA;        byte[] hash = mac.doFinal(ByteBuffer.allocate(8).putLong(timestamp).array());&#xA;        int offset = hash[hash.length - 1] &amp;amp; 0xF;&#xA;        int truncatedHash = new DataInputStream( new ByteArrayInputStream(&#xA;                  hash, offset, hash.length - offset)).readInt() &amp;amp; 0x7FFFFFFF;&#xA;        int pinValue = truncatedHash % 1_000_000;&#xA;        String code = StringUtils.leftPad(String.valueOf(pinValue), 6, &#39;0&#39;);&#xA;        System.out.println(code);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;六、总结&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;双因素认证的优点在于，比单纯的密码登录安全得多。只要手机上的密钥安全就行。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;缺点丰于，登录多了一步，费时且麻烦。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;还有一个最大的问题，就是密钥丢失后如何恢复？&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Y组合子</title>
      <link>https://helao.net/2017/Y-lambda.html</link>
      <pubDate>2017-01-04 05:35:11 +0800</pubDate>
      <description>&lt;h3&gt;牢骚&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;2017年到了，时间又少了一些，赶快跑起来&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;正文&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;昨天过了一下groovy的语法，想起来以前看过的Y组合子，一直感觉没看懂，又找来文章看了看，发现能理解了，在这里总结下&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先介绍两个概念&#xA;1. 闭包 ，可以理解为匿名方法&#xA;2. curry，将多元函数降低的过程为curry化 如&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  f(a,b){return a+b} ;&#xA;  ff = function(a){&#xA;      return function(b) {return a+b}&#xA;  };&#xA;  f2 = ff(2);&#xA;  c = f2(3) // c= 5&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;下来我们要介绍一个情况&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  var f = function(n){&#xA;    return n== 1?1 :n*f(n-1);&#xA;  };&#xA;  assert f(5)  == 120&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;可以看到我们计算了5的阶乘，利用了递归的思想，但我们引入了一个f，这个f应该是一次性的，被内部引用后无法释放，会污染ns的，有没有办法来解决呢&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  var f = function(n,self){&#xA;    return n==1?1: n*self(n-1);&#xA;  };&#xA;  assert f(5,self) == 120&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;看这样如果方法中有一个self的话那么我们应该可以解决引用的问题，这里参数有两个，那么我们用curry化处理下&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  var f = function(self){&#xA;    return function(n){&#xA;      return n==1?1:n * self(self)(n-1);&#xA;    };&#xA;  }&#xA;  f(f)(5) == 120&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;方法还有self(self) 这种 我们提取出来，放外面&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  var g = function(h){&#xA;    var x = function(n){&#xA;      return h(h)(n);&#xA;    };&#xA;    var f = function(self){&#xA;      return function(n){&#xA;        return n==1?1:n * self(n-1);&#xA;      };&#xA;    };&#xA;    return f(x);&#xA;  };&#xA;  g(g)(5) == 120&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;把f提出来，再把g包装下&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  var f = function(self){&#xA;    return function(n){&#xA;      return n== 1?1:n*self(n-1);&#xA;    };&#xA;  };&#xA;  var wrap = function(f){&#xA;    var x = function(n){&#xA;      return h(h)(n);&#xA;    };&#xA;    var g = function(h){&#xA;        return f(x);&#xA;    };&#xA;    return g(g);&#xA;  };&#xA;  wrap(f)(5) == 120&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;wrap就是Y表达式,精简如下&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  var Y = function(f){&#xA;    return (function(g){&#xA;      return g(g);&#xA;    })(function(h){&#xA;      return function(){&#xA;        return h(h).apply(null,arguments);&#xA;      };&#xA;    });&#xA;  };&#xA;  Y(function(self){&#xA;      return function(n){&#xA;        return n==1?1:n*self(n-1);&#xA;      };&#xA;  })(5) == 120&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;这样闭包确实匿名了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>使用letsencrypt申请https证书</title>
      <link>https://helao.net/2016/install-https-certs-by-letsencrypt.html</link>
      <pubDate>2016-12-09 12:00:00 +0800</pubDate>
      <description>&lt;h3&gt;安装certbot-auto&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;方法一&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wget https://dl.eff.org/certbot-auto&#xA;chmod a+x certbot-auto&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;方法二&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/letsencrypt/letsencrypt&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;申请证书&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;webroot方式， 适合80和443端口被占用的情况&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;certbot-auto certonly --email op@helao.net --agree-tos \&#xA;--webroot -w /data/www/helao.net -d helao.net -d www.helao.net&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;standalone，在目标机上直接开启80端口进行验证，适合空机器&lt;/h4&gt;&#xA;&#xA;&lt;h4&gt;manual ，交互式申请，需要把目标文件放到对应的机器上即可，适合申请机器和目标机器不一样的情况&lt;/h4&gt;&#xA;&#xA;&lt;h3&gt;生成dhparams&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;mkdir -p /etc/ssl/certs/&#xA;openssl dhparam -out /etc/ssl/certs/dhparams.pem 2048&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;在nginx.conf中开启ssl&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ssl_certificate /etc/letsencrypt/live/helao.net/fullchain.pem;&#xA;ssl_certificate_key /etc/letsencrypt/live/helao.net/privkey.pem;&#xA;ssl_dhparam /etc/ssl/certs/dhparams.pem;&#xA;&#xA;ssl_ciphers &#39;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA&#39;;&#xA;&#xA;ssl_prefer_server_ciphers  on;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;在nginx.conf将http 重定向到https&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;return 301 https://$host$request_uri;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;自动续期证书&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;certbot renew --pre-hook &amp;quot;service nginx stop&amp;quot; \&#xA;--post-hook &amp;quot;service nginx start&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>这两周学习android的总结</title>
      <link>https://helao.net/2016/learn-android.html</link>
      <pubDate>2016-11-10 12:47:17 +0800</pubDate>
      <description>&lt;p&gt;学习android两个星期了，总结下自己的知识点&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;开发环境和构建工具 ， android studio和gradle&lt;/li&gt;&#xA;&lt;li&gt;项目结构， 类文件、资源、多模块等&lt;/li&gt;&#xA;&lt;li&gt;运行项目，跑一个demo-activity, 测试各种view组件， 感想： activity 中的view是可以动态更新的，activity有生命周期&lt;/li&gt;&#xA;&lt;li&gt;熟悉各layout布局&lt;/li&gt;&#xA;&lt;li&gt;熟悉多个activity的相互调用&lt;/li&gt;&#xA;&lt;li&gt;熟悉toolbar 和 viewpager和listview等高级组件&lt;/li&gt;&#xA;&lt;li&gt;掌握了 kotlin语言，能减少代码量&lt;/li&gt;&#xA;&lt;li&gt;熟悉rxjava、retrofit、butterknife 几个工具&lt;/li&gt;&#xA;&lt;li&gt;熟悉了 mvp等开发模式，有助力业务逻辑清楚&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;还需要学习的知识点&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;掌握各种传感器的使用&lt;/li&gt;&#xA;&lt;li&gt;掌握上拉加载更多和下拉刷新等组件&lt;/li&gt;&#xA;&lt;li&gt;各种菜单&lt;/li&gt;&#xA;&lt;li&gt;复杂布局的实现&lt;/li&gt;&#xA;&lt;li&gt;自定义组件&lt;/li&gt;&#xA;&lt;li&gt;etc&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>怎样学习一门语言</title>
      <link>https://helao.net/2016/how-to-learn-a-language.html</link>
      <pubDate>2016-09-08 03:47:00 +0800</pubDate>
      <description>&lt;h3&gt;7步学会一门外语&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;第一步掌握语言的基础概念，如单词、音标、语法&lt;/li&gt;&#xA;&lt;li&gt;第二步学习发音，音标不多跟拼音类似，多读遍就可以记住&lt;/li&gt;&#xA;&lt;li&gt;第三步买本词典和语法书，学会怎么查&lt;/li&gt;&#xA;&lt;li&gt;第四步每天找一篇英文文章，不懂的就查字典、查语法，记住自己不懂的地方，然后大声朗读直至熟练&lt;/li&gt;&#xA;&lt;li&gt;第五步每天复习前一天的文章，并开始一篇新文章；每周末可以用来复习全部的文章&lt;/li&gt;&#xA;&lt;li&gt;第六步积累学习到的文章和生词等，记录到github等网站&lt;/li&gt;&#xA;&lt;li&gt;坚持3年，你基本就掌握了&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3&gt;Q&amp;amp;A&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Q:能不能3天就学会啊 A: 可以啊，前6步确实只需要3天&lt;/li&gt;&#xA;&lt;li&gt;Q:学会了新语言能让我走上人生巅峰吗？ A: 不知道，反正世界首富有好多私人翻译&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>什么是成本</title>
      <link>https://helao.net/2016/what-is-the-cost.html</link>
      <pubDate>2016-09-05 05:58:58 +0800</pubDate>
      <description>&lt;h2&gt;成本&lt;/h2&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;成本是做某件事情的代价，了解成本可以让决策更加高效&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;实际成本&lt;/li&gt;&#xA;&lt;li&gt;机会成本&lt;/li&gt;&#xA;&lt;li&gt;沉没成本&lt;/li&gt;&#xA;&lt;li&gt;边际成本&lt;/li&gt;&#xA;&lt;li&gt;可变成本&lt;/li&gt;&#xA;&lt;li&gt;边际成本&lt;/li&gt;&#xA;&lt;li&gt;固定成本&lt;/li&gt;&#xA;&lt;li&gt;变动成本&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h3&gt;实际成本&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;大家一般想到的这是这个，做成某件事我实际要花费了多少时间、多少金钱，这个比较具体很好理解。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如：我买a公司股票，花了1000，1个月后我赚了1000。 这个过程中我花的1000是实际成本，收益是2000，利润是1000.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;机会成本&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;做决策时总是面临多项选择，机会成本是你选择之外的选择中收益最高的那个选择&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如：有1000元，可以买a或b，c股票，a的收益是1200，b的收益是1500，c的收益是2000，如果选择a那么机会成本就是2000，如果选择c那么机会成本就是1500&lt;/p&gt;&#xA;&#xA;&lt;p&gt;机会必须是决策者可以选择的项目，必须是指放弃的机会中收益最高的一个项目。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;了解的概念越多，有可能面临的选择就越多，也就越有可能选择到价值高的选择&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;沉没成本&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;指已经付出且不能收回的成本&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如：你买了一张电影票且不能退票。此时人付出的价钱已经不能收回，就算你不看电影钱也收不回来，这些钱就是你的沉没成本&lt;/p&gt;&#xA;&#xA;&lt;p&gt;很多人都有这种情况，我为做某事已经花费了很多精力，因此我不能放弃，这就是典型的沉没成本效应。 在做决策时仅需要考虑可变成本，&#xA;如果同时考虑到沉没成本，那结论就是是基于事件的价值作出的&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;可变成本&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;指会随着生产量或业务量变化而变化的成本，即边际成本的总和&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如手机在不同规模下的生成成本&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;边际成本&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;边际成本指是的每一单位新增成本导致的总成本的增加&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如生成第一个手机是2000元，生成第1000台时可能就1500元了，生产最后一台时成本就1000元，就也是小米手机的策略，通过延长发货期使手机的边际成本降低，&#xA;从而使手机在早期能有一个很高的性价比。 这个策略是销售时的经营战略：“边际成本定价”&lt;/p&gt;&#xA;&#xA;&lt;p&gt;考虑到机会成本，随着生产量的增加，边际成本可能公增加。还是这个例子，生产新的一个手机时，所用的材料可能有更好的用处，所以要尽量用最少的材料生产出最多的车，&#xA;这样才能提高边际收益&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;固定成本&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;指不随着产出变化的成本，长期来看，所有的成本都可以看成变量&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;变动成本&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;指营业成本、最初成本、间接成本和直接成本等，这些都随着产出而直接变化，例如劳动力、燃料、能源和原材料成本&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>停滞多年，准备上路</title>
      <link>https://helao.net/2016/517.html</link>
      <pubDate>2016-06-02 08:37:36 +0800</pubDate>
      <description>&lt;h1&gt;开始上路了&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;fire&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>在Ubuntu中安装Python科学计算环境</title>
      <link>https://helao.net/2015/516.html</link>
      <pubDate>2015-05-08 09:30:08 +0800</pubDate>
      <description>&lt;div&gt; &#xA; &lt;div&gt; &#xA;  &lt;div&gt; &#xA;   &lt;div&gt; &#xA;    &lt;h1&gt; 在Ubuntu中安装Python科学计算环境 &lt;/h1&gt; 文章&#xA;    &lt;a href=&#34;http://hyry.dip.jp/tech/slice/slice.html/24&#34;&gt;转载&lt;/a&gt;&#xA;    &lt;br /&gt; &#xA;    &lt;div&gt; &#xA;     &lt;p&gt; 和Python(x,y)不一样，在Ubuntu中需要手工安装科学计算的各个模块，本文介绍如何安装IPython, NumPy, SciPy, matplotlib, PyQt4, Spyder, Cython, SWIG, ETS, OpenCV。&amp;nbsp; &lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div&gt; &#xA; &lt;div&gt; &#xA;  &lt;div&gt; &#xA;   &lt;div&gt; &#xA;    &lt;div&gt; &#xA;     &lt;p&gt; 在Ubuntu下安装Python模块通常可以使用apt-get和pip命令。apt-get命令是Ubuntu自带的包管理命令，而pip则是Python安装扩展模块的工具，通常pip会下载扩展模块的源代码并编译安装。 &lt;/p&gt; &#xA;     &lt;p&gt; Ubuntu 12.04中缺省安装了Python2.7.3，首先通过下面的命令安装pip，pip是Python的一个安装和管理扩展库的工具。 &lt;/p&gt; &#xA;     &lt;div&gt; &#xA;      &lt;div&gt; &#xA;       &lt;pre&gt;sudo apt-get install python-pip&#xA;&lt;/pre&gt; &#xA;      &lt;/div&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;p&gt; 安装Python开发环境，方便今后编译其他扩展库，占用空间92.8M： &lt;/p&gt; &#xA;     &lt;div&gt; &#xA;      &lt;div&gt; &#xA;       &lt;pre&gt;sudo apt-get install python-dev&#xA;&lt;/pre&gt; &#xA;      &lt;/div&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div&gt; &#xA;      &lt;h1&gt; IPython&lt;a href=&#34;http://hyry.dip.jp/tech/slice/slice.html/24#ipython&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;      &lt;p&gt; 为了安装最新版的IPython 0.13beta，需要下载IPython源代码，并执行安装命令。在IPython 0.13beta中提供了改进版本的IPython notebook。下面的命令首先安装版本管理软件git，然后通过git命令从IPython的开发代码库中下载最新版本的IPython源代码，并执行安装命令： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;cd sudo apt-get install git&#xA;git clone https://github.com/ipython/ipython.git cd ipython&#xA;sudo python setup.py install&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 如果安装目前的最新稳定版本，可以输入: &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo apt-get install ipython&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 安装完毕之后，请输入ipython命令测试是否能正常启动。 &lt;/p&gt; &#xA;      &lt;p&gt; 为了让IPython notebook工作，还还需要安装tornado和pyzmq： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo pip install tornado&#xA;sudo apt-get install libzmq-dev&#xA;sudo pip install pyzmq&#xA;sudo pip install pygments&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 下面测试IPython： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;cd mkdir notebook cd notebook&#xA;ipython notebook&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 为了在IPython中离线使用LaTeX数学公式，需要安装mathjax，首先输入下面的命令启动ipython notebook： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo ipython notebook&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 在IPython notebook界面中输入： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;from IPython.external.mathjax import install_mathjax install_mathjax() &lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div&gt; &#xA;      &lt;h1&gt; NumPy，SciPy和matplotlib&lt;a href=&#34;http://hyry.dip.jp/tech/slice/slice.html/24#numpy-scipymatplotlib&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;      &lt;p&gt; 通过apt-get命令可以快速安装这三个库： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo apt-get install python-numpy&#xA;sudo apt-get install python-scipy&#xA;sudo apt-get install python-matplotlib&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 如果需要通过pip编译安装，可以先用apt-get命令安装所有编译所需的库： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo apt-get build-dep python-numpy&#xA;sudo apt-get build-dep python-scipy&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 然后通过pip命令安装： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo pip install numpy&#xA;sudo pip install scipy&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;div&gt;&#xA;        通过build-dep会安装很多库，包括Python 3.2。 &#xA;      &lt;/div&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div&gt; &#xA;      &lt;h1&gt; PyQt4和Spyder&lt;a href=&#34;http://hyry.dip.jp/tech/slice/slice.html/24#pyqt4spyder&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;      &lt;p&gt; 下面的命令安装PyQt4，Qt界面设计器，PyQt4的开发工具以及文档： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo apt-get install python-qt4&#xA;sudo apt-get install qt4-designer&#xA;sudo apt-get install pyqt4-dev-tools&#xA;sudo apt-get install python-qt4-doc&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 安装完毕之后，文档位于： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;/usr/share/doc/python-qt4-doc&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 安装好PyQt4之后通过下面的命令安装Spyder： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo apt-get install spyder&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 由于Spyder经常更新，通过下面的命令可以安装最新版： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo pip install spyder --upgrade&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div&gt; &#xA;      &lt;h1&gt; cython和SWIG&lt;a href=&#34;http://hyry.dip.jp/tech/slice/slice.html/24#cythonswig&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;      &lt;p&gt; Cython和SWIG是编写Python扩展模块的工具： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo pip install cython&#xA;sudo apt-get install swig&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 输入&amp;nbsp;cython&amp;nbsp;--version&amp;nbsp;和&amp;nbsp;swig&amp;nbsp;-version&amp;nbsp;查看版本。 &lt;/p&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div&gt; &#xA;      &lt;h1&gt; ETS&lt;a href=&#34;http://hyry.dip.jp/tech/slice/slice.html/24#ets&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;      &lt;p&gt; ETS是enthought公司开发的一套科学计算软件包，其中的Mayavi通过VTK实现数据的三维可视化。 &lt;/p&gt; &#xA;      &lt;p&gt; 首先通过下面的命令安装编译ETS所需的库： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo apt-get install python-dev libxtst-dev scons python-vtk  pyqt4-dev-tools python2.7-wxgtk2.8 python-configobj&#xA;sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 创建ets目录，并在此目录下下载ets.py，运行ets.py可以复制最新版的ETS源程序，并安装： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;mkdir ets cd ets&#xA;wget https://github.com/enthought/ets/raw/master/ets.py&#xA;python ets.py clone&#xA;sudo python ets.py develop #sudo python ets.py install    或者运行install安装 &lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 如果一切正常，那么输入&amp;nbsp;mayavi2&amp;nbsp;命令则会启动mayavi。 &lt;/p&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div&gt; &#xA;      &lt;h1&gt; OpenCV&lt;a href=&#34;http://hyry.dip.jp/tech/slice/slice.html/24#opencv&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;      &lt;p&gt; 为了编译OpenCV需要下载cmake编译工具，和一些依赖库： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;sudo apt-get install build-essential&#xA;sudo apt-get install cmake&#xA;sudo apt-get install cmake-gui&#xA;sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev&#xA;sudo apt-get install libjpeg-dev libpng-dev libtiff-dev libjasper-dev&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 然后从&amp;nbsp;&lt;a href=&#34;http://sourceforge.net/projects/opencvlibrary/&#34;&gt;http://sourceforge.net/projects/opencvlibrary/&lt;/a&gt;&amp;nbsp;下载最新版的OpenCV源代码，并解压。然后创建编译用的目录release，并启动cmake-gui: &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;mkdir release&#xA;cmake-gui&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 在界面中选择OpenCV源代码的目录，和编译输出目录release，然后按Configure按钮，并根据需要设置各个编译选项，最后点Generate按钮，退出cmake-gui界面。进入编译路径，执行下面的命令： &lt;/p&gt; &#xA;      &lt;div&gt; &#xA;       &lt;div&gt; &#xA;        &lt;pre&gt;cd release&#xA;make&#xA;sudo make install&#xA;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;p&gt; 安装完毕之后，启动IPython，并输入&amp;nbsp;import&amp;nbsp;cv2&amp;nbsp;测试OpenCV是否能正常载入。 &lt;/p&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>ubuntu 下安装 ipython notebook</title>
      <link>https://helao.net/2015/515.html</link>
      <pubDate>2015-05-08 09:27:34 +0800</pubDate>
      <description>&lt;h1&gt;执行以下命令&lt;/h1&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;apt-get install python-pip&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;apt-get install ipython&lt;/li&gt;&#xA;&lt;li&gt;apt-get install ipython-notebook&lt;/li&gt;&#xA;&lt;li&gt;sudo apt-get install python-numpy&lt;/li&gt;&#xA;&lt;li&gt;sudo apt-get install python-scipy&lt;/li&gt;&#xA;&lt;li&gt;sudo apt-get install python-matplotlib&lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h1&gt;可能有用的一些命令&lt;/h1&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;sudo pip install tornado&lt;/li&gt;&#xA;&lt;li&gt;sudo apt-get install libzmq-dev&lt;/li&gt;&#xA;&lt;li&gt;sudo pip install pyzmq&lt;/li&gt;&#xA;&lt;li&gt;sudo pip install pygments&lt;/li&gt;&#xA;&lt;li&gt;如果需要通过pip编译安装，可以先用apt-get命令安装所有编译所需的库：&lt;/li&gt;&#xA;&lt;li&gt;sudo apt-get build-dep python-numpy&lt;/li&gt;&#xA;&lt;li&gt;sudo apt-get build-dep python-scipy&lt;/li&gt;&#xA;&lt;li&gt;然后通过pip命令安装：&lt;/li&gt;&#xA;&lt;li&gt;sudo pip install numpy&lt;/li&gt;&#xA;&lt;li&gt;sudo pip install scipy&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>2014年度公司年终总结</title>
      <link>https://helao.net/2015/514.html</link>
      <pubDate>2015-01-26 11:29:44 +0800</pubDate>
      <description>&lt;h1&gt;2014年年终总结&lt;/h1&gt;&#xA;&#xA;&lt;h3&gt;2014年工作回顾&lt;/h3&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;2014年我年初去武汉从无到有组建武汉开发团队，并在初期负责报价项目的工作安排和核心开发&lt;/li&gt;&#xA;&lt;li&gt;对接了百度、腾讯、新浪等几家广告商&lt;/li&gt;&#xA;&lt;li&gt;参与汽车头条项目的开发&lt;/li&gt;&#xA;&lt;li&gt;对Simple-FrameWork项目进行了一次重构，并添加些小功能&lt;/li&gt;&#xA;&lt;li&gt;其他参与了几个小项目的开发&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h3&gt;我做的最好的事&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;做的最好的事只有一件就是和武汉的技术团队一起渡过了开始最困难的时候，从招人到工作安排以及和北京团队的沟通协作我们遇到过很多问题，但最终都已经解决了，现在武汉团队能独立成长了。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;犯的最严重的错误&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;最严重的错误是对接百度广告时，我当时在武汉和小佳对百度广告进行了一次点击率测试。由于沟通问题，导致测试代码没有被撤销下来，引起了广告点击数据异常。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;得到的进步&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;从武汉技术团队的创建和项目的初期开发中，我对项目管理有了一定的认识。项目管理中最重要的不是技术而是沟通，只有沟通方便和沟通顺畅才能很高效的将项目按进度推进。对技术方面成长不多，只是对常用技术更熟练了些。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;将来一年里希望如何进行自我提高&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;多关注一些业界新技术，有适合公司使用的要及时跟进并引用到内部使用。目前正在关注的有docker、gerrit、webx、myibatis，还有些有可能被使用的如go、python、nodejs等。&#xA;其次要利用空闲时间进行锻炼，有个好的身体才有更多的精力进行学习和提高&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;身边做的最出色的同事&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;身边做的出色的同事有很多，就我接触的来看，我认为高歌做的非常不错，一边完成工作的同时一边又进行了大量的学习并最终能很好的运用到工作吧&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;对公司管理的建议&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;我感觉公司目前沟通效率还需要再提高，比如共同开发一个项目时，相关人员最好能在一起开发，这样方便沟通也能使大家都对项目有个整体的认识也会有参与感。 还有最好要多些小会议室，方便大家有问题随时去讨论。&#xA;有条件的话我觉得应该鼓励同事进行锻炼。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;其他&lt;/h3&gt;&#xA;</description>
    </item>
    <item>
      <title>社区功能</title>
      <link>https://helao.net/2014/513.html</link>
      <pubDate>2014-12-25 11:27:22 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt; 车轮 &lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt; 功能&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 主页&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 资讯&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 关注的资讯号发布的内容 &lt;/li&gt;&#xA;       &lt;li&gt; 没有则显示热门资讯内容 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 动态&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 关注的车型的内容 &lt;/li&gt;&#xA;       &lt;li&gt; 没有则显示推荐的车友 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 急问&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 已解决&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 车友需要解决的问题，类似百度知道 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 未解决&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 发布急问需要消耗一定的资源 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 车轮会&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 分类&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 地区 &lt;/li&gt;&#xA;       &lt;li&gt; 品牌 &lt;/li&gt;&#xA;       &lt;li&gt; 玩车 &lt;/li&gt;&#xA;       &lt;li&gt; 驾照 &lt;/li&gt;&#xA;       &lt;li&gt; 车友会 &lt;/li&gt;&#xA;       &lt;li&gt; 社区大厅 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 功能&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 话题&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 置顶 &lt;/li&gt;&#xA;         &lt;li&gt; 最新 &lt;/li&gt;&#xA;         &lt;li&gt; 精华 &lt;/li&gt;&#xA;         &lt;li&gt; 发表 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; + - 成员&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 竞选会长 &lt;/li&gt;&#xA;         &lt;li&gt; 会长候选人&#xA;          &lt;ul&gt;&#xA;           &lt;li&gt; 被会员投票选举出来 &lt;/li&gt;&#xA;           &lt;li&gt; 可投赞成票和反对票&#xA;            &lt;ul&gt;&#xA;             &lt;li&gt; 会员可以对多个人投票 &lt;/li&gt;&#xA;            &lt;/ul&gt; &lt;/li&gt;&#xA;           &lt;li&gt; 会长任免规则&#xA;            &lt;ul&gt;&#xA;             &lt;li&gt; 一个车轮会只允许有一个会长 &lt;/li&gt;&#xA;             &lt;li&gt; 申请会长必须是车轮会成功，并且此车轮会没有会长的时候都可以参与竞选 &lt;/li&gt;&#xA;             &lt;li&gt; 会员不可以申请多个车轮会的会长 &lt;/li&gt;&#xA;             &lt;li&gt; 会长竞选制度，1天内顶超过踩的数量超过30的候选人中，管理员综合评定后任命一位为会长 &lt;/li&gt;&#xA;             &lt;li&gt; 当车轮会内加油量连续7天低于10%，会长踩的数量超过顶的数量100后撤销会长 &lt;/li&gt;&#xA;            &lt;/ul&gt; &lt;/li&gt;&#xA;           &lt;li&gt; 会长操作指南&#xA;            &lt;ul&gt;&#xA;             &lt;li&gt; 内容管理&#xA;              &lt;ul&gt;&#xA;               &lt;li&gt; 删帖 &lt;/li&gt;&#xA;               &lt;li&gt; 精华贴、置顶贴 &lt;/li&gt;&#xA;              &lt;/ul&gt; &lt;/li&gt;&#xA;             &lt;li&gt; 会友管理&#xA;              &lt;ul&gt;&#xA;               &lt;li&gt; 及时回答车友疑问 &lt;/li&gt;&#xA;               &lt;li&gt; 行使自己会长权利 &lt;/li&gt;&#xA;               &lt;li&gt; 对车友处罚时应适当给予解释 &lt;/li&gt;&#xA;              &lt;/ul&gt; &lt;/li&gt;&#xA;             &lt;li&gt; 其他职责&#xA;              &lt;ul&gt;&#xA;               &lt;li&gt; 账号安全，密码复杂 &lt;/li&gt;&#xA;               &lt;li&gt; 有问题及时跟管理员沟通 &lt;/li&gt;&#xA;              &lt;/ul&gt; &lt;/li&gt;&#xA;            &lt;/ul&gt; &lt;/li&gt;&#xA;          &lt;/ul&gt; &lt;/li&gt;&#xA;         &lt;li&gt; 会长&#xA;          &lt;ul&gt;&#xA;           &lt;li&gt; 高级特权&#xA;            &lt;ul&gt;&#xA;             &lt;li&gt; 置顶 &lt;/li&gt;&#xA;             &lt;li&gt; 加精 &lt;/li&gt;&#xA;             &lt;li&gt; 推荐 &lt;/li&gt;&#xA;             &lt;li&gt; 删除 &lt;/li&gt;&#xA;             &lt;li&gt; 关小黑屋 &lt;/li&gt;&#xA;            &lt;/ul&gt; &lt;/li&gt;&#xA;           &lt;li&gt; 会务团队&#xA;            &lt;ul&gt;&#xA;             &lt;li&gt; 管理副会长 &lt;/li&gt;&#xA;             &lt;li&gt; 管理副会长权限 &lt;/li&gt;&#xA;            &lt;/ul&gt; &lt;/li&gt;&#xA;           &lt;li&gt; 专属群组&#xA;            &lt;ul&gt;&#xA;             &lt;li&gt; 有权创建车轮会专属群组 &lt;/li&gt;&#xA;            &lt;/ul&gt; &lt;/li&gt;&#xA;           &lt;li&gt; 车轮币奖励&#xA;            &lt;ul&gt;&#xA;             &lt;li&gt; 贡献越大，获得的奖励越多 &lt;/li&gt;&#xA;            &lt;/ul&gt; &lt;/li&gt;&#xA;          &lt;/ul&gt; &lt;/li&gt;&#xA;         &lt;li&gt; 副会长 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 欢迎新人&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 可以批量对会员打招呼，并保留打招呼状态 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 加油&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 对车轮会加油 &lt;/li&gt;&#xA;         &lt;li&gt; 显示当前加过油的会员 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 排行榜&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 影响参数&#xA;          &lt;ul&gt;&#xA;           &lt;li&gt; 话题 &lt;/li&gt;&#xA;           &lt;li&gt; 精华 &lt;/li&gt;&#xA;           &lt;li&gt; 推荐 &lt;/li&gt;&#xA;           &lt;li&gt; 对车轮会加油 &lt;/li&gt;&#xA;           &lt;li&gt; 周里程 &lt;/li&gt;&#xA;          &lt;/ul&gt; &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 搜索&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 搜索话题和评论 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 标签&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 好像不是从话题中分析出来的 &lt;/li&gt;&#xA;         &lt;li&gt; 那么只能是会长或副会长管理 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 群组&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; &amp;nbsp; &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 车轮会top50 &lt;/li&gt;&#xA;       &lt;li&gt; 车友top50 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 用户 &amp;nbsp; &lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>html5 学习</title>
      <link>https://helao.net/2014/512.html</link>
      <pubDate>2014-12-25 11:16:06 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt; html5学习 &lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt; 新特性&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; video &lt;/li&gt;&#xA;   &lt;li&gt; audio &lt;/li&gt;&#xA;   &lt;li&gt; cavas &lt;/li&gt;&#xA;   &lt;li&gt; svg &lt;/li&gt;&#xA;   &lt;li&gt; location &lt;/li&gt;&#xA;   &lt;li&gt; localStorage &lt;/li&gt;&#xA;   &lt;li&gt; sessionStorage &lt;/li&gt;&#xA;   &lt;li&gt; + - cache manifest&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; &amp;lt;html manifest=&amp;quot;demo.appcache&amp;quot;&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 指定了manifest的页面都会被缓存 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; manifest 需要配置正确的mime-type 即&amp;nbsp;text/cache-manifest &lt;/li&gt;&#xA;     &lt;li&gt; 文件格式&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; CACHE MANIFEST&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 需要缓存的 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; NETWORK&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 不需要缓存的 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; FALLBACK&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 当无法连网时，用offline.html 替换无法连接的页面 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 用#开始的是注释行 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 更新缓存&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 用户清空浏览器缓存 &lt;/li&gt;&#xA;       &lt;li&gt; manifest文件被修改 &lt;/li&gt;&#xA;       &lt;li&gt; 程序更新应用缓存 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; web worker&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 后台线程 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; EventSource&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 事件流===定时轮询后台数据 &lt;/li&gt;&#xA;     &lt;li&gt; 后台的请求需要把Content-Type 设置为text/event-stream &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 新输入组件&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; email &lt;/li&gt;&#xA;     &lt;li&gt; url &lt;/li&gt;&#xA;     &lt;li&gt; number &lt;/li&gt;&#xA;     &lt;li&gt; range &lt;/li&gt;&#xA;     &lt;li&gt; date pickers &lt;/li&gt;&#xA;     &lt;li&gt; search &lt;/li&gt;&#xA;     &lt;li&gt; color &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 表单属性&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; datalist&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 在一个输入框支持下拉，类似可编辑的select &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; keygen &lt;/li&gt;&#xA;     &lt;li&gt; submit 支持修改&amp;nbsp;form的属性 &lt;/li&gt;&#xA;     &lt;li&gt; input 支持image &amp;nbsp;&amp;nbsp; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>android学习路线分析</title>
      <link>https://helao.net/2014/511.html</link>
      <pubDate>2014-12-25 11:15:41 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt; android 分析 &lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt; 环境&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 平台&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; android-sdk &lt;/li&gt;&#xA;     &lt;li&gt; android-虚机 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; ide&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; idea + android plugin &lt;/li&gt;&#xA;     &lt;li&gt; android studio &lt;/li&gt;&#xA;     &lt;li&gt; eclipse +adt &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 构建系统&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; ant &lt;/li&gt;&#xA;     &lt;li&gt; maven &lt;/li&gt;&#xA;     &lt;li&gt; gradle &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 开发&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; ui构建及设计思路&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; ui&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; view &lt;/li&gt;&#xA;       &lt;li&gt; activity &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 设计 &amp;nbsp; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>技术委员会职责划分</title>
      <link>https://helao.net/2014/510.html</link>
      <pubDate>2014-12-25 11:14:44 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt; 技术部职责 &lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt; 代码开放&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; git代码全部开放只读权限 &lt;/li&gt;&#xA;   &lt;li&gt; 运维信息从代码中剥离出去 &lt;/li&gt;&#xA;   &lt;li&gt; 技术分享 &lt;/li&gt;&#xA;   &lt;li&gt; 技术推广和培训 &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 运维支撑&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 自动化构建 &lt;/li&gt;&#xA;   &lt;li&gt; 自动化部署 &lt;/li&gt;&#xA;   &lt;li&gt; 服务器信息监控 &lt;/li&gt;&#xA;   &lt;li&gt; 日志分析和记录 &lt;/li&gt;&#xA;   &lt;li&gt; 系统配置和日志配置管理和分发 &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 人员管理&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 技术人员评级&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 初级&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 要求&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 基础扎实 &lt;/li&gt;&#xA;         &lt;li&gt; 熟悉常用算法和数据结构 &lt;/li&gt;&#xA;         &lt;li&gt; 熟悉常用的ide和工具包 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 职责&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 完成由上级安排的指定项目模块 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 中级&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 要求&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 能够灵活运用常用算法和数据结构解决问题 &lt;/li&gt;&#xA;         &lt;li&gt; 对开发语言相关生态环境有一定了解，可以快速找到想要的工具 &lt;/li&gt;&#xA;         &lt;li&gt; 熟悉常用设计模式，对代码质量和编码风格有一定追求 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 职责&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 对整个项目设计有较好理解，可以独立完成整个项目开发 &lt;/li&gt;&#xA;         &lt;li&gt; 分解项目安排给初级开发人员 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 高级&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 要求&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 对领域相关的生态要非常熟悉，并对其中大部分都自己见解 &lt;/li&gt;&#xA;         &lt;li&gt; 精通相关领域中的几个部分 &lt;/li&gt;&#xA;         &lt;li&gt; 形成自己的编码风格 &lt;/li&gt;&#xA;         &lt;li&gt; 对相关领域有原创性工作 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 职责&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 对项目有完整的考虑：生存期、受众、性能要求等 &lt;/li&gt;&#xA;         &lt;li&gt; 可以完成对整个项目的设计工作，对完成核心代码 &lt;/li&gt;&#xA;         &lt;li&gt; 对相关领域技术有深入了解，对在工作中提出改进明显促进工作效率提升 &lt;/li&gt;&#xA;         &lt;li&gt; 对相关领域技术有创造性工作，可以提升公司技术储备 &lt;/li&gt;&#xA;         &lt;li&gt; 对相关领域有深入研究，可以促进公司相关技术实力的提升 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 技术路线规划&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 至少每半年要组织一次评级考试和面试 &lt;/li&gt;&#xA;     &lt;li&gt; 技术路线分为两大类&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 技术经理&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 负责具体产品开发和开发中的技术决策 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 技术专家&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 负责基础平台和核心技术的开发 &lt;/li&gt;&#xA;         &lt;li&gt; 相关技术使用规范 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 人员成长&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 技术分享&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 由同事之间分享知识 &lt;/li&gt;&#xA;       &lt;li&gt; 请外来专家分享相关知识 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 技术培训&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 入职培训 &lt;/li&gt;&#xA;       &lt;li&gt; 提供各领域相关书籍，免费借阅&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 提供书柜或图书室 &lt;/li&gt;&#xA;         &lt;li&gt; 书籍来源&#xA;          &lt;ul&gt;&#xA;           &lt;li&gt; 公司购入 &lt;/li&gt;&#xA;           &lt;li&gt; 同事分享 &lt;/li&gt;&#xA;           &lt;li&gt; 同事贡献 &lt;/li&gt;&#xA;          &lt;/ul&gt; &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 由专门的培训机构去培训2w-1m &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 减压&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 体育锻炼&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 平时&#xA;          &lt;ul&gt;&#xA;           &lt;li&gt; 室内跑步机 &lt;/li&gt;&#xA;           &lt;li&gt; 桌面足球 &lt;/li&gt;&#xA;           &lt;li&gt; 乒乓球 &lt;/li&gt;&#xA;           &lt;li&gt; 桌游 &lt;/li&gt;&#xA;           &lt;li&gt; 游戏机 &lt;/li&gt;&#xA;          &lt;/ul&gt; &lt;/li&gt;&#xA;         &lt;li&gt; 周末&#xA;          &lt;ul&gt;&#xA;           &lt;li&gt; 跑步 &lt;/li&gt;&#xA;           &lt;li&gt; 篮球 &lt;/li&gt;&#xA;           &lt;li&gt; 羽毛球 &lt;/li&gt;&#xA;          &lt;/ul&gt; &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 娱乐活动&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 电影 &lt;/li&gt;&#xA;         &lt;li&gt; 桌游 &lt;/li&gt;&#xA;         &lt;li&gt; ktv &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 团队活动&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 聚会 &lt;/li&gt;&#xA;         &lt;li&gt; 游山玩水 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 带薪假期 &lt;/li&gt;&#xA;       &lt;li&gt; 谈心&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 至少要有定期心理沟通 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 奖罚行为&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 奖励行为&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 分享知识 &lt;/li&gt;&#xA;       &lt;li&gt; 推荐优秀人才入职 &lt;/li&gt;&#xA;       &lt;li&gt; 提升公司技术实力 &lt;/li&gt;&#xA;       &lt;li&gt; 提升某部门工作效率 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 惩罚行为&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 代码风格混乱 &lt;/li&gt;&#xA;       &lt;li&gt; 多次重构后代码质量依然很差 &lt;/li&gt;&#xA;       &lt;li&gt; 长期效率低下 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 开发过程&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 角色&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 开发&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 普通开发&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 负责项目模块开发 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 开发经理&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 项目关键模块 &lt;/li&gt;&#xA;         &lt;li&gt; 一般技术决策 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 运维工具开发 &lt;/li&gt;&#xA;       &lt;li&gt; 测试工具开发 &lt;/li&gt;&#xA;       &lt;li&gt; 管理系统开发 &lt;/li&gt;&#xA;       &lt;li&gt; 行政系统开发 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 测试&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 自动化测试员 &lt;/li&gt;&#xA;       &lt;li&gt; 功能测试员 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 项目管理&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 项目经理协调各部门工作进度 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 运维&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 系统部署 &lt;/li&gt;&#xA;       &lt;li&gt; 线上数据监控和管理 &lt;/li&gt;&#xA;       &lt;li&gt; 基础设施监控维护 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 技术委员会&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 安排各项目代码审核，并审核项目核心代码，抽查项目代码 &lt;/li&gt;&#xA;     &lt;li&gt; 负责各基础服务的构建&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; gerrit服务 &lt;/li&gt;&#xA;       &lt;li&gt; git服务 &lt;/li&gt;&#xA;       &lt;li&gt; 持续集成 jenkins服务 &lt;/li&gt;&#xA;       &lt;li&gt; 自动部署服务&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 配置管理 &lt;/li&gt;&#xA;         &lt;li&gt; 日志配置管理 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 系统监控服务 &lt;/li&gt;&#xA;       &lt;li&gt; 知识库wiki &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 开发规范制定&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; ide最佳实践&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 快捷键使用 &lt;/li&gt;&#xA;         &lt;li&gt; 宏使用 &lt;/li&gt;&#xA;         &lt;li&gt; 与其他工具集成使用 &lt;/li&gt;&#xA;         &lt;li&gt; 格式化风格和代码静态检查 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;       &lt;li&gt; 代码规范检查&#xA;        &lt;ul&gt;&#xA;         &lt;li&gt; 自动检查工具 &lt;/li&gt;&#xA;         &lt;li&gt; 自动格式化工具 &lt;/li&gt;&#xA;         &lt;li&gt; 静态检查 &lt;/li&gt;&#xA;        &lt;/ul&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 决策支撑系统&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 各系统运营数据分析 &lt;/li&gt;&#xA;       &lt;li&gt; 各系统运营数据监控 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 信息安全&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 业务方面防止泄漏 &lt;/li&gt;&#xA;   &lt;li&gt; 服务器方面&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 防止被黑 &lt;/li&gt;&#xA;     &lt;li&gt; 业务接口防止拖库 &lt;/li&gt;&#xA;     &lt;li&gt; 防止内部人员拖库 &amp;nbsp; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>采集系统分析和设计</title>
      <link>https://helao.net/2014/509.html</link>
      <pubDate>2014-12-25 11:13:13 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt;  &lt;/p&gt;&#xA;&lt;p&gt; 报价采集重构 &lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt; 说明&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 报价采集模块，从汽车之家手机app接口采集汽车报价数据，分析后导入系统 &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 目标&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 优化采集流程，降低采集过程中的资源使用，提高采集效率 &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 思路&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 采集汽车之家app接口&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 减少请求数量 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 采集以每个车型为单位进行采集&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 接口有分页限制 &lt;/li&gt;&#xA;     &lt;li&gt; 单页最大条数为100 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 每个车型的数据都要备份，采集时如有变化才需要进行进一步分析 &lt;/li&gt;&#xA;   &lt;li&gt; 有变化则更新相应数据，并保留原始数据&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 原始数据可以方便以后进行数据排查 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 采集失败则需要记录日志，供快速发现问题 &lt;/li&gt;&#xA;   &lt;li&gt; 采集不再保存镜像表,在内存分析完毕后直接审核 &lt;/li&gt;&#xA;   &lt;li&gt; 确认采集完整后，直接删除原车型报价数据，用新数据替换 &lt;/li&gt;&#xA;   &lt;li&gt; 发布数据时需要线上将该表读写用缓存隔离 &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 场景描述 &lt;/li&gt;&#xA; &lt;li&gt; 设计&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 数据存储&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 尽量存储原始数据 &lt;/li&gt;&#xA;     &lt;li&gt; 有需要的再进行数据映射 &lt;/li&gt;&#xA;     &lt;li&gt; 无法准确提取的数据，严格来说不应该支持提取 &lt;/li&gt;&#xA;     &lt;li&gt; 数据提取前要对数据有预期，超出预期后则需要记录日志 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 任务日志&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 数据提取异常 &lt;/li&gt;&#xA;     &lt;li&gt; 更新数据量与前几次差距超出50% &lt;/li&gt;&#xA;     &lt;li&gt; 数据完全无法提取&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 需要记录日志 &lt;/li&gt;&#xA;       &lt;li&gt; 本次采集数据不可以导入 &lt;/li&gt;&#xA;       &lt;li&gt; 解决前不安排下次采集任务 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 过程&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 采集和收集所有数据，并进行初步聚合 &lt;/li&gt;&#xA;     &lt;li&gt; 分析数据，生成各种日志，分析结果存储文件&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 数据无异常则可以直接发布 &lt;/li&gt;&#xA;       &lt;li&gt; 有异常需要人工介入 &lt;/li&gt;&#xA;       &lt;li&gt; 本次采集无效 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;     &lt;li&gt; 编辑管理数据时，只能选择发布或，取消发布、删除。不再提供发布后编辑后草稿功能 &lt;/li&gt;&#xA;     &lt;li&gt; 数据无异常直接发布 &lt;/li&gt;&#xA;     &lt;li&gt; 发布过程&#xA;      &lt;ul&gt;&#xA;       &lt;li&gt; 线上数据接口全部启用缓存层，当发布时数据层不再提供新数据，直到发布完整 &lt;/li&gt;&#xA;       &lt;li&gt; 必须保证线上接口功能完整 &lt;/li&gt;&#xA;       &lt;li&gt; 不可以出现没有数据的情况 &lt;/li&gt;&#xA;      &lt;/ul&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 采集步骤&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 分发采集任务 &lt;/li&gt;&#xA;   &lt;li&gt; 收集采集结果 &lt;/li&gt;&#xA;   &lt;li&gt; 分析结果，采集失败需要进行重新安排采集 &lt;/li&gt;&#xA;   &lt;li&gt; 分析采集结果，并进行自动审核&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 审核步骤是否还有必要存在 &lt;/li&gt;&#xA;     &lt;li&gt; 分析结果需要对比之前的版本数据，防止不必要的数据更新 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 自动发布&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 自动发布时会对db有较大压力 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA; &lt;li&gt; 需要参与的人员&#xA;  &lt;ul&gt;&#xA;   &lt;li&gt; 自动采集&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 采集到初始数据 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 编辑人员&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 需要审核和校验数据 &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;   &lt;li&gt; 开发人员&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt; 核对数据保证数据完整 &lt;/li&gt;&#xA;     &lt;li&gt; 当数据出现问题有足够的信息可以还原原始数据，并查找原因 &amp;nbsp; &lt;/li&gt;&#xA;    &lt;/ul&gt; &lt;/li&gt;&#xA;  &lt;/ul&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>人的定义</title>
      <link>https://helao.net/2014/508.html</link>
      <pubDate>2014-09-19 09:11:09 +0800</pubDate>
      <description>&lt;p&gt; 人所拥有的标签&lt;br /&gt; 热情、懒惰、创造、技术、专业、毁灭 &lt;/p&gt; &#xA;&lt;p&gt; 人们应该是向利的，人们应该追求有价值的东西，价值可以从很多方面去定义，人生很短暂，要多打算，多发挥自己的价值，多发挥自己的长处 &lt;/p&gt; &#xA;&lt;p&gt; 自己的人生该怎么度过呢 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>论社交关系</title>
      <link>https://helao.net/2014/507.html</link>
      <pubDate>2014-09-17 05:42:47 +0800</pubDate>
      <description>&lt;p&gt; 如何维护自己的社交关系？这是一个在社会中的人类必须要考虑的问题。 &lt;/p&gt; &#xA;&lt;p&gt; 首先为什么要维护社交关系？ &lt;/p&gt; &#xA;&lt;p&gt; 怎么去维护这些关系？ &lt;/p&gt; &#xA;&lt;p&gt; 怎么去更好的利用这些关系 &lt;/p&gt; &#xA;&lt;p&gt; 怎么去避免这些关系带来的问题 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 常识、概念： 每个人社交群体最大为150-200人，超过这个级别的必须参过等级制度来进行细分，社交群体中会分为核心、重要、普通几个级别，群体外可以认为陌生人&lt;br /&gt; 社交的属性：亲情&lt;br /&gt; 社交的意义&lt;br /&gt; 社交的方法&lt;br /&gt; 社交的利弊 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>这几天可以考虑开始做的事</title>
      <link>https://helao.net/2014/476.html</link>
      <pubDate>2014-08-27 08:59:02 +0800</pubDate>
      <description>&lt;h1&gt;任务队列&lt;/h1&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;一个android游戏，数独，集成Lua和html5&lt;/li&gt;&#xA;&lt;li&gt;html5版三国杀和炉石传说&lt;/li&gt;&#xA;&lt;li&gt;mvc框架改进，基于webx吧&lt;/li&gt;&#xA;&lt;li&gt;python的 os模块熟悉，对系统监控系统的改进&lt;/li&gt;&#xA;&lt;li&gt;lisp的学习&lt;/li&gt;&#xA;&lt;li&gt;多看些书，对世界和生命的意义还需要继续思考&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>2014年08月26日 留念</title>
      <link>https://helao.net/2014/475.html</link>
      <pubDate>2014-08-26 02:08:50 +0800</pubDate>
      <description>&lt;h1&gt;族谱&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;需求&lt;/h2&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;族谱中的关系是不能修改的，已经是历史&lt;/li&gt;&#xA;&lt;li&gt;需要考虑族谱中特殊情况： 乱伦、改嫁、领养、孤儿、入赘、多妻、私生子等等情况&lt;/li&gt;&#xA;&lt;li&gt;需要用图表的形式表达出来&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h2&gt;模型分析&lt;/h2&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;首先有个自然人的模型，只包含基本信息，编号、姓名、性别&lt;/li&gt;&#xA;&lt;li&gt;每个人可以有很多事件如：出生、结婚、生子（可）、领养、死亡&lt;/li&gt;&#xA;&lt;li&gt;根据这些信息还原成一个族谱网，这个关系网是真实的，之间的关系会有重复&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h2&gt;还原算法&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;还在想&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>如何提升自己的效率</title>
      <link>https://helao.net/2014/453.html</link>
      <pubDate>2014-08-11 09:20:59 +0800</pubDate>
      <description>&lt;p&gt; 提升自己的效率很简单，只有两个原则：不重复做东西，不做没用的东西 &lt;/p&gt; &#xA;&lt;p&gt; 这要求要有个好设计，而且你要对要做的东西有很深入的了解，知道哪些价值最大，哪些价值最小，优先做价值最大的，最后做价值最小的，要有个好设计 ，才能使用你做最少的事情，完成最多的工作 &lt;/p&gt; &#xA;&lt;p&gt; 首先我们明确不同的语言，可以产生的效率是不同的，基于同样熟练度 &lt;/p&gt; &#xA;&lt;p&gt; 比如java 语言有大量的重复的东西，对于表达自己的意思很罗嗦，因此这是一个不高效的工具，它不是个好设计 &lt;/p&gt; &#xA;&lt;p&gt; python 使用上方便些，动态语言会更灵活，因为能用服务器搞定的事就不应该麻烦程序员，这是很浪费时间的事 &lt;/p&gt; &#xA;&lt;p&gt; ruby开发非常方便，和python一样执行效率不高 &lt;/p&gt; &#xA;&lt;p&gt; lua 是嵌入语言，只实现了很简单的功能，执行效率高，配合nginx非常高效 &lt;/p&gt; &#xA;&lt;p&gt; 还有一个lisp 据说对于表达程序员意图非常方便，执行效率也高，是个非常不错的语言，可以考虑下 &lt;/p&gt; &#xA;&lt;p&gt; 其他的就是工具库的熟悉，也能有效的增加效率。动态语言比静态的效率要高，这个可以确定，越灵活的语言对于提升效率就越有帮助 &lt;/p&gt; &#xA;&lt;p&gt; 我们其实要做的是对世界的了解，只有你越了解这个世界你才能了解它的规则，只有按照规则你才能获得更大的生存空间，一切皆为生存 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>财富论</title>
      <link>https://helao.net/2014/452.html</link>
      <pubDate>2014-08-11 09:04:55 +0800</pubDate>
      <description>&lt;p&gt; 财富不是不变的，是可以被创造的，每个人都在创造的财富。 &lt;/p&gt; &#xA;&lt;p&gt; 财富来源的好多途径，合法的有婚姻、继承、创造、税等。我们大部分情况下只能用创造这个方法，这也就是大部分人很穷的原因。 &lt;/p&gt; &#xA;&lt;p&gt; 你的财富的快速增加取决于两个条件：可测量性、可放大性。 &lt;/p&gt; &#xA;&lt;p&gt; 1. 可测量性，财富与你的效率成正比，比如你1个月工资1w，你要积累100w需要9年， 如果你能1年干完9年的活，那么你能获得100w吗？ 在别人的公司显然不能，因为他们为你付过工资了，你的效率被别人平均了。 &lt;/p&gt; &#xA;&lt;p&gt; 2. 可放大性，你1小时的时间做了一道菜，就一个吃，如果你开发了一个小游戏可能有1000个人玩，只要有10%付费就会有很多，而且这是可以积累的，因此要做放大性多的工作 &lt;/p&gt; &#xA;&lt;p&gt; 如果有上面两个条件，你只要肯付出时间，你的财富就是大量增加，比如你每天工作16小时，可以得到之前上班几倍的收入，这是非常值得的，只有大量的财富才能刺激人们努力工作，而不是混日子。没有充分的回报是不能调动积极性的 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 因此要想赚取更多的财富就要找这个方面的工作，如果没有，那么你可以创业，如果你创业也不能满足这些条件就没办法了，混吧 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>致富的方法</title>
      <link>https://helao.net/2014/451.html</link>
      <pubDate>2014-08-09 05:25:54 +0800</pubDate>
      <description>&lt;p&gt;1.创造有价值的东西&#xA;&lt;br /&gt; 2. 赌博、投机、婚姻&#xA;&lt;br /&gt; 3. 继承、偷窃、敲诈&#xA;&lt;br /&gt; 4. 垄断、诈骗、行贿&#xA;&lt;br /&gt; 5. 游说、造假、开矿&#xA;&lt;br /&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>圣人不死，大盗不止</title>
      <link>https://helao.net/2014/450.html</link>
      <pubDate>2014-08-07 05:40:14 +0800</pubDate>
      <description>&lt;p&gt; 天地不仁以万物为刍狗，又名道可道、非常道，道只是万物遵守的规则体而已，或者是这个世界的规则集，这也是人们口中的佛、神、上帝、道等，人生在这个世界就得遵守这个规则，不遵守就会被淘汰，这是生存问题。 &lt;/p&gt; &#xA;&lt;p&gt; 再说基于这个规则人是不能长生的，物质是缺少的，人们是愚昧的，环境是变化的， &lt;/p&gt; &#xA;&lt;p&gt; 1. 易说动则生变，就会有75%变化的可能，但人不能静，静下来和石头有什么区别，因此人不能长生，人是善动的、也是善变的。 &lt;/p&gt; &#xA;&lt;p&gt; 2. 物质是稀少的，对人好的东西就那么多，自然不能平分，再说人是独立的个体，也有不同的需求，因此不能调和，为此人们发明的等级，其实等级也是一直存在的，前面5000年只是把这个发挥了作用，因此我们传承了下来，可这同样让我们积累了大量的副作用，产生了弱势文化，即期待别人的变化来使自己的生活变的更好，期待别人的施舍来使自己吃饱，期待强者的自律来使自己不受欺负，期待救世主的出现来改善自己贫穷的生活。只规则不会变，我们只能去适应规则，也就是生存法则。 &lt;/p&gt; &#xA;&lt;p&gt; 既然这世界允许有强弱，那么自然也就允许不平等，要想获得平等，至少要有同样的实力，要想变强那么只能自己去利用规则，改善自己的处境，而不是等待强者的施舍，靠施舍永远不可能平等，施舍本身承认不平等，因此想变强靠自己遵守这个世界规则才行，也许不符合道德、不符合法律、不符合你的价值观、世界观，但你要变强只能去遵守这个不变的规则，这个规则不会因为你的认知出现偏差，也不因此你不认识而改变 &lt;/p&gt; &#xA;&lt;p&gt; 3. 人们是愚昧的，人们的认知是不断成长的，但也是有限的，根本不符合人类自身现有的构造。首先人是怎么产生的？是神吗？ &lt;/p&gt; &#xA;&lt;p&gt; 是神的话，那神有什么能力？又为什么人们有这么多缺点，为什么人们需要信仰？ 神需要回报吗？ 需要的话，那人们的信仰就是交易，就不是恩赐，恩赐是不需要回报的，这是不对待的。如果交易的话，只能说明神也是有缺点的，他不是完美的，只是另一类人而已。 &lt;/p&gt; &#xA;&lt;p&gt; 4. 环境是变化的，随着时间的变化环境也在不同的变化，当有人的时候这个过程会明显加快，这一切都是因，将导致其他的果，也许应在别人身上也许应在自己身上，随着变化产生的是网状的因果关系，动的越多因果越乱，自然无法把握未来，但要想改变只能去利用这个因果才有机会，如果有一切不可变，因果自然不会产生 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 可这个世界的规则是什么？是明心见性、是如见如来、还是什么？我们怎么去做才能遵守规则，才能不被淘汰？ &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>第一次通关的解密游戏，大概花了一个工作日</title>
      <link>https://helao.net/2014/449.html</link>
      <pubDate>2014-08-04 06:49:53 +0800</pubDate>
      <description>&lt;p&gt;#1&#xA;&lt;br /&gt; 按提示可知是brain.fuck 语言，找个编译器跑一下就好了&#xA;&lt;br /&gt; welcome&#xA;&lt;br /&gt; #2&#xA;&lt;br /&gt; 这里面共有两个值，首先按数列得出1944, 下面终极答案直接google，是42，计算得到&#xA;&lt;br /&gt; 81648&#xA;&lt;br /&gt; #3&#xA;&lt;br /&gt; 这个其实是Dvorak键盘布局，这里我们要做的是把下面打乱的用正常的布局转换回来就好了&#xA;&lt;br /&gt; 结果是这个 main() { printf(&amp;amp;unix[&amp;quot;\021%six\012\0&amp;quot;],(unix)[&amp;quot;have&amp;quot;]+&amp;quot;fun&amp;quot;-0x60);}&amp;nbsp;&#xA;&lt;br /&gt; 这个c中很常见的一个问题，简单方法是直接执行下，就可以了。想看原理的，google&#xA;&lt;br /&gt; 执行结果是unix&#xA;&lt;br /&gt; #4&#xA;&lt;br /&gt; 首先二维码解析出来是 [abcdefghijklmnopqrstuvwxyz] &amp;lt;=&amp;gt; [pvwdgazxubqfsnrhocitlkeymj]&#xA;&lt;br /&gt; 很明显是做了字母映射导致的语句错误，反转回来即可&amp;nbsp;&#xA;&lt;br /&gt; Where there is a shell, there is a way. I expect you use the shell command to solve this problem, now, please try using the rot13 of &amp;quot;shell&amp;quot; to enter next level.&#xA;&lt;br /&gt; 看意思是要对shell进行rot13, 直接google,其实就是对字母进行13个错位&#xA;&lt;br /&gt; echo &amp;lsquo;shell&amp;rsquo; | tr &amp;lsquo;[A-Za-z]&amp;rsquo; &amp;lsquo;[N-ZA-Mn-za-m]&amp;rsquo;&#xA;&lt;br /&gt; furyy&#xA;&lt;br /&gt; #5&#xA;&lt;br /&gt; 回文，看要求，只有满足[A-Z][0-9][a-z][0-9][A-Z]|[0-9][A-Z][a-z][A-Z][0-9]这两种情况的才算满足，&#xA;&lt;br /&gt; 看提示在源文件中发现一堆字符，刚开始不明白题意，后来才想清楚直接进行回文模式查找，中间的字母是有效的，&#xA;&lt;br /&gt; 输出：variables&#xA;&lt;br /&gt; #6&#xA;&lt;br /&gt; 点击图片，发现返回数字，把数字替换掉2014，发现又返回了一个新数字，直接写程序跑，直到不是数字&#xA;&lt;br /&gt; Cool! the next level is &amp;quot;tree&amp;quot;&#xA;&lt;br /&gt; #7&#xA;&lt;br /&gt; 这个耽误的时间很长，没有想清楚思路，一个中序和后序输出，求原始tree，直接写程序吧，说了好长时间，才决定写，&#xA;&lt;br /&gt; 因为感觉很复杂，有两个规则，1，中序是tree的排序，2，后序可以确定root&#xA;&lt;br /&gt; 求出tree后，找到最长的zWp8LGn01wxJ7&#xA;&lt;br /&gt; 然后用下面的命令解码&#xA;&lt;br /&gt; echo U2FsdGVkX1+gxunKbemS2193vhGGQ1Y8pc5gPegMAcg=|openssl enc -aes-128-cbc -a -d&#xA;&lt;br /&gt; 输入密钥，就有答案了nqueens&#xA;&lt;br /&gt; #8&#xA;&lt;br /&gt; 9皇后问题，写个程序跑，满足sha1( $passwd + $code + &amp;quot;\n&amp;quot; ) = e48d316ed573d3273931e19f9ac9f9e6039a4242即可&#xA;&lt;br /&gt; 953172864&#xA;&lt;br /&gt; #9&amp;nbsp;&#xA;&lt;br /&gt; 这个比较简单，其实就是26进制，直接转成10进制，计算后转回26进制&#xA;&lt;br /&gt; DUYO&#xA;&lt;br /&gt; #10&#xA;&lt;br /&gt; 这个看半天，才发现图片上都有title提示，上google,是猪圈算法，得出下面的值 helloworld&#xA;&lt;br /&gt; 搞定&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;br /&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>我想要一辆汽车</title>
      <link>https://helao.net/2014/448.html</link>
      <pubDate>2014-07-27 05:33:39 +0800</pubDate>
      <description>&lt;p&gt; 在汽车之家看了好多汽车图片，也研究了好多参数，感觉现有的汽车还处在很落后的阶段，还有很大的提升空间 &lt;/p&gt; &#xA;&lt;p&gt; 下面说说我想的汽车： &lt;/p&gt; &#xA;&lt;p&gt; 1. 首先汽车要安全，可用的配置如像esp、abs等要成为标配，这是在实际驾驶中很容易出事故的地方，还有8个安全气囊，在撞车时，车辆一定不能变形严重，更不能分裂。 &lt;/p&gt; &#xA;&lt;p&gt; 2. 使用便利性，倒车雷达、倒车影像、自动泊车、感应雨刷、感应大灯、会车时远近光自动切换、保持完全驾驶距离、车窗防夹手、后视镜自动加热，定速巡航、自动保持车道、导航 &lt;/p&gt; &#xA;&lt;p&gt; 3. 操作便利性，自动档和手动档都要有，可以切换驾驶方式 &lt;/p&gt; &#xA;&lt;p&gt; 4. 外观，首先要大气、方便更换车身、方便清洗 &lt;/p&gt; &#xA;&lt;p&gt; 5. 娱乐性，音响系统、中控屏幕、汽车参数可实时读取，但不可控制 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>项目部署和运维的想法</title>
      <link>https://helao.net/2014/447.html</link>
      <pubDate>2014-07-26 06:19:00 +0800</pubDate>
      <description>&lt;p&gt; 项目部署时会和运行环境相关，部署时也需要调整为生产环境参数以及预期压力，需要部署几台机器，有没有预期的性能瓶颈，有没有特殊的需求，这些其实是跟开发和测试相关度最高，测试可以发现性能上的瓶颈点，需要三方商讨解决，因此部署时需要开发、测试、运维三方都在场的，上线后，回归测试和运维监控性能是否合适，没问题就上线成功，有问题直接回滚，退回开发和测试。 &lt;/p&gt; &#xA;&lt;p&gt; 之前开发组中配备运维也是这个原因，可以在前期测试阶段就预期到用户量和性能点，以及扩展性。 &lt;/p&gt; &#xA;&lt;p&gt; 说了这么多，关键的部署，应该有一个部署服务器，可以直接从代码库中迁出需要发布的代码，然后运维根据需求调整代码中的参数，这个参数应该方便调整，最好有可视界面和模板来管理，为发布提供好需要的资源后，将新版上线，流量逐渐导入，期间观察服务性能，不断调大流量，直到流量全部到位。旧系统没有流量后，等新系统稳定后停止服务。生产环境的所有代码和相关运行环境和相关数据一定要备份归档，至少要在一个月后或半年后才能删除 &lt;/p&gt; &#xA;&lt;p&gt; 这里其实用到了一些很强大的工具，如同时操作很多服务器，同时修改他们的配置。还有就是服务器的监控，这里有四个监控角度，一硬件数据如 内存、cpu、硬盘空间、连接数;二软件数据，如jvm的内存、mysql的连接数和负载，nginx的，cache的命中率等；三系统本身的数据，如连接池使用情况，各方法执行情况，服务调用率，服务出错率等；四：业务数据：如文章增长率，新用户增长率和用户总数据，以及相关统计数据等 &lt;/p&gt; &#xA;&lt;p&gt; 部署和监控要分离，各级别的监控数据最好也要分离，监控数据分两大类：一是运维需要，二是产品需要。所有的事情必须要有反馈才能良好的做下去 &lt;/p&gt; &#xA;&lt;p&gt; 下面说说部署服务器吧，首先可以把所有机器注册到服务中心，通过服务中心去管理，这里还需要一个执行脚本功能，可以把脚本推送到指定服务器群，而且也需要执行结果。每个机器也需要注册自己的服务，可以看到服务的使用。 &lt;/p&gt; &#xA;&lt;p&gt; 每个系统发布前则需要新服务器，重新配置环境，如果不需要，则直接停止旧服务，备份后，更新新系统，也需要增量更新。更新前要有备份，这样才能在有问题时回滚。需要调整数据的一定停服务，新服务可以不用停 &lt;/p&gt; &#xA;&lt;p&gt; 部署的最佳实践： 单台服务器： 一、停止流量，停止服务，备份数据，清理环境，更新代码，启动新服务，导入流量。这样会有一段时间无法访问服务 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; 二、开新机器，部署新系统，逐渐导入流量，流量全部导入后，停掉旧服务，并备份归档 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;集群环境： &amp;nbsp; 也同样按上面单台单台的推送，这样防止有问题影响很大，也防止停掉大量机器导致大量流量导入到其他服务器中，建议集群下有1-10台备用机，更新时先从备用机逐渐推送到其他机器上，这样可以保证升级过程中的平稳，同样可以通过程序把这个流程固定下来，部署就方便多了 &lt;/p&gt; &#xA;&lt;p&gt; 运维则通过每台机器上的监控数据（硬件参数、服务参数、应用参数）来确保每台机器是正常的，升级成功后可以启动自动监控和报警。 &lt;/p&gt; &#xA;&lt;p&gt; 为了方便运维人员，通过硬件和服务、应用的自注册会更方便一些，这样只要网络正常运维人员是很方便管理的，也方便监控和报警。一切都要自动化，必须要基于最简单的逻辑，按层次逐渐复杂下来，但尽量不要引用网状逻辑，这样必须需要服务器自管理，运维人员没办法控制这样的系统 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>关于开发模式的一点想法</title>
      <link>https://helao.net/2014/446.html</link>
      <pubDate>2014-07-25 11:19:44 +0800</pubDate>
      <description>&lt;p&gt; 开发分为几块：人员管理，任务管理，代码管理，测试管理，部署和运维管理 &lt;/p&gt; &#xA;&lt;p&gt; 人员管理和任务管理已经说过了，下面继续聊一聊跟开发人员相关的事情，首先说代码管理： &lt;/p&gt; &#xA;&lt;p&gt; 代码管理工具莫过于git,本地也可以使用、方便快捷，使用git也有几种使用模式， &lt;/p&gt; &#xA;&lt;p&gt; 模式1： 所有人直接使用master提交代码，代码混乱、质量不可控 &lt;/p&gt; &#xA;&lt;p&gt; 模式2：每个人仍然使用master,但会在本地开个分支，如果和其他人有共享需求则把分支上传到线上，分支开发完成后，合并回主线，。这种模式的好处是有个相对稳定的主线，适合开发小组采用这种方式 &lt;/p&gt; &#xA;&lt;p&gt; 模式3：有一个主干，每个人开发的化则需要从主干中fork到自己工作区，自己则遵循本地分支的开发方式完成任务后提交回自己的Master,然后通知主干管理员将代码合并过去，主干管理员则自己开个分支合并修改，测试通过后合并回master ，供其他人更新。这样的好处是每个人都能很方便的管理自己的项目，这对大型项目来说非常有帮助，而当多人负责同一模块时则几个人使用一个fork后的项目，由主fork人负责主干的合并 &lt;/p&gt; &#xA;&lt;p&gt; 模式4：有一个主负责人，加几个分模块负责人，所有人fork自己所属模块负责人的项目 ，并将完成后的代码提交给他，由他测试后合并到自己的主干，再提交给主负责人，主负责人则只合并所有分负责人的修改，合并到总主干，做为整个项目的基准。这种模式适合超大项目合作，如lihux内核等 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 测试是个很复杂的话题，一、测试会浪费大量时间和人力，二、测试带来的好处不多，好多项目没有测试同样的线上跑的很好，或者只经过简单的功能测试就可以了 &lt;/p&gt; &#xA;&lt;p&gt; 那我只能说他们还没感受到测试带来的好处，对于整体项目而言当项目越来越大时每次发版前的自动回归测试就必不可少了，人工已经很难测试这么庞大的业务了，庞大的业务带来的是开发人员的急速扩张，业务的各种重合，每当修改一处代码极有可能导致其他地方出现问题，因此只能自动化的回归测试才能解决。对个人而言，他不想测试的是，他对代码质量的不确定，对业务的不确定，他不能保证代码是否正确，只能说代码运行起来貌似是对的。因此最好是采用测试驱动，测试驱动对业务理解才是最准确的，没有写测试只能说他对业务理解不够准确，测试写好了，业务才有保证，也能方便他写完后检测成果 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>开发模式的一点想法</title>
      <link>https://helao.net/2014/445.html</link>
      <pubDate>2014-07-25 01:39:03 +0800</pubDate>
      <description>&lt;p&gt; 开发应该以小组为单位，3-10人范围，如果有大项目则多小组合作开发，他们必须在本小组中学会如何去合作，如何去相处，才能在更大尺度的合作中得心应手。 &lt;/p&gt; &#xA;&lt;p&gt; 小组的基本组成：前端、设计（包含ui交互设计）、产品、后端开发、测试、组长（协调整个项目进度和工作安排），运维。 &lt;/p&gt; &#xA;&lt;p&gt; 这是纵向管理，横向管理需要用工会吧：前端工会、设计工会、产品、后端、测试、协调人、运维等工会或部门来管理，工作评定、职位晋升、待遇提升。 &lt;/p&gt; &#xA;&lt;p&gt; 小组的组合应该相对固定，也可以随意组合，这样也方便补充人手，甚至可以直接补充小组 &lt;/p&gt; &#xA;&lt;p&gt; 当人手少时，直接归属于各部门，就不用直属小组了，这样也方便各业务展开和开发技术的提高，这样横向、纵向管理就到位了，所有的这些技术部门归属于技术部归cto管理，这样只要可以分别从小组入手也可以从人员入手去提高员工待遇。 &lt;/p&gt; &#xA;&lt;p&gt; 为什么一定要分组呢，因为开发中人员沟通的成本非常高，因此要把他们聚合到一起，减少沟通成本，集中精力搞开发。其次各环节对业务的侧重点不同，开发和产品看待问题的角度上差距是非常大的，因此直接让产品去负责业务和其他部门的沟通，防止出现开发对业务理解不清楚，或浪费大量精力在改进业务上，术业有专攻，每种职业是有差别的，因此不用他们做自己不熟悉的事，只有精英才能发挥更大的力量 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>关于项目管理的一点看法</title>
      <link>https://helao.net/2014/444.html</link>
      <pubDate>2014-07-25 11:32:12 +0800</pubDate>
      <description>&lt;p&gt; 最近在看一本网络小说，发现门派中的任务点或贡献点管理模式很有可取之处。这样可以很方便的将员工的贡献量化，而不是任由老板随意指定，这样能杜绝很大的不公平操作。 &lt;/p&gt; &#xA;&lt;p&gt; 按这样的思路继续想下去，公司需要一个任务发布部门负责任务登记、任务验收、贡献点发放等工作。为了确保员工的工作积极性，员工每个月应该完成一定的贡献点才能认为是工作合格，当超额完成时多余的点可以累计下去，可以用贡献点兑换其他东西（如升职、加薪、实物（电子产品、购物券、餐券等）、带薪假），当员工无法完成指定贡献点时需要一定的惩罚措施，直到离职。 &lt;/p&gt; &#xA;&lt;p&gt; 这样按不同级别的员工产生的贡献点不同，也可以设置高低两个贡献点处，可以完善解决员工积极性的问题，其他的时间就可以灵活处理了，贡献点不能交易，这样避免无效员工。 &lt;/p&gt; &#xA;&lt;p&gt; 关键就是任务的量化机制，这个应该是很重要的，还有每个级别的员工的贡献点。开放员工自我管理，员工行政和人事，任务点管理，其他的只需要成立几个大部门负责人即可，其他的让用户自由分组和贡献点分配就行了，管理也会很方便 &lt;/p&gt; &#xA;&lt;p&gt; 如果贡献点定位不合理的化，或任务安排不合理（这相当于调度中心），或员工积极性不好的化容易导致进度安排不合理。还有问题就是自由结组的化贡献点分配合理的问题，这要求员工必须是精英级的才行，他们能为自己的行为负责，能安排好自己的人生，需要保姆型的人才目前不适合这种管理方式 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>论一个单身狗的自我修养</title>
      <link>https://helao.net/2014/443.html</link>
      <pubDate>2014-07-24 06:06:04 +0800</pubDate>
      <description>&lt;p&gt; 世上有完美的女人吗？&amp;nbsp; &lt;/p&gt; &#xA;&lt;p&gt; 有，只有你有钱 &lt;/p&gt; &#xA;&lt;p&gt; 1，童颜巨乳 &lt;/p&gt; &#xA;&lt;p&gt; 2，肤白貌美 &lt;/p&gt; &#xA;&lt;p&gt; 3，贤淑孝顺 &lt;/p&gt; &#xA;&lt;p&gt; 4，温柔善良 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>社会杂谈</title>
      <link>https://helao.net/2014/411.html</link>
      <pubDate>2014-06-09 06:16:42 +0800</pubDate>
      <description>&lt;p&gt; 今天看到一句话：侠以武犯禁。突然想到很多东西，首先说说侠，我心中印象最深的是唐朝的游侠儿，每天放酒当歌，怒则杀人，随心而动，好不自在。 &lt;/p&gt; &#xA;&lt;p&gt; 有侠的世界是不幸的，没侠的世界就更加不幸了，遇到不公的事连解决的方式都没有。侠只是一种手段，只为自保，也许会误杀无辜，至少他会认错，他会内疚。他的武可以健身，可以强体，可以遇见欺负时可以自保 &lt;/p&gt; &#xA;&lt;p&gt; 侠犯禁的原因有两个：官老爷没有了特权和官威，因为侠会为了自己怒而杀人，也可以为别人杀人，官老爷很没安全感。我朝官大爷普遍安全感较差，以至于全部住深宅大院，武警站岗保卫。 &lt;/p&gt; &#xA;&lt;p&gt; 那么怎么避免侠以武犯禁呢，国家有足够的能力不怕侠犯错，国家主动惩恶扬善不给侠机会，众生平等不搞特权，这样的国家自然很多，不愿做的国家也很多，还是为了自己的利益。我最喜欢红军的一句话：首长，保重龙体啊，为了百姓吃口肉吧 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>一年之计在于春-2014</title>
      <link>https://helao.net/2014/410.html</link>
      <pubDate>2014-03-27 03:58:11 +0800</pubDate>
      <description>&lt;p&gt;#回顾2013&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;2月份&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;过年回来，我便计划离职事宜，只是项目暂时没有完工，出于职业操守坚持到了3月份底&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;3月份&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;依然在不停的工作着，在月底了，先请假一天紧接着开始辞职，两个原因：工作不满意，没有我负责的东西，对管理层不满意，加班太多&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;4月份&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;本来离职已经办好了，我也开始休息，准备去找工作，也许那时候我去天津的话，会选择在天津工作。&#xA;姜老大突然给我打来电话，说了好多公司发展和个人发展方面的问题，这些我都懂，但对公司当时意见很大。我想自己去完全去负责一些东西，他也是支持去独当一面的，但实际过程中不会那么一帆风顺的，总会有各种问题，他希望我能留下来适应这个过程，才能有更大的发展，这是他的承诺，也是我对他的信任。就这样我留了下来，继续做着和原来的工作。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;5月份&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;项目上线后如愿的收到了大量问题，这些问题解决起来非常麻烦，只能不断的去解决，这样过了1个月，我开始负责这个项目 ，但我知道这个项目这样是根本无法上线的，只能这样去维持。&#xA;这期间老大对这个项目很失望，也在进行关注。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;6月份&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;项目到了这个时候居然要开始内测了，可明显还有很多问题没有解决掉，问题很多。到月底的时候老大决定停止对外测试，只对内使用，这标志着这个项目失败了，无限期暂停。人员这时候也开始了大量流失，没走的人也都会负责其他项目 ，我也开始接触其他的项目，意味公司战略进行调整了&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;7月份&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;公司也给我20万的原始股，按4年每年50%的生效。我并不知道公司当时的估值是多少，后来听老大说起才知道公司的估值已经到 6亿美元了。这期间我虽然名义上负责车友说项目但实际这个项目已经到了停工的地步，我不断开始接触其他项目&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;8，9，10，11月份&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;这几个月实际我的产出非常少，虽然做了几个项目但是全部没有上线，一个人做项目要达到完美的地步很难，尤其是还被别人认为很简单，却不断在细节上挑问题，说不符合他的想法，他就从来没说过他的想法。就这样几个月过去了&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;12月份，1月份&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;开始去武汉出差，武汉要成立自己的研发团队，明显是为了摆脱北京这边的控制。可这边会同意吗，明显不会。于是见证了奇迹，武汉的开发团队因为没有前端美工没办法开展工作，北京的答复是北京的前端很忙，无法提供帮助，呵呵。武汉急于摆脱控制希望快速推出产品，完成团队建设。而北京则基本不提供任何帮助，这个过程我一边负责北京这边的项目，还要负责武汉的团队建设，基础开发，真的很忙。后面根本没有精力继续进行武汉那边的安排，一度处于无安排状态，这也导致他们对项目和公司的不信任。后来项目无法推进的时候，北京这边入场了，直接将已经的产品按自己想法进行了调整，技术上没有变化。这样北京拿到了武汉的最终开发权限，我也没达到预期要求，导致了老大他们计划的改变。这个过程对我打击也很大，原来自己还欠缺很多，要进行发展不是紧紧靠自己有技术就可以搞定了，这个自己要多想多看多找机会练习&lt;/p&gt;&#xA;&#xA;&lt;h1&gt;2014&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;利用空闲时间把基础服务重新整理一些可用服务，如： 服务器管理和监控，消息中间件，redis和mongodb在系统的使用，lucene分布服务的架设这几点是必须要学的&lt;/h2&gt;&#xA;&#xA;&lt;h2&gt;完成自己的项目，需要学习android,iphone,nodejs,python，有两个项目是必须是完成的1：三国杀和餐厅点单结算系统&lt;/h2&gt;&#xA;&#xA;&lt;h2&gt;要锻炼身体，争取减肥成功到140，手臂力量能有所提升&lt;/h2&gt;&#xA;</description>
    </item>
    <item>
      <title>如何添加一个新硬盘，并分区</title>
      <link>https://helao.net/2013/409.html</link>
      <pubDate>2013-10-21 09:19:59 +0800</pubDate>
      <description>&lt;p&gt; 1.&amp;nbsp;&amp;nbsp;&amp;nbsp;切换到root;&lt;br /&gt; 2.&amp;nbsp;&amp;nbsp;&amp;nbsp;运行命令&amp;nbsp;&amp;quot;fdisk&amp;nbsp;/dev/xvdb&amp;quot;;&lt;br /&gt; 3.&amp;nbsp;&amp;nbsp;&amp;nbsp;根据提示，依次输入&amp;nbsp;&amp;quot;n&amp;quot;,&amp;nbsp;&amp;quot;p&amp;quot;,&amp;nbsp;&amp;quot;1&amp;quot;;&lt;br /&gt; 4.&amp;nbsp;&amp;nbsp;&amp;nbsp;然后&amp;nbsp;，按两次回车;&lt;br /&gt; 5.&amp;nbsp;&amp;nbsp;&amp;nbsp;输入&amp;nbsp;&amp;quot;w&amp;quot;,&amp;nbsp;当提示Syncing&amp;nbsp;disks.时，表示已成功完成分区;&lt;br /&gt; 6.&amp;nbsp;&amp;nbsp;&amp;nbsp;输入&amp;nbsp;&amp;quot;mkfs.ext3&amp;nbsp;/dev/xvdb1&amp;quot;&amp;nbsp;格式化分区；这里要耐心等待&lt;br /&gt; 7.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输入&amp;nbsp;&amp;quot;mkdir&amp;nbsp;/data0&amp;quot;建立挂载目录&lt;br /&gt; 8.&amp;nbsp;&amp;nbsp;&amp;nbsp;使用&amp;quot;mount&amp;nbsp;/dev/xvdb1&amp;nbsp;/data0&amp;nbsp;&amp;quot;命令挂载分区后即可使用。&lt;br /&gt; 9.&amp;nbsp;vi&amp;nbsp;/etc/fstab&lt;br /&gt; 按&amp;nbsp;i&lt;br /&gt; 最后一行写入&lt;br /&gt; /dev/xvdb1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/data0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ext3&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;defaults&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;0&lt;br /&gt; 按esc&amp;nbsp;&lt;br /&gt; 输入:wq&amp;nbsp;，回车&lt;br /&gt; 操作完毕 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 挂载会丢掉硬盘中的数据 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>记几条命令</title>
      <link>https://helao.net/2013/408.html</link>
      <pubDate>2013-10-16 12:23:26 +0800</pubDate>
      <description>&lt;p&gt; jstat -gcutil pid &lt;/p&gt; &#xA;&lt;p&gt; jmap -heap pid &lt;/p&gt; &#xA;&lt;p&gt; jmap -histo pid &lt;/p&gt; &#xA;&lt;p&gt; jstat -gc pid&amp;nbsp; &lt;/p&gt; &#xA;&lt;p&gt; jstat -gcold pid &lt;/p&gt; &#xA;&lt;p&gt; jstat -class pid &lt;/p&gt; &#xA;&lt;p&gt; jstat -compile pid &lt;/p&gt; &#xA;&lt;p&gt; jstat -gccapacity pid &lt;/p&gt; &#xA;&lt;p&gt; jstat -printcompilation pid &lt;/p&gt; &#xA;&lt;p&gt; jstat -gcnew pid &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; jmap -dump:format=b,file=&lt;strong&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;m.dat&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;pid &amp;nbsp;||用jhat命令可以参看 jhat -port 5000 m.dat&amp;nbsp; &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;-Xms：设置jvm内存的初始大小&amp;nbsp;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -Xmx：设置jvm内存的最大值&amp;nbsp;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -Xmn：设置新域的大小（这个似乎只对 jdk1.4来说是有效的，后来就废弃了）&amp;nbsp;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -Xss：设置每个线程的堆栈大小(也就是说,在相同物理内存下，减小这个值能生成更多的线程)&amp;nbsp;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -XX：NewRatio :设置新域与旧域之比，如-XX：NewRatio = 4就表示新域与旧域之比为1：4&amp;nbsp;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -XX:NewSize：设置新域的初始值&amp;nbsp;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -XX:MaxNewSize ：设置新域的最大值&amp;nbsp;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -XX:MaxPermSize：设置永久域的最大值&amp;nbsp;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -XX:SurvivorRatio=n:设置新域中Eden区与两个Survivor区的比值。（Eden区主要是用来存放新生的对象，而两个Survivor区则用来存放每次垃圾回收后存活下来的对象） &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>rsync 同步数据</title>
      <link>https://helao.net/2013/407.html</link>
      <pubDate>2013-09-23 10:41:06 +0800</pubDate>
      <description>&lt;p&gt; 1，主机接收数据 &lt;/p&gt; &#xA;&lt;pre&gt;uid = root       &#xA;gid = root&#xA;&#xA;use chroot = yes&#xA;max connections = 10&#xA;pid file = /var/run/rsyncd.pid&#xA;lock file = /var/run/rsyncd.lock&#xA;log file = /var/log/rsyncd.log&#xA;&#xA;[tuijian]&#xA;path = /data/static/tuijian&#xA;ignore erros&#xA;read only = false&#xA;list = false&#xA;hosts allow = 192.168.0.0/24&#xA;hosts deny = 0.0.0.0/32&#xA;auth users = rsync&#xA;secrets file = /etc/rsyncd.pwd&lt;/pre&gt; &#xA;&lt;p&gt; 这里需要注意 uid和gid对 path 要有读写权限才行， 把/usr/bin/rsync --daemon 添加到开机启动&amp;nbsp; &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 2，客户机发送发送数据 &lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;rsync -vrtL --progress /data/static/tuijian/* rsync@192.168.0.119::tuijian --password-file=/root/rsync.pwd&#xA;rsync -vrtL --progress /data/static/tuijian/* rsync@192.168.0.55::tuijian --password-file=/root/rsync.pwd&lt;/pre&gt;  &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 客户机添加定时任务 */10 * * * * /root/rsync.sh 即可 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>如何减少群中的广告数量</title>
      <link>https://helao.net/2013/406.html</link>
      <pubDate>2013-09-23 07:04:08 +0800</pubDate>
      <description>&lt;p&gt; 【腾讯QQ群减少广告的技术思路】同样适用于用户好友，车友会等，再辅助禁用发言n天，来增加广告成本 &lt;/p&gt; &#xA;&lt;p&gt; 在QQ用户上增加一个数字，就是被QQ群管理员踢出的数字，然后QQ群里增加一个设置，被踢出多少次的QQ用户禁止加入，禁止Q龄在1年以下的用户加入QQ群，这样就可以极大增加QQ群广告的成本，让QQ群的广告不再那么泛滥。 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>maven 笔记-版本管理</title>
      <link>https://helao.net/2013/405.html</link>
      <pubDate>2013-09-16 12:07:50 +0800</pubDate>
      <description>&lt;p&gt; 1，使用 maven-release 插件，管理trunk，tag，branch各自的版本 &lt;/p&gt; &#xA;&lt;p&gt; 2，mvn release:prepare &amp;nbsp;可以准备一次发布，需要当前svn所有代码都提交。将当前分支打tag，并更新分支版本号。 &lt;/p&gt; &#xA;&lt;p&gt; 3，mvn release:perform 可以将准备好的tag，发布到release库中 &lt;/p&gt; &#xA;&lt;p&gt; 4，mvn release:updateVersion, 更新当前分支的版本号 &lt;/p&gt; &#xA;&lt;p&gt; 5，mvn release:branch &amp;nbsp;为当前分支创建一个 branch ,并指定branch 版本号。 &lt;/p&gt; &#xA;&lt;p&gt; 6，mvn release:clean 清除当前准备好的tag &lt;/p&gt; &#xA;&lt;p&gt; 请参考以下详细命令 &lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;http://maven.apache.org/maven-release/maven-release-plugin/&#34;&gt;http://maven.apache.org/maven-release/maven-release-plugin/&lt;/a&gt; &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>maven 笔记-仓库和打包</title>
      <link>https://helao.net/2013/404.html</link>
      <pubDate>2013-09-13 08:17:10 +0800</pubDate>
      <description>&lt;p&gt; maven默认有一个中央服务器，定义在&lt;em&gt;${M2_HOME}/lib/maven-2.0.10-uber.jar里&lt;/em&gt; &lt;/p&gt; &#xA;&lt;p&gt; maven的全局配制文件为 ${M2_HOME}/conf/settings.xml &lt;/p&gt; &#xA;&lt;p&gt; maven的用户级配制文件在 ${user.home}/.m2/settings.xml &lt;/p&gt; &#xA;&lt;p&gt; 这里可以 &lt;/p&gt; &#xA;&lt;p&gt; 1. 修改 localRepository的路径，默认在&amp;nbsp;${user.home}/.m2/repository下 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;pre&gt; &amp;lt;localRepository&amp;gt;/path/to/local/repo&amp;lt;/localRepository&amp;gt;&#xA;&amp;lt;offline&amp;gt;false&amp;lt;/offline&amp;gt;&lt;/pre&gt; &#xA;&lt;p&gt; 2. &amp;nbsp;server，在分发验证用户密码 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;pre&gt;&amp;lt;server&amp;gt;&#xA;      &amp;lt;id&amp;gt;deploymentRepo&amp;lt;/id&amp;gt;&#xA;      &amp;lt;username&amp;gt;repouser&amp;lt;/username&amp;gt;&#xA;      &amp;lt;password&amp;gt;repopwd&amp;lt;/password&amp;gt;&#xA;    &amp;lt;/server&amp;gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;p&gt; 3. mirror ，设置repository的镜像，mirrorOf是指定哪个repository，*指所有repository &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;pre&gt;&amp;lt;mirror&amp;gt;&#xA;      &amp;lt;id&amp;gt;mirrorId&amp;lt;/id&amp;gt;&#xA;      &amp;lt;mirrorOf&amp;gt;repositoryId&amp;lt;/mirrorOf&amp;gt;&#xA;      &amp;lt;name&amp;gt;Human Readable Name for this Mirror.&amp;lt;/name&amp;gt;&#xA;      &amp;lt;url&amp;gt;http://my.repository.com/repo/path&amp;lt;/url&amp;gt;&#xA;    &amp;lt;/mirror&amp;gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;p&gt; 4. profile 可以预先定义 repository和 pluginRepository，并可以通过activeProfiles指定哪个profile生效，也可以通过条件触发 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;pre&gt;&amp;lt;profile&amp;gt;&#xA;      &amp;lt;id&amp;gt;jdk-1.4&amp;lt;/id&amp;gt;&#xA;      &amp;lt;activation&amp;gt;&#xA;        &amp;lt;jdk&amp;gt;1.4&amp;lt;/jdk&amp;gt;&#xA;      &amp;lt;/activation&amp;gt;&#xA;      &amp;lt;repositories&amp;gt;&#xA;        &amp;lt;repository&amp;gt;&#xA;          &amp;lt;id&amp;gt;jdk14&amp;lt;/id&amp;gt;&#xA;          &amp;lt;name&amp;gt;Repository for JDK 1.4 builds&amp;lt;/name&amp;gt;&#xA;          &amp;lt;url&amp;gt;http://www.myhost.com/maven/jdk14&amp;lt;/url&amp;gt;&#xA;          &amp;lt;layout&amp;gt;default&amp;lt;/layout&amp;gt;&#xA;          &amp;lt;snapshotPolicy&amp;gt;always&amp;lt;/snapshotPolicy&amp;gt;&#xA;        &amp;lt;/repository&amp;gt;&#xA;      &amp;lt;/repositories&amp;gt;&#xA;    &amp;lt;/profile&amp;gt;&#xA;    &amp;lt;activeProfiles&amp;gt;&#xA;      &amp;lt;activeProfile&amp;gt;alwaysActiveProfile&amp;lt;/activeProfile&amp;gt;&#xA;      &amp;lt;activeProfile&amp;gt;anotherAlwaysActiveProfile&amp;lt;/activeProfile&amp;gt;&#xA;    &amp;lt;/activeProfiles&amp;gt;&lt;/pre&gt; &#xA;&lt;br /&gt; &#xA;&lt;p&gt; 5. repository定义时可以指定是否需要从snapshot和 release取得资源 &lt;/p&gt; &#xA;&lt;p&gt; 6. 打包，maven会识别项目version是否含有 -SNAPSHOT 后缀，有的话则在deploy时自动将该包upload到SNAPSHOT repository中，若没有则upload 到 release repository中。 &lt;/p&gt; &#xA;&lt;p&gt; 7. 项目构建时maven会先从local repository中取jar，如果没有则去remote中取得并缓存到local中，若该包version后缀为-SNAPSHOT,那么每次构建时都会自动去SNAPSHOT repository中抓取，release version有缓存就用缓存 &lt;/p&gt; &#xA;&lt;p&gt; 8. install会将构件安装到 本地库中，deploy将构件安装到远程库中 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; &lt;/p&gt;&#xA;&lt;pre&gt;mvn install:install-file  -Dfile=path-to-your-artifact-jar -DgroupId=your.groupId  -DartifactId=your-artifactId  -Dversion=your-version -Dpackaging=jar -DgeneratePom=true&#xA;&#xA;mvn deploy:deploy-file -DrepositoryId=your-repository-id -Durl=dav:your-repository-url  -DgroupId=your.groupId  -DartifactId=your-artifactId -Dversion=your-version -Dpackaging=jar  -Dfile=jar-name&lt;/pre&gt;  &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>centos 下安装 redis</title>
      <link>https://helao.net/2013/381.html</link>
      <pubDate>2013-08-21 10:23:43 +0800</pubDate>
      <description>&lt;p&gt; 1. 下载 &lt;/p&gt; &#xA;&lt;p&gt; 2. yum install gcc &lt;/p&gt; &#xA;&lt;p&gt; 3. make malloc=libc , 可以会有 jemalloc error &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>python安装 django ， setuptools ， pip 、easy_install 等插件</title>
      <link>https://helao.net/2013/380.html</link>
      <pubDate>2013-08-15 11:07:11 +0800</pubDate>
      <description>&lt;p&gt;&lt;ol&gt;&#xA; &lt;li&gt; python是1.4.1版本 需要将 python_home, 和 python_home/scripts, 这两个目录添加到path中 &lt;/li&gt;&#xA; &lt;li&gt; easy_install 应该会自带 &lt;/li&gt;&#xA; &lt;li&gt; 下载 setuptools 并 &lt;a href=&#34;https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py&#34;&gt;ez_setup.py&lt;/a&gt; install &amp;nbsp; &amp;nbsp; &lt;/li&gt;&#xA; &lt;li&gt; 安装 pip &amp;nbsp;, &lt;a href=&#34;https://raw.github.com/pypa/pip/master/contrib/get-pip.py&#34;&gt;get-pip.py&lt;/a&gt; install&amp;nbsp; &lt;/li&gt;&#xA; &lt;li&gt; 安装 ipython &amp;nbsp;&lt;a href=&#34;http://archive.ipython.org/release/0.13.2/ipython-0.13.2.tar.gz&#34;&gt;setup.py&lt;/a&gt; install&amp;nbsp; &lt;/li&gt;&#xA; &lt;li&gt; 安装django &amp;nbsp;pip install Django==1.5.2 &lt;/li&gt;&#xA; &lt;li&gt; ok &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt;&#xA;&lt;p&gt; 就可以使用python中各种插件了 &lt;/p&gt;&#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>为os安装tomcat7,并安装为系统服务 --- 查清</title>
      <link>https://helao.net/2013/379.html</link>
      <pubDate>2013-08-08 12:17:42 +0800</pubDate>
      <description>&lt;p&gt; 1，wget&amp;nbsp;http://mirrors.hust.edu.cn/apache/tomcat/tomcat-7/v7.0.42/bin/apache-tomcat-7.0.42.tar.gz &lt;/p&gt; &#xA;&lt;p&gt; 2, tar -zxf apache-tomcat-7.0.42.tar.gz &lt;/p&gt; &#xA;&lt;p&gt; 3, 调整server参数，调整 startup.sh中参数，删除webapps中example等应用 &lt;/p&gt; &#xA;&lt;p&gt; 4，新建tomcat7脚本内容如下: &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;/p&gt; &#xA;&lt;pre&gt;#!/bin/sh&#xA;&#xA;TOMCAT_HOME=/your/tomcat/path&#xA;&#xA;case &amp;quot;$1&amp;quot; in&lt;/pre&gt; &#xA;&lt;pre&gt;    start)&lt;/pre&gt; &#xA;&lt;pre&gt;    $TOMCAT_HOME/bin/startup.sh  &amp;nbsp;&lt;/pre&gt; &#xA;&lt;pre&gt;    ;;&amp;nbsp;&lt;/pre&gt; &#xA;&lt;pre&gt;    stop)&lt;/pre&gt; &#xA;&lt;pre&gt;    $TOMCAT_HOME/bin/shutdown.sh&lt;/pre&gt; &#xA;&lt;pre&gt;&amp;nbsp;   ;;&#xA;&lt;/pre&gt; &#xA;&lt;pre&gt;    *)&lt;/pre&gt; &#xA;&lt;pre&gt;    echo &amp;quot;please use start,stop&amp;quot;&lt;/pre&gt; &#xA;&lt;pre&gt;    ;;&lt;/pre&gt; &#xA;&lt;pre&gt;esac&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;exit 0&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;pre&gt;添加权限 chmod 711 tomcat7&lt;/pre&gt; &#xA;&lt;pre&gt;5, chkconfig --add tomcat7&lt;/pre&gt; &#xA;&lt;p&gt; &amp;nbsp; chkconfig tomcat7 on &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt;  &lt;/p&gt; &#xA;&lt;p&gt; 6,然后就可以用 &amp;nbsp;/etc/init.d/tomcat7 start &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; service tomcat7 start &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 来控制tomcat7了&lt;br /&gt;  &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>昨晚研究了一下node如何实现三国杀</title>
      <link>https://helao.net/2013/378.html</link>
      <pubDate>2013-07-26 01:24:24 +0800</pubDate>
      <description>&lt;p&gt; 技术已经可以定了，node+ socked.io+ember.js 后者用来做client，socket.io做io通讯很不错 &lt;/p&gt; &#xA;&lt;p&gt; 然后我就可以集中业务逻辑了 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 今天用了小狼毫输入法，太顺畅了 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>每天晚上两个小时业余时间</title>
      <link>https://helao.net/2013/377.html</link>
      <pubDate>2013-07-15 05:41:22 +0800</pubDate>
      <description>&lt;p&gt; 1，搞搞hadoop +hive 集群 ，分析日志 &lt;/p&gt; &#xA;&lt;p&gt; 2，python djingo ， 个人博客 &lt;/p&gt; &#xA;&lt;p&gt; 3，nodejs express + ember ,实现三国杀 &lt;/p&gt; &#xA;&lt;p&gt; 4，go lang 或 erlang ，或 scala 看看 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>mysql 导入导出数据和修改密码</title>
      <link>https://helao.net/2013/376.html</link>
      <pubDate>2013-07-04 05:26:59 +0800</pubDate>
      <description>&lt;p&gt; 1， mysqldump -uusername -p -h host dbname &amp;gt; path 导出 &lt;/p&gt; &#xA;&lt;p&gt; 2， mysql -uusername -p -h host dbname &amp;lt; path &amp;nbsp;导入 &lt;/p&gt; &#xA;&lt;p&gt; 3，mysqladmin -uusername -p password password &amp;nbsp;修改密码 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>今天想对bash 好好学一下</title>
      <link>https://helao.net/2013/375.html</link>
      <pubDate>2013-06-08 01:51:37 +0800</pubDate>
      <description>&lt;p&gt; 1，awk &lt;/p&gt; &#xA;&lt;p&gt; 2，if 和for 语法 &lt;/p&gt; &#xA;&lt;p&gt; 3, &amp;nbsp;service 语法 &lt;/p&gt; &#xA;&lt;p&gt; 4，系统自启动的语法 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>最近情绪有些不稳定</title>
      <link>https://helao.net/2013/374.html</link>
      <pubDate>2013-06-08 01:49:46 +0800</pubDate>
      <description>&lt;p&gt; 每天做着兴趣不高的东西，还要经常不能按自己心意去安排一些开发工作，安排自己的工作还要别人来指手画脚，真是站着说话不腰疼。自己负责这么多东西，一边要快速出东西，一边还要对工作指手画脚，还让不让人活。 &lt;/p&gt; &#xA;&lt;p&gt; 自己真正感兴趣的也没办法做，没有时间，工作时间总是这么零散，做的东西也没有整体观。一边负责大量具体的工作，一边还要负责整体的安排确实挺累的。 &lt;/p&gt; &#xA;&lt;p&gt; 每天找时间安排一下具体的工作，保证每天的代码时间不超过4小时，每天2小时的自由开发时间用来学习的开发自己的东西 &lt;/p&gt; &#xA;&lt;p&gt; 剩下的时间用来处理小任务和沟通，沟通时要学习技巧，要慢细，没办法沟通的人要有耐心。 &lt;/p&gt; &#xA;&lt;p&gt; 需要找时间好好发泄一下 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>awk 教程 转载的</title>
      <link>https://helao.net/2013/373.html</link>
      <pubDate>2013-05-31 02:16:45 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt; 有一些网友看了前两天的《&lt;a href=&#34;http://coolshell.cn/articles/8883.html&#34;&gt;Linux下应该知道的技巧&lt;/a&gt;》希望我能教教他们用awk和sed，所以，出现了这篇文章。我估计这些80后的年轻朋友可能对awk/sed这类上古神器有点陌生了，所以需要我这个老家伙来炒炒冷饭。&lt;strong&gt;况且，AWK是贝尔实验室1977年搞出来的文本出现神器，今年是蛇年，是AWK的本命年，而且年纪和我相仿，所以非常有必要为他写篇文章&lt;/strong&gt;。 &lt;/p&gt;&#xA;&lt;p&gt; 之所以叫AWK是因为其取了三位创始人&amp;nbsp;&lt;a href=&#34;http://en.wikipedia.org/wiki/Alfred_Aho&#34;&gt;Alfred Aho&lt;/a&gt;，&lt;a href=&#34;http://en.wikipedia.org/wiki/Peter_J._Weinberger&#34;&gt;Peter Weinberger&lt;/a&gt;, 和&amp;nbsp;&lt;a href=&#34;http://en.wikipedia.org/wiki/Brian_Kernighan&#34;&gt;Brian Kernighan&lt;/a&gt;&amp;nbsp;的Family Name的首字符。要学AWK，就得提一提AWK的一本相当经典的书《&lt;a href=&#34;http://plan9.bell-labs.com/cm/cs/awkbook/&#34;&gt;The AWK Programming Language&lt;/a&gt;》，它在&lt;a href=&#34;http://book.douban.com/subject/1876898/&#34;&gt;豆瓣上的评分&lt;/a&gt;是9.4分！在&lt;a href=&#34;http://www.amazon.cn/mn/detailApp/?asin=020107981X&#34;&gt;亚马逊上居然卖1022.30元&lt;/a&gt;。 &lt;/p&gt;&#xA;&lt;p&gt; 我在这里的教程并不想面面俱到，本文和我之前的&lt;a href=&#34;http://coolshell.cn/articles/8460.html&#34;&gt;Go语言简介&lt;/a&gt;一样，全是示例，基本无废话。 &lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;我只想达到两个目的：&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;1）你可以在乘坐公交地铁上下班，或是在坐马桶拉大便时读完（保证是一泡大便的工夫）。&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;strong&gt;2）我只想让这篇博文像一个火辣的脱衣舞女挑起你的兴趣，然后还要你自己去下工夫去撸。&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; 废话少说，我们开始脱吧（注：这里只是topless）。 &lt;/p&gt;&#xA;&lt;h4&gt; 起步上台 &lt;/h4&gt;&#xA;&lt;p&gt; 我从netstat命令中提取了如下信息作为用例： &lt;/p&gt;&#xA;&lt;p&gt;  &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        12&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        13&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        14&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        15&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        16&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        17&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        18&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        19&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        20&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $catnetstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Proto Recv-Q Send-Q Local-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Foreign-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:3306&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 127.0.0.1:9000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 124.205.5.146:18245&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 61.140.101.185:37538&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:1032&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49809&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 116.234.127.77:11502&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49829&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 183.60.215.36:36970&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp; 4166 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 61.148.242.38:30901&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 124.152.181.209:26825&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:4796&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 183.60.212.163:51082&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 208.115.113.92:50601&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LAST_ACK&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49840&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 117.136.20.85:50025&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 :::22&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 下面是最简单最常用的awk示例，其输出第1列和第4例， &lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt; 其中单引号中的被大括号括着的就是awk的语句，注意，其只能被单引号包含。 &lt;/li&gt;&#xA; &lt;li&gt; 其中的$1..$n表示第几例。注：$0表示整个行。 &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        12&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        13&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        14&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        15&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        16&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        17&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        18&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        19&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        20&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;{print $1, $4}&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Proto Local-Address&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp 0.0.0.0:3306&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp 0.0.0.0:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp 127.0.0.1:9000&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp coolshell.cn:80&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp :::22&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 我们再来看看awk的格式化输出，和C语言的printf没什么两样： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        12&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        13&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        14&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        15&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        16&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        17&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        18&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        19&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        20&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;{printf &amp;quot;%-8s %-8s %-8s %-18s %-22s %-15s\n&amp;quot;,$1,$2,$3,$4,$5,$6}&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Proto&amp;nbsp;&amp;nbsp;&amp;nbsp; Recv-Q&amp;nbsp;&amp;nbsp; Send-Q&amp;nbsp;&amp;nbsp; Local-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Foreign-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:3306&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 127.0.0.1:9000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 124.205.5.146:18245&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 61.140.101.185:37538&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:1032&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49809&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 116.234.127.77:11502&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49829&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 183.60.215.36:36970&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4166&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 61.148.242.38:30901&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 124.152.181.209:26825&amp;nbsp; FIN_WAIT1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:4796&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 183.60.212.163:51082&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 208.115.113.92:50601&amp;nbsp;&amp;nbsp; LAST_ACK&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49840&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp; 117.136.20.85:50025&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::22&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h4&gt; 脱掉外套 &lt;/h4&gt;&#xA;&lt;h5&gt; 过滤记录 &lt;/h5&gt;&#xA;&lt;p&gt; 我们再来看看如何过滤记录（下面过滤条件为：第三列的值为0 &amp;amp;&amp;amp; 第6列的值为LISTEN） &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;$3==0 &amp;amp;&amp;amp; $6==&amp;quot;LISTEN&amp;quot; &amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:3306&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 127.0.0.1:9000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 :::22&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 其中的“==”为比较运算符。其他比较运算符：!=, &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;= &lt;/p&gt;&#xA;&lt;p&gt; 我们来看看各种过滤记录的方式： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo; $3&amp;gt;0 {print $0}&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Proto Recv-Q Send-Q Local-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Foreign-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp; 4166 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 61.148.242.38:30901&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 124.152.181.209:26825&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 208.115.113.92:50601&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LAST_ACK&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 如果我们需要表头的话，我们可以引入内建变量NR： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;$3==0 &amp;amp;&amp;amp; $6==&amp;quot;LISTEN&amp;quot; || NR==1 &amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Proto Recv-Q Send-Q Local-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Foreign-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:3306&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 127.0.0.1:9000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 :::22&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 再加上格式化输出： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;$3==0 &amp;amp;&amp;amp; $6==&amp;quot;LISTEN&amp;quot; || NR==1 {printf &amp;quot;%-20s %-20s %s\n&amp;quot;,$4,$5,$6}&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Local-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Foreign-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         0.0.0.0:3306&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         0.0.0.0:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         127.0.0.1:9000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         :::22&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h5&gt; &lt;strong&gt;内建变量&lt;/strong&gt; &lt;/h5&gt;&#xA;&lt;p&gt; 说到了内建变量，我们可以来看看awk的一些内建变量： &lt;/p&gt;&#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; $0 &lt;/td&gt;&#xA;   &lt;td&gt; 当前记录（这个变量中存放着整个行的内容） &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; $1~$n &lt;/td&gt;&#xA;   &lt;td&gt; 当前记录的第n个字段，字段间由FS分隔 &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; FS &lt;/td&gt;&#xA;   &lt;td&gt; 输入字段分隔符 默认是空格或Tab &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; NF &lt;/td&gt;&#xA;   &lt;td&gt; 当前记录中的字段个数，就是有多少列 &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; NR &lt;/td&gt;&#xA;   &lt;td&gt; 已经读出的记录数，就是行号，从1开始，如果有多个文件话，这个值也是不断累加中。 &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; FNR &lt;/td&gt;&#xA;   &lt;td&gt; 当前记录数，与NR不同的是，这个值会是各个文件自己的行号 &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; RS &lt;/td&gt;&#xA;   &lt;td&gt; 输入的记录分隔符， 默认为换行符 &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; OFS &lt;/td&gt;&#xA;   &lt;td&gt; 输出字段分隔符， 默认也是空格 &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; ORS &lt;/td&gt;&#xA;   &lt;td&gt; 输出的记录分隔符，默认为换行符 &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; FILENAME &lt;/td&gt;&#xA;   &lt;td&gt; 当前输入文件的名字 &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt; 怎么使用呢，比如：我们如果要输出行号： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;$3==0 &amp;amp;&amp;amp; $6==&amp;quot;ESTABLISHED&amp;quot; || NR==1 {printf &amp;quot;%02s %s %-20s %-20s %s\n&amp;quot;,NR, FNR, $4,$5,$6}&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         01 1 Local-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Foreign-Address&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         07 7 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:1032 ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         08 8 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49809 ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         10 10 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49829 ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         14 14 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:4796 ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         17 17 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49840 ESTABLISHED&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h5&gt; &lt;strong&gt;指定分隔符&lt;/strong&gt; &lt;/h5&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $&amp;nbsp;awk&amp;nbsp;&amp;lsquo;BEGIN{FS=&amp;quot;:&amp;quot;} {print $1,$3,$6}&amp;lsquo;/etc/passwd&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         root 0/root&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         bin 1/bin&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         daemon 2/sbin&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         adm 3/var/adm&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         lp 4/var/spool/lpd&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         sync5/sbin&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         shutdown6/sbin&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         halt 7/sbin&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 上面的命令也等价于：（-F的意思就是指定分隔符） &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;nbsp;-F:&amp;lsquo;{print $1,$3,$6}&amp;rsquo;/etc/passwd&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 注：如果你要指定多个分隔符，你可以这样来： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         awk-F&amp;rsquo;[;:]&amp;rsquo;&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 再来看一个以\t作为分隔符输出的例子（下面使用了/etc/passwd文件，这个文件是以:分隔的）： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;nbsp;-F:&amp;lsquo;{print $1,$3,$6}&amp;lsquo;OFS=&amp;quot;\t&amp;quot;/etc/passwd&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         root&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/root&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         bin&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/bin&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         daemon&amp;nbsp; 2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/sbin&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         adm&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/var/adm&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         lp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/var/spool/lpd&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         sync&amp;nbsp;&amp;nbsp;&amp;nbsp;5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/sbin&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h4&gt; 脱掉衬衫 &lt;/h4&gt;&#xA;&lt;h5&gt; 字符串匹配 &lt;/h5&gt;&#xA;&lt;p&gt; 我们再来看几个字符串匹配的示例： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        12&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        13&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        14&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        15&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        16&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;$6 ~ /FIN/ || NR==1 {print NR,$4,$5,$6}&amp;lsquo;OFS=&amp;quot;\t&amp;quot;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Local-Address&amp;nbsp;&amp;nbsp; Foreign-Address State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 61.140.101.185:37538&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         9&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 116.234.127.77:11502&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         13&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 124.152.181.209:26825&amp;nbsp;&amp;nbsp; FIN_WAIT1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         18&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 117.136.20.85:50025&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $ $awk&amp;rsquo;$6 ~ /WAIT/ || NR==1 {print NR,$4,$5,$6}&amp;lsquo;OFS=&amp;quot;\t&amp;quot;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Local-Address&amp;nbsp;&amp;nbsp; Foreign-Address State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 124.205.5.146:18245&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 61.140.101.185:37538&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         9&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 116.234.127.77:11502&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         11&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 183.60.215.36:36970&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         13&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 124.152.181.209:26825&amp;nbsp;&amp;nbsp; FIN_WAIT1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         15&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 183.60.212.163:51082&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         18&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 117.136.20.85:50025&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 上面的第一个示例匹配FIN状态， 第二个示例匹配WAIT字样的状态。其实 ~ 表示模式开始。/ /中是模式。这就是一个正则表达式的匹配。 &lt;/p&gt;&#xA;&lt;p&gt; 其实awk可以像grep一样的去匹配第一行，就像这样： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;/LISTEN/&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:3306&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 127.0.0.1:9000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 :::22&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 我们可以使用 “/FIN|TIME/” 来匹配 FIN 或者 TIME : &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;$6 ~ /FIN|TIME/ || NR==1 {print NR,$4,$5,$6}&amp;lsquo;OFS=&amp;quot;\t&amp;quot;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Local-Address&amp;nbsp;&amp;nbsp; Foreign-Address State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 124.205.5.146:18245&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         6&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 61.140.101.185:37538&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         9&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 116.234.127.77:11502&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         11&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 183.60.215.36:36970&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         13&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 124.152.181.209:26825&amp;nbsp;&amp;nbsp; FIN_WAIT1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         15&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 183.60.212.163:51082&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         18&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 117.136.20.85:50025&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 再来看看模式取反的例子： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        12&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        13&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;$6 !~ /WAIT/ || NR==1 {print NR,$4,$5,$6}&amp;lsquo;OFS=&amp;quot;\t&amp;quot;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Local-Address&amp;nbsp;&amp;nbsp; Foreign-Address State&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:3306&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         3&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         4&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 127.0.0.1:9000&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         7&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 110.194.134.189:1032&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         8&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 123.169.124.111:49809&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         10&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 123.169.124.111:49829&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         12&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 61.148.242.38:30901&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         14&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 110.194.134.189:4796&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         16&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 208.115.113.92:50601&amp;nbsp;&amp;nbsp;&amp;nbsp; LAST_ACK&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         17&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; coolshell.cn:80 123.169.124.111:49840&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         19&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::22&amp;nbsp;&amp;nbsp; :::&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 或是： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         awk&amp;rsquo;!/WAIT/&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; &lt;strong&gt;折分文件&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;p&gt; awk拆分文件很简单，使用重定向就好了。下面这个例子，是按第6例分隔文件，相当的简单（其中的NR!=1表示不处理表头）。 &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        12&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        13&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        14&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        15&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        16&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        17&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        18&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        19&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        20&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        21&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        22&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        23&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        24&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        25&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        26&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        27&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        28&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        29&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        30&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        31&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        32&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        33&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        34&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;NR!=1{print &amp;gt; $6}&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $ls&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         ESTABLISHED&amp;nbsp; FIN_WAIT1&amp;nbsp; FIN_WAIT2&amp;nbsp; LAST_ACK&amp;nbsp; LISTEN&amp;nbsp;netstat.txt&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $catESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:1032&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49809&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49829&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp; 4166 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 61.148.242.38:30901&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:4796&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49840&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $catFIN_WAIT1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 124.152.181.209:26825&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $catFIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 61.140.101.185:37538&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 116.234.127.77:11502&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 117.136.20.85:50025&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $catLAST_ACK&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 208.115.113.92:50601&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LAST_ACK&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $catLISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:3306&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 127.0.0.1:9000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 :::22&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $catTIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 124.205.5.146:18245&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 183.60.215.36:36970&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 183.60.212.163:51082&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 你也可以把指定的列输出到文件： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         awk&amp;rsquo;NR!=1{print $4,$5 &amp;gt; $6}&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 再复杂一点：（注意其中的if-else-if语句，可见awk其实是个脚本解释器） &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        12&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        13&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        14&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        15&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        16&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        17&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        18&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        19&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        20&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        21&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        22&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        23&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        24&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        25&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        26&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        27&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        28&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        29&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        30&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;NR!=1{if($6 ~/TIME|ESTABLISHED/) print &amp;gt;&amp;quot;1.txt&amp;quot;;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         elseif($6 ~/LISTEN/) print &amp;gt;&amp;quot;2.txt&amp;quot;;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         elseprint &amp;gt;&amp;quot;3.txt&amp;quot;}&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $ls?.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         1.txt&amp;nbsp; 2.txt&amp;nbsp; 3.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $cat1.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 124.205.5.146:18245&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:1032&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49809&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49829&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 183.60.215.36:36970&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp; 4166 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 61.148.242.38:30901&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 110.194.134.189:4796&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 183.60.212.163:51082&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME_WAIT&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.169.124.111:49840&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ESTABLISHED&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $cat2.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:3306&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 0.0.0.0:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 127.0.0.1:9000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0.0.0:&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 :::22&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :::&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LISTEN&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $cat3.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 61.140.101.185:37538&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 116.234.127.77:11502&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 124.152.181.209:26825&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 208.115.113.92:50601&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LAST_ACK&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         tcp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 coolshell.cn:80&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 117.136.20.85:50025&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FIN_WAIT2&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h5&gt; 统计 &lt;/h5&gt;&#xA;&lt;p&gt; 下面的命令计算所有的C文件，CPP文件和H文件的文件大小总和。 &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $ls-l&amp;nbsp; *.cpp *.c *.h |awk&amp;rsquo;{sum+=$5} END {print sum}&amp;rsquo;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         2511401&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 我们再来看一个统计各个connection状态的用法：（我们可以看到一些编程的影子了，大家都是程序员我就不解释了。注意其中的数组的用法） &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk&amp;rsquo;NR!=1{a[$6]++;} END {for (i in a) print i &amp;quot;, &amp;quot; a[i];}&amp;lsquo;netstat.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         TIME_WAIT, 3&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         FIN_WAIT1, 1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         ESTABLISHED, 6&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         FIN_WAIT2, 3&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         LAST_ACK, 1&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         LISTEN, 4&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 再来看看统计每个用户的进程的占了多少内存（注：sum的RSS那一列） &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $psaux |awk&amp;rsquo;NR!=1{a[$1]+=$6;} END { for(i in a) print i &amp;quot;, &amp;quot; a[i]&amp;quot;KB&amp;quot;;}&amp;rsquo;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         dbus, 540KB&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         mysql, 99928KB&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         www, 3264924KB&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         root, 63644KB&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         hchen, 6020KB&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h4&gt; 脱掉内衣 &lt;/h4&gt;&#xA;&lt;h5&gt; awk脚本 &lt;/h5&gt;&#xA;&lt;p&gt; 在上面我们可以看到一个END关键字。END的意思是“处理完所有的行的标识”，即然说到了END就有必要介绍一下BEGIN，这两个关键字意味着执行前和执行后的意思，语法如下： &lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt; BEGIN{ 这里面放的是执行前的语句 } &lt;/li&gt;&#xA; &lt;li&gt; END {这里面放的是处理完所有的行后要执行的语句 } &lt;/li&gt;&#xA; &lt;li&gt; {这里面放的是处理每一行时要执行的语句} &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; 为了说清楚这个事，我们来看看下面的示例： &lt;/p&gt;&#xA;&lt;p&gt; 假设有这么一个文件（学生成绩表）： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $catscore.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Marry&amp;nbsp;&amp;nbsp; 2143 78 84 77&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Jack&amp;nbsp;&amp;nbsp;&amp;nbsp; 2321 66 78 45&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Tom&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2122 48 77 71&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Mike&amp;nbsp;&amp;nbsp;&amp;nbsp; 2537 87 97 95&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Bob&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2415 40 57 62&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 我们的awk脚本如下（我没有写有命令行上是因为命令行上不易读，另外也在介绍另一种用法）： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        12&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        13&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        14&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        15&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        16&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        17&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        18&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        19&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        20&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        21&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        22&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        23&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        24&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $catcal.awk&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         #!/bin/awk -f&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         #运行前&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         BEGIN {&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;math = 0&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;english = 0&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;computer = 0&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf&amp;quot;NAME&amp;nbsp;&amp;nbsp;&amp;nbsp; NO.&amp;nbsp;&amp;nbsp; MATH&amp;nbsp; ENGLISH&amp;nbsp; COMPUTER&amp;nbsp;&amp;nbsp; TOTAL\n&amp;quot;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf&amp;quot;---------------------------------------------\n&amp;quot;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         }&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         #运行中&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         {&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;math+=$3&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;english+=$4&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;computer+=$5&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf&amp;quot;%-6s %-6s %4d %8d %8d %8d\n&amp;quot;, $1, $2, $3,$4,$5, $3+$4+$5&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         }&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         #运行后&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         END {&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf&amp;quot;---------------------------------------------\n&amp;quot;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf&amp;quot;&amp;nbsp; TOTAL:%10d %8d %8d \n&amp;quot;, math, english, computer&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf&amp;quot;AVERAGE:%10.2f %8.2f %8.2f\n&amp;quot;, math/NR, english/NR, computer/NR&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         }&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt; 我们来看一下执行结果：（也可以这样运行 ./cal.awk score.txt） &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $awk-fcal.awkscore.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         NAME&amp;nbsp;&amp;nbsp;&amp;nbsp; NO.&amp;nbsp;&amp;nbsp; MATH&amp;nbsp; ENGLISH&amp;nbsp; COMPUTER&amp;nbsp;&amp;nbsp; TOTAL&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         ---------------------------------------------&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Marry&amp;nbsp; 2143&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 78&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 84&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 77&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 239&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Jack&amp;nbsp;&amp;nbsp; 2321&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 66&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 78&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 45&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 189&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Tom&amp;nbsp;&amp;nbsp;&amp;nbsp; 2122&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 48&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 77&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 71&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 196&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Mike&amp;nbsp;&amp;nbsp; 2537&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 87&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 97&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 95&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 279&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Bob&amp;nbsp;&amp;nbsp;&amp;nbsp; 2415&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 40&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 57&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 62&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 159&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         ---------------------------------------------&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&amp;nbsp;TOTAL:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 319&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 393&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 350&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         AVERAGE:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 63.80&amp;nbsp;&amp;nbsp;&amp;nbsp; 78.60&amp;nbsp;&amp;nbsp;&amp;nbsp; 70.00&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h5&gt; 环境变量 &lt;/h5&gt;&#xA;&lt;p&gt; 即然说到了脚本，我们来看看怎么和环境变量交互：（使用-v参数和ENVIRON，使用ENVIRON的环境变量需要export） &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        9&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        10&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        11&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        12&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        13&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        14&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         $ x=5&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $ y=10&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $exporty&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $echo$x $y&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         5 10&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         $awk-vval=$x&amp;rsquo;{print $1, $2, $3, $4+val, $5+ENVIRON[&amp;quot;y&amp;quot;]}&amp;lsquo;OFS=&amp;quot;\t&amp;quot;score.txt&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Marry&amp;nbsp;&amp;nbsp; 2143&amp;nbsp;&amp;nbsp;&amp;nbsp; 78&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 89&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 87&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Jack&amp;nbsp;&amp;nbsp;&amp;nbsp; 2321&amp;nbsp;&amp;nbsp;&amp;nbsp; 66&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 83&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 55&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Tom&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2122&amp;nbsp;&amp;nbsp;&amp;nbsp; 48&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 82&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 81&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Mike&amp;nbsp;&amp;nbsp;&amp;nbsp; 2537&amp;nbsp;&amp;nbsp;&amp;nbsp; 87&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 102&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 105&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         Bob&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2415&amp;nbsp;&amp;nbsp;&amp;nbsp; 40&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 62&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 72&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h4&gt; 几个花活 &lt;/h4&gt;&#xA;&lt;p&gt; 最后，我们再来看几个小例子： &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;div&gt;&#xA;  &lt;table&gt;&#xA;   &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;        1&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        2&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        3&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        4&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        5&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        6&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        7&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        8&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;     &lt;td&gt;&#xA;      &lt;div&gt;&#xA;       &lt;div&gt;&#xA;         #从file文件中找出长度大于80的行&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         awk&amp;rsquo;length&amp;gt;80&amp;rsquo;file&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         #按连接数查看客户端IP&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         netstat-ntu |awk&amp;rsquo;{print $5}&amp;lsquo;|cut-d: -f1 |sort|uniq-c |sort-nr&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         &amp;nbsp;&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         #打印99乘法表&#xA;       &lt;/div&gt;&#xA;       &lt;div&gt;&#xA;         seq9 |sed&amp;rsquo;H;g&amp;rsquo;|awk-vRS=&amp;ldquo;&amp;lsquo;{for(i=1;i&amp;lt;=NF;i++)printf(&amp;quot;%dx%d=%d%s&amp;quot;, i, NR, i*NR, i==NR?&amp;quot;\n&amp;quot;:&amp;quot;\t&amp;quot;)}&amp;rsquo;&#xA;       &lt;/div&gt;&#xA;      &lt;/div&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;   &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h4&gt; 自己撸吧 &lt;/h4&gt;&#xA;&lt;p&gt; 关于其中的一些知识点可以参看&lt;a href=&#34;http://www.gnu.org/software/gawk/manual/gawk.html&#34;&gt;gawk的手册&lt;/a&gt;： &lt;/p&gt;&#xA;&lt;ul&gt;&#xA; &lt;li&gt; 内建变量，参看：&lt;a href=&#34;http://www.gnu.org/software/gawk/manual/gawk.html#Built_002din-Variables&#34;&gt;http://www.gnu.org/software/gawk/manual/gawk.html#Built_002din-Variables&lt;/a&gt; &lt;/li&gt;&#xA; &lt;li&gt; 流控方面，参看：&lt;a href=&#34;http://www.gnu.org/software/gawk/manual/gawk.html#Statements&#34;&gt;http://www.gnu.org/software/gawk/manual/gawk.html#Statements&lt;/a&gt; &lt;/li&gt;&#xA; &lt;li&gt; 内建函数，参看：&lt;a href=&#34;http://www.gnu.org/software/gawk/manual/gawk.html#Built_002din&#34;&gt;http://www.gnu.org/software/gawk/manual/gawk.html#Built_002din&lt;/a&gt; &lt;/li&gt;&#xA; &lt;li&gt; 正则表达式，参看：&lt;a href=&#34;http://www.gnu.org/software/gawk/manual/gawk.html#Regexp&#34;&gt;http://www.gnu.org/software/gawk/manual/gawk.html#Regexp&lt;/a&gt; &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; （全文完） &lt;/p&gt;&#xA;&lt;div&gt;&#xA; &lt;p&gt; &lt;strong&gt;（转载本站文章请注明作者和出处&amp;nbsp;&lt;a href=&#34;http://coolshell.cn/&#34;&gt;酷壳 – CoolShell.cn&lt;/a&gt;&amp;nbsp;，请勿用于任何商业用途）&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;/div&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>想做一个三国杀游戏</title>
      <link>https://helao.net/2013/372.html</link>
      <pubDate>2013-05-29 01:04:36 +0800</pubDate>
      <description>&lt;p&gt;使用nodejs和html5来做吧，方便跨平台。&#xA;后期再通过webkit来生成 pc和andriod、ios的客户端&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>好久没有来发表东西了</title>
      <link>https://helao.net/2013/371.html</link>
      <pubDate>2013-05-27 06:06:14 +0800</pubDate>
      <description>&lt;p&gt;不能停下前进的脚步啊，要不然就落后了&#xA;python 准备了，开始学习。 第一期目标就是用python完成 ttcms ，数据库使用mongodb，模板引擎什么的都需要自己动手&#xA;再下一步使用go 完成一个api服务器，或jms , 爬虫等&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>jms 概念</title>
      <link>https://helao.net/2013/370.html</link>
      <pubDate>2013-03-22 02:48:32 +0800</pubDate>
      <description>&lt;p&gt;&lt;div&gt; JMS&#xA;&lt;/div&gt;&#xA;&lt;table width=&#34;100%&#34;&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&#xA;    &lt;div&gt;&#xA;      JMS（Java Messaging Service）是&#xA;     &lt;a href=&#34;http://baike.baidu.com/view/29.htm&#34;&gt;Java&lt;/a&gt;平台上有关面向消息中间件的技术规范，翻译为Java消息服务。JMS支持点对点和发布/订阅两种消息模型。&#xA;     &lt;br /&gt; JMS基本概念&amp;nbsp;&#xA;     &lt;br /&gt; JMS(Java Message Service)是访问企业消息系统的标准API,它便于消息系&amp;nbsp;&#xA;     &lt;br /&gt; 统中的Java应用程序进行消息交换,并且通过提供标准的产生、发送、接收消息的接口简化企业应用的开发。&amp;nbsp;&#xA;     &lt;br /&gt; 2. JMS基本功能&amp;nbsp;&#xA;     &lt;br /&gt; JMS是用于和面向消息的中间件相互通信的应用程序接口。它既支持点对点(point-to-point)的域，又支持发布/订阅(publish/subscribe)类型的域，并且提供对下列类型的支持：经认可的消息传递,事务型消息的传递，一致性消息和具有持久性的订阅者支持。JMS还提供了另一种方式来对您的应用与旧的后台系统相集成。&amp;nbsp;&#xA;     &lt;br /&gt; 3. WebLogic JMS Server介绍&amp;nbsp;&#xA;     &lt;br /&gt; WebLogic Server8.1符合JAVA规范,并通过Sun Microsystems J2EE 1.3认&amp;nbsp;&#xA;     &lt;br /&gt; 证.作为WebLogic的一部分,当然WebLogic JMS Server也完全遵从JMS规范,还支持集群,并可以应用于实际企业系统.下图是WebLogic JMS Server体系结构.图中可以看到WebLogic JMS Server主要组件有: WebLogic JMS servers(用于消息通信),Java客户端,JNDI(用于域名查找), 后备存储(用于持久消息存储,基于文件或者JDBC数据库).&amp;nbsp;&#xA;     &lt;br /&gt; 二. WebLogic JMS特性&amp;nbsp;&#xA;     &lt;br /&gt; 1. 消息通信模型&amp;nbsp;&#xA;     &lt;br /&gt; JMS 支持两种消息通信模型：点到点（point-to-point）（PTP）模型和发布/订阅（Pub/Sub）模型。除了下列不同之外，这两种消息通信模型非常地相似：&amp;nbsp;&#xA;     &lt;br /&gt; PTP 模型规定了一个消息只能有一个接收者;Pub/Sub 模型允许一个消息可以有多个接收者。&amp;nbsp;&#xA;     &lt;br /&gt; 2. 消息组成&amp;nbsp;&#xA;     &lt;br /&gt; 消息传递系统的中心就是消息。&amp;nbsp;&#xA;     &lt;br /&gt; 一条 Message 分为三个组成部分：&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; 头（header）是个标准字段集，客户机和供应商都用它来标识和路由消息。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; 属性（property）支持把可选头字段添加到消息。如果您的应用程序需要不使用标准头字段对消息编目和分类，您就可以添加一个属性到消息以实现这个编目和分类。提供 set&amp;lt;Type&amp;gt;Property(&amp;hellip;) 和 get&amp;lt;Type&amp;gt;Property(&amp;hellip;) 方法以设置和获取各种 Java 类型的属性，包括 Object。JMS 定义了一个供应商选择提供的标准属性集。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; 消息的主体（body）包含要发送给接收应用程序的内容。每个消息接口特定于它所支持的内容类型。&amp;nbsp;&#xA;     &lt;br /&gt; JMS 为不同类型的内容提供了它们各自的消息类型，但是所有消息都派生自 Message 接口。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; StreamMessage：包含 Java 基本数值流，用标准流操作来顺序的填充和读取。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; MapMessage：包含一组名/值对；名称为 string 类型，而值为 Java 的基本类型。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; TextMessage：包含一个 String。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; ObjectMessage：包含一个 Serializable Java 对象；能使用 JDK 的集合类。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; BytesMessage：包含未解释字节流: 编码主体以匹配现存的消息格式。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; XMLMessage: 包含XML内容。扩展TextMessage,XMLMessage 类型的使用，使得消息过滤非常便利。&amp;nbsp;&#xA;     &lt;br /&gt; 3. 消息确认模式&amp;nbsp;&#xA;     &lt;br /&gt; 非事务性会话中，应用程序创建的会话有5 种确认模式,而在事务性会话中，确认模式被忽略。&amp;nbsp;&#xA;     &lt;br /&gt; 五种确认模式说明:&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; AUTO_ACKNOWLEDGE：自动确认模式。一旦接收方应用程序的方法调用从处理消息处返回，会话对象就会确认消息的接收。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; CLIENT_ACKNOWLEDGE：客户端确认模式。会话对象依赖于应用程序对被接收的消息调用一个acknowledge()方法。一旦这个方法被调用，会话会确认最后一次确认之后所有接收到的消息。这种模式允许应用程序以一个调用来接收，处理并确认一批消息。注意：在管理控制台中，如果连接工厂的Acknowledge Policy（确认方针）属性被设置为&amp;quot;Previous&amp;quot;（提前），但是你希望为一个给定的会话确认所有接收到的消息，那么就用最后一条消息来调用acknowledge()方法。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; DUPS_OK_ACKNOWLEDGE：允许副本的确认模式。一旦接收方应用程序的方法调用从处理消息处返回，会话对象就会确认消息的接收；而且允许重复确认。在需要考虑资源使用时，这种模式非常有效。注意：如果你的应用程序无法处理重复的消息的话，你应该避免使用这种模式。如果发送消息的初始化尝试失败，那么重复的消息可以被重新发送。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; NO_ACKNOWLEDGE：不确认模式。不确认收到的消息是需要的。消息发送给一个NO_ACKNOWLEDGE 会话后，它们会被WebLogic 服务器立即删除。在这种模式下，将无法重新获得已接收的消息，而且可能导致下面的结果：1. 消息可能丢失；和（或者）另一种情况：2. 如果发送消息的初始化尝试失败，会出现重复消息被发送的情况。&amp;nbsp;&#xA;     &lt;br /&gt; &amp;middot; MULTICAST_NO_ACKNOWLEDGE：IP组播下的不确认模式，同样无需确认。发送给一个MULTICAST_NO_ACKNOWLEDGE会话的消息， 会共享之前所述的NO_ACKNOWLEDGE 确认模式一样的特征。这种模式支持希望通过IP 组播方式进行消息通信的应用程序，而且无需依赖会话确认提供的服务质量。注意：如果你的应用程序无法处理消息的丢失或者重复，那么你应该避免使用这种模式。如果发送消息的初始化尝试失败的话，重复的消息可能会被再次发送。&amp;nbsp;&#xA;     &lt;br /&gt; 注：在上表的5 种确认模式中，AUTO_ACKNOWLEDGE ，DUPS_OK_ACKNOWLEDGE 和&amp;nbsp;&#xA;     &lt;br /&gt; CLIENT_ACKNOWLEDGE 是JMS 规范定义的，NO_ACKNOWLEDGE 和MULTICAST_NO_ACKNOWLEDGE是WebLogic JMS 提供的。&#xA;    &lt;/div&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>activemq 使用介绍</title>
      <link>https://helao.net/2013/369.html</link>
      <pubDate>2013-03-21 12:35:14 +0800</pubDate>
      <description>&lt;p&gt; 1，activemq 分为 queue和topic 两种 &lt;/p&gt; &#xA;&lt;p&gt; 2，下面先介绍queue ，使用spring 集成 &lt;/p&gt; &#xA;&lt;p&gt; build.gradle &lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;compile &amp;quot;org.springframework:spring-jms:3.2.1.RELEASE&amp;quot;&#xA;    compile &amp;quot;org.apache.activemq:activemq-core:5.7.0&amp;quot;&#xA;    compile &amp;quot;ch.qos.logback:logback-core:1.0.9&amp;quot;&#xA;    compile &amp;quot;ch.qos.logback:logback-classic:1.0.9&amp;quot;&#xA;    compile &amp;quot;ch.qos.logback:logback-access:1.0.9&amp;quot;&#xA;    testCompile group: &#39;junit&#39;, name: &#39;junit&#39;, version: &#39;4.10&#39;&lt;/pre&gt;  &#xA;&lt;p&gt; applicationContext.xml &lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt; &amp;lt;description&amp;gt;Spring公共配置&amp;lt;/description&amp;gt;&#xA;&#xA;    &amp;lt;!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 --&amp;gt;&#xA;    &amp;lt;context:component-scan base-package=&amp;quot;net.tt64&amp;quot;/&amp;gt;&#xA;    &amp;lt;!-- ActiveMQ 连接工厂 --&amp;gt;&#xA;    &amp;lt;bean id=&amp;quot;advancedConnectionFactory&amp;quot; class=&amp;quot;org.apache.activemq.ActiveMQConnectionFactory&amp;quot;&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;brokerURL&amp;quot; value=&amp;quot;vm://cheyoushuo&amp;quot; /&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;useAsyncSend&amp;quot; value=&amp;quot;true&amp;quot; /&amp;gt;&#xA;    &amp;lt;/bean&amp;gt;&#xA;    &#xA;    &amp;lt;!-- Spring Caching 连接工厂 --&amp;gt;&#xA;    &amp;lt;bean id=&amp;quot;advancedCachingConnectionFactory&amp;quot; class=&amp;quot;org.springframework.jms.connection.CachingConnectionFactory&amp;quot;&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;targetConnectionFactory&amp;quot; ref=&amp;quot;advancedConnectionFactory&amp;quot; /&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;sessionCacheSize&amp;quot; value=&amp;quot;10&amp;quot; /&amp;gt;&#xA;    &amp;lt;/bean&amp;gt;&#xA;    &#xA;    &amp;lt;!-- Queue定义 --&amp;gt;&#xA;    &amp;lt;bean id=&amp;quot;notifyQueue&amp;quot; class=&amp;quot;org.apache.activemq.command.ActiveMQQueue&amp;quot;&amp;gt;&#xA;        &amp;lt;constructor-arg value=&amp;quot;test.jms&amp;quot; /&amp;gt;&#xA;    &amp;lt;/bean&amp;gt;&#xA;&#xA;    &amp;lt;!-- Spring JMS Template --&amp;gt;&#xA;    &amp;lt;bean id=&amp;quot;jmsTemplate&amp;quot; class=&amp;quot;org.springframework.jms.core.JmsTemplate&amp;quot;&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;connectionFactory&amp;quot; ref=&amp;quot;advancedCachingConnectionFactory&amp;quot; /&amp;gt;&#xA;        &amp;lt;!-- 使 deliveryMode, priority, timeToLive设置生效--&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;explicitQosEnabled&amp;quot; value=&amp;quot;true&amp;quot; /&amp;gt;&#xA;        &amp;lt;!-- 设置NON_PERSISTENT模式, 默认为PERSISTENT --&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;deliveryPersistent&amp;quot; value=&amp;quot;true&amp;quot; /&amp;gt;&#xA;        &amp;lt;!-- 设置优先级, 默认为4 --&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;priority&amp;quot; value=&amp;quot;9&amp;quot; /&amp;gt;&#xA;    &amp;lt;/bean&amp;gt;&#xA;    &#xA;    &amp;lt;!-- 异步接收Queue消息Container --&amp;gt;&#xA;    &amp;lt;bean id=&amp;quot;advancedQueueContainer&amp;quot; depends-on=&amp;quot;jmsService&amp;quot; class=&amp;quot;org.springframework.jms.listener.DefaultMessageListenerContainer&amp;quot;&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;connectionFactory&amp;quot; ref=&amp;quot;advancedConnectionFactory&amp;quot; /&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;destination&amp;quot; ref=&amp;quot;notifyQueue&amp;quot; /&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;messageListener&amp;quot; ref=&amp;quot;jmsService&amp;quot; /&amp;gt;&#xA;        &amp;lt;!-- 初始5个Consumer, 可动态扩展到10 --&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;concurrentConsumers&amp;quot; value=&amp;quot;1&amp;quot; /&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;maxConcurrentConsumers&amp;quot; value=&amp;quot;1&amp;quot; /&amp;gt;&#xA;        &amp;lt;!-- 设置消息确认模式为Client --&amp;gt;&#xA;        &amp;lt;property name=&amp;quot;sessionAcknowledgeModeName&amp;quot; value=&amp;quot;CLIENT_ACKNOWLEDGE&amp;quot; /&amp;gt;&#xA;    &amp;lt;/bean&amp;gt;&lt;/pre&gt;  &#xA;&lt;p&gt; jms sender&amp;nbsp; &lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt;@Autowired&#xA;    private JmsTemplate jmsTemplate;&#xA;    @Autowired&#xA;    private Destination dest;&#xA;&#xA;    public void send(final Serializable obj) {&#xA;        jmsTemplate.send(dest, new MessageCreator() {&#xA;            @Override&#xA;            public Message createMessage(Session session) throws JMSException {&#xA;                ObjectMessage msg = session.createObjectMessage(obj);&#xA;                return msg;&#xA;            }&#xA;        });&#xA;    }&lt;/pre&gt; jms receiver  &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt; @Override&#xA;    public void onMessage(Message message) {&#xA;        if (message instanceof ObjectMessage) {&#xA;            ObjectMessage om = (ObjectMessage) message;&#xA;            try {&#xA;                System.out.println(om.getObject().toString() + &amp;quot; recieved&amp;quot;);&#xA;                Thread.currentThread().sleep(1000);&#xA;                System.out.println(om.getObject().toString() + &amp;quot;  process over&amp;quot;);&#xA;            } catch (InterruptedException ex) {&#xA;            } catch (JMSException ex) {&#xA;            }&#xA;        }&#xA;    }&lt;/pre&gt; Main  &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;pre&gt; public static void main(String[] args) {&#xA;        ApplicationContext ctx = new ClassPathXmlApplicationContext(&amp;quot;applicationContext.xml&amp;quot;);&#xA;        JmsSender sender = ctx.getBean(JmsSender.class);&#xA;        for (int i = 0; i &amp;lt; 100; i++) {&#xA;            System.out.println(&amp;quot;message &amp;quot; + i + &amp;quot;send&amp;quot;);&#xA;            sender.send(&amp;quot;message&amp;quot; + i);&#xA;        }&#xA;    }&lt;/pre&gt;  &#xA;&lt;p&gt; 这里将 concurrentConsumers 调为 1, 这就是单任务队列 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring insight 使用介绍</title>
      <link>https://helao.net/2013/368.html</link>
      <pubDate>2013-03-21 12:29:26 +0800</pubDate>
      <description>&lt;p&gt; To install Spring Insight Developer, you install the vFabric tc Server Developer edition and then create a new tc Runtime instance using the&amp;nbsp;insight&amp;nbsp;template. &lt;/p&gt; &#xA;&lt;p&gt; Follow these steps to install Spring Insight Developer edition: &lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt; From the&amp;nbsp;&lt;a href=&#34;http://downloads.vmware.com/&#34;&gt;VMware Download Center&lt;/a&gt;, download tc Server Developer Edition, which includes Spring Insight Developer. &lt;/p&gt; &#xA;   &lt;div&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt; tc Server Developer Edition, for example,&amp;nbsp;vfabric-tc-server-developer-2.5.&lt;em&gt;X.X&lt;/em&gt;.zip &lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt; Open a terminal (Unix) or Command Prompt (Windows) and create the main tc Server installation directory, such as&amp;nbsp;/home/tcserver. For example, on Unix: &lt;/p&gt; &lt;pre&gt;prompt$ mkdir /home/tcserver&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt; Unzip or untar the bundle you downloaded into the new directory. &lt;/p&gt; &lt;p&gt; For example, if you downloaded the tc Server Developer Edition into the&amp;nbsp;/home/Downloads&amp;nbsp;directory: &lt;/p&gt; &lt;pre&gt;prompt$ cd /home/tcserver&#xA;prompt$ unzip /home/Downloads/vfabric-tc-developer-2.5.&lt;em&gt;X.X&lt;/em&gt;.zip&lt;/pre&gt; &lt;p&gt; This creates a directory called&amp;nbsp;vfabric-tc-server-developer-2.5.&lt;em&gt;X.X&lt;/em&gt;. This directory contains the tc Runtime utility scripts, the templates directory (including the&amp;nbsp;insight&amp;nbsp;template), Tomcat 6 and 7, and so on. See&lt;a href=&#34;http://static.springsource.com/projects/tc-server/2.1/getting-started/html/ch06s03.html&#34;&gt;Overview of tc Server Directories, Variables, and Configuration Files&amp;nbsp;&lt;/a&gt;for details. &lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt; Create a tc Server instance with the Spring Insight Developer template using the&amp;nbsp;tcruntime-instance.sh&amp;nbsp;(Unix) or&amp;nbsp;tcruntime-instance.bat&amp;nbsp;(Windows) script. On Unix, for example: &lt;/p&gt; &lt;pre&gt;prompt$ cd /home/tcserver/vfabric-tc-server-developer-2.5.&lt;em&gt;X.X&lt;/em&gt; prompt$ ./tcruntime-instance.sh create myInstanceName -t insight&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt; Execute the tc Server instance you created using the&amp;nbsp;tcruntime-ctl.sh&amp;nbsp;(Unix) or&amp;nbsp;tcruntime-ctl.bat&amp;nbsp;(Windows) script. &lt;/p&gt; &lt;p&gt; On Unix: &lt;/p&gt; &lt;pre&gt;prompt$ ./tcruntime-ctl.sh &lt;em&gt;myInstanceName&lt;/em&gt; start&lt;/pre&gt; &lt;p&gt; On Windows, you must install the instance as a Windows service before you start it: &lt;/p&gt; &lt;pre&gt;prompt$ tcruntime-ctl.bat &lt;em&gt;myInstanceName&lt;/em&gt; install&#xA;prompt$ tcruntime-ctl.bat &lt;em&gt;myInstanceName&lt;/em&gt; start&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt; Deploy your Web applications to tc Server. Copy the WAR files to the&amp;nbsp;webapps&amp;nbsp;directory of the tc runtime instance and make any necessary changes to the&amp;nbsp;conf/server.xml&amp;nbsp;and&amp;nbsp;conf/context.xml&amp;nbsp;files to support the deployed application. &lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt; Access the Spring Insight Dashboard by loading the url&amp;nbsp;http://localhost:8080/insight&amp;nbsp;in your browser. &lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt; See the&lt;a href=&#34;http://static.springsource.com/projects/documentation/index.html&#34;&gt;&amp;nbsp;tc Server documentation&lt;/a&gt;&amp;nbsp;for more detailed information about installing and configuring tc Server. &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>监控记要</title>
      <link>https://helao.net/2013/367.html</link>
      <pubDate>2013-03-20 01:21:52 +0800</pubDate>
      <description>&lt;p&gt; 监控目的： &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 1，自动化 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 2，可视化 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 3，高效 &lt;/p&gt; &#xA;&lt;p&gt; 监控目标： &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 1，mysql : 查询记录，连接数记录(并发数)， slow query记录 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 2，tomcat : 访问记录，并发数记录， jvm gc和内存分配情况，线程数 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 3，nginx : 访问记录，计划性数记录 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 4，server ： 内存，cpu，io 硬盘，io net&amp;nbsp; &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 5，memcache ， 查询记录，并发数 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 所需工具： &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 1， &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>2013年03月13日 留念</title>
      <link>https://helao.net/2013/366.html</link>
      <pubDate>2013-03-13 12:48:04 +0800</pubDate>
      <description>&lt;p&gt; 还是准备把vps上的blog同步到 github上吧，使用jgit做。 那这样做的话就得改改ttcms的结构了 &lt;/p&gt; &#xA;&lt;p&gt; 1，首先支持多用户，将用户用到的属性提到user表中，插件用到的属性由插件自己去建关联表 &lt;/p&gt; &#xA;&lt;p&gt; 2，支持插件的自动部署（实时停用、启用），目前支持的插件有 oschina,github. 用aop实现 &lt;/p&gt; &#xA;&lt;p&gt; 3，下一步就该优化标签和分类显示了 &lt;/p&gt; &#xA;&lt;p&gt; 4，然后是主题的管理 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>任务</title>
      <link>https://helao.net/2013/365.html</link>
      <pubDate>2013-03-08 12:12:58 +0800</pubDate>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;sublime 插件，快捷键 支持gradle&lt;/li&gt;&#xA;&lt;li&gt;gradle 插件， 可使用jetty或者tomcat方便的调试&lt;/li&gt;&#xA;&lt;li&gt;替换feiyan35488.com的域名&lt;/li&gt;&#xA;&lt;li&gt;vps缴费 买 tt64域名&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>面试 复习要点</title>
      <link>https://helao.net/2013/364.html</link>
      <pubDate>2013-03-06 10:05:58 +0800</pubDate>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;java 基础知识：语法，内部类，try catch， scanner, pattern , synchronize&lt;/li&gt;&#xA;&lt;li&gt;redis和memcache的原理和特点&lt;/li&gt;&#xA;&lt;li&gt;lucene&lt;/li&gt;&#xA;&lt;li&gt;nginx 和jetty&lt;/li&gt;&#xA;&lt;li&gt;算法: 快排，归并，二分，冒泡，红黑树&lt;/li&gt;&#xA;&lt;li&gt;hadoop mapreduce算法&lt;/li&gt;&#xA;&lt;li&gt;jvm gc&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>sublime2 的准备</title>
      <link>https://helao.net/2013/363.html</link>
      <pubDate>2013-03-03 04:48:16 +0800</pubDate>
      <description>&lt;p&gt;1,java和python的语法提示&#xA;2,类的自动导入&#xA;3,运行和构建快捷键&#xA;4,类的跳转，可以跳转到源码上&#xA;5,类的 层次&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>备忘录</title>
      <link>https://helao.net/2013/362.html</link>
      <pubDate>2013-03-02 01:58:39 +0800</pubDate>
      <description>&lt;p&gt; 1，0install 安装使用 &lt;/p&gt; &#xA;&lt;p&gt; 2，irc的常用语法 &lt;/p&gt; &#xA;&lt;p&gt; 3，arch的安装指南 &lt;/p&gt; &#xA;&lt;p&gt; 4，suse的安装指南 &lt;/p&gt; &#xA;&lt;p&gt; 5，使用osc的android和iphone客户端查询自己blog的内容 &lt;/p&gt; &#xA;&lt;p&gt; 6，英语入门之背单词 ，该做了 &lt;/p&gt; &#xA;&lt;p&gt; 7，将nutz的json 模块打包出来，集成到 HttpClient中去 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>奉至修真行</title>
      <link>https://helao.net/2013/361.html</link>
      <pubDate>2013-02-21 04:53:45 +0800</pubDate>
      <description>&lt;p&gt; 铭志，囚封天之道，众生需渡无量劫，离开深狱一执念，奉至修真行 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; 铭志，众生亦于无量前，解今茫世，脱困天之念，取来生道，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志，锁亡天之运，印冥朝，众生之所不得真道者，常沉苦海，永失真道，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志，众灵皆困天道，挣扎苦海，难舍尘缘，众灵须舍弃执念，得七界之外，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志，天道不仁，灭天之道，取天之血，断天之翼，融天之魂，得道今生，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志。众魂常囚落海，难度轮回，众魂皆为门徒可解落海，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志，捆天之命，驾天之躯，吾为天道，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志，所困亦未困，生死，因果，轮回，欲得真道者，弃生死，了因果，渡轮回，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志，天道分九脉，众生分九等，欲成上道者，弃今世亲爱友，得道，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志，九郡九等，大能者，权衡取舍，心机深沉，得道，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志，天规万千，众生常得一道，难得真道，众生须弃之，凝一生之道，奉至修真行&lt;br /&gt; &lt;br /&gt; 铭志，众生之所不得真道者，难舍生死，难了因果，难渡轮回，奉己修真行&lt;br /&gt; &lt;br /&gt; 铭志，众生皆欲脱天道，却失真道，众生亦修己道，成独道奴天道，奉己修真行&lt;br /&gt; &lt;br /&gt; 铭志，天道恒长之，众生欲得真道，须舍生死，了因果，渡轮回，奉己修真行&lt;br /&gt; &lt;br /&gt; 铭志，众生难舍生死，而困落海，亦困难一生，众生须励志得真道，奉己修真行&lt;br /&gt; &lt;br /&gt; 铭志，神若残，难得真道，须舍神而成魂道，奉己修真行&lt;br /&gt; &lt;br /&gt; 铭志，魂若残，难得真神，须舍魂而成生道，奉己修真行&lt;br /&gt; &lt;br /&gt; 铭志，生若残，难得真生，须舍生而成人道，奉己修真行&lt;br /&gt; &lt;br /&gt; 铭志，人若残，无生，无魂，无神，无道，当渡轮回，奉己修真行&lt;br /&gt; &lt;br /&gt; 铭志，道分道再分道，无道可自成一道，立千道之上，众生皆为门徒，得真道，奉己修真行 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>2013到了，做个计划吧</title>
      <link>https://helao.net/2013/360.html</link>
      <pubDate>2013-02-16 08:51:11 +0800</pubDate>
      <description>&lt;p&gt; 新的一年到了，也该做个计划了，今年是最后一年追求技术上的进步，如果还不能找到自己满意的工作，那么可以考虑当技术经理或者转行，这一行累的是精神耗的是身体。 &lt;/p&gt; &#xA;&lt;p&gt; 今年的技术目标依然是java的基础和高性能并发和搜索，然后是python或nodejs的高效开发工具，不知道为何感觉越来越累了，技术无止境，人终究会累的 &lt;/p&gt; &#xA;&lt;p&gt; 1，要放慢脚步，踏踏实实的走下去 &lt;/p&gt; &#xA;&lt;p&gt; 2，不要放过细节，查资料得到的细节一定要记录下来，经常翻看 &lt;/p&gt; &#xA;&lt;p&gt; 3，要积累错误也要反思成功 &lt;/p&gt; &#xA;&lt;p&gt; 4，每件事要对的起自己的良心，要自信也要承担起自己的责任 &lt;/p&gt; &#xA;&lt;p&gt; 5，注意自己形象 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 今年大致要做的事有： &lt;/p&gt; &#xA;&lt;p&gt; 1，好好准备简历，争取各大公司的面试机会 &lt;/p&gt; &#xA;&lt;p&gt; 2，每个季节买两套衣服 &lt;/p&gt; &#xA;&lt;p&gt; 3，争取找个女朋友，多和朋友去玩，不要怕请客花钱 &lt;/p&gt; &#xA;&lt;p&gt; 4，为两三个开源项目贡献代码 &lt;/p&gt; &#xA;&lt;p&gt; 5，学学python和qt，写点使用的工具 &lt;/p&gt; &#xA;&lt;p&gt; 6，去西藏和天津玩，找个高山爬 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt; &#xA;&lt;p&gt; 就这样吧，把这些做到基本就可以了，前半年的面试一定要成功 &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>轨迹记录</title>
      <link>https://helao.net/2013/359.html</link>
      <pubDate>2013-02-16 08:31:21 +0800</pubDate>
      <description>&lt;p&gt;本来想做个关于公交到站提醒的，原来的设计是通过指定到站站点的经纬度，然后应用实时更新gps直到接近到500米内时,响铃或震动提示用户下车。 这个思路其实还可以，后来查资料发现手机中gps的精度和响应速度都不够理想，也没有各站点的数据，就先做轨迹记录然后等积累一些数据再说&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>经典加密学和现代加密学-读书笔记-0</title>
      <link>https://helao.net/2012/358.html</link>
      <pubDate>2012-12-28 02:14:49 +0800</pubDate>
      <description>&lt;p&gt; 概念介绍： &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 加密过程分为 编码法和加密法 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 编码法是通过字符的置换来得到密文的 &lt;/p&gt; &#xA;&lt;p&gt; &amp;nbsp; &amp;nbsp; 而加密法则是通过各种规则直接打乱明文取得密文，根据加密方式又分为 可逆和不可逆两种，可逆的分为 公钥，密钥等， 不可逆的如hash等 &lt;/p&gt; &#xA;&lt;p&gt; &lt;br /&gt; &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring 3.2.0ga 测试框架</title>
      <link>https://helao.net/2012/349.html</link>
      <pubDate>2012-12-20 02:56:48 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    spring3.2终于出ga版了， 发现spring test的改进最大，添加了对 springmvc的测试&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    看了看文档，将使用方法整理如下：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1，可以使用 @WebAppConfiguration来标明是web应用测试， @ContextConfiguration来指定配置文件，其他的和测试相同&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2，主要用到三个类： 1，MockMvc及&lt;span&gt;MockMvcBuilders， 用来生成当前的测试环境，后者是生成MockMvc的&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2，&lt;span&gt;MockMvcRequestBuilders ， 模拟http请求&lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3，&lt;span&gt;MockMvcResultMatchers ，对返回结果进行断言&lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;3，这几个类都提供了链式操作，写代码的时候就很舒服了，代码也好看多了，下面就详细说说这几个类&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;3.1 MockMvcBuilders&amp;nbsp;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;这个类只有两个方法：&lt;span&gt;DefaultMockMvcBuilder&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;span&gt;webAppContextSetup(WebApplicationContext context) &amp;nbsp;和&amp;nbsp;&lt;span&gt;&lt;strong&gt;&lt;span&gt;StandaloneMockMvcBuilder&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;standaloneSetup(Object... controllers)&amp;nbsp;&lt;/span&gt;&lt;/span&gt;，区别是 前者依赖Spring上下文，因此这个要加载配置文件&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;StandaloneMockMvcBuilder 继承自 DefaultMockMvcBuilder&amp;nbsp;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;毕竟spring的配置文件中没有web.xml中那些filter的信息，无法完整模拟web环境， 因此 DefautlMockBuilder中有 addFilter(Filter filter) &amp;nbsp;和 addFilters(Filter ...)两个方法，还有一个RequestBuilder，可以定制默认的request， 还有一些 alwaysExpect() ,alwaysDo等方法，用于添加默认断言&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 配置好Builder后，然后 调用build()方法 生成 MockMvc对象， 我们就可以用来测试了&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;3.2 MockMvcRequestBuilders&amp;nbsp;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 这个类里面全是静态方法， 提供http操作方法如： get,post,delete,put,fileupload , 还有一个request方法，可以自己指定 前面那类型， 还有一个&amp;nbsp;&lt;span&gt;asyncDispatch（MvcResult mvcResult）,应该是异步执行&lt;/span&gt;，这个方法没用过，有时间看看是干嘛用的&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 这些方法返回的都是 RequestBuilder的子类， 针对不同http请求类型做了一些拓展，都是链式操作很方便的&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;3.2 MockMvcResultMatchers , 这个是对返回结果进行断言，也都是静态方法，链式操作， 这些方法返回的都是 ResultMather的子类&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;提供的方法有：request（），handler(), model(),view（），flash(),forwardUrl(String expectUrl),redirectUrl(&lt;span&gt;String expectUrl&lt;/span&gt;) ,status(),header(),content(),jsonPath() ,xpath(),cookie();&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;jsonPath 和 xpath 是针对json和xml格式数据的，具体格式请参考&amp;nbsp;&lt;span&gt;http://goessner.net/articles/JsonPath/ 这篇文章。&lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; jsonPath 操作依赖 jsonPath类， xpath没用过应该也有相关依赖吧&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;下面放一个测试例子吧&amp;nbsp;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public class SpringControllerTest {&#xA;&#xA;    @Test&#xA;    public void json() throws Exception {&#xA;&#xA;        MockMvc mockMvc = standaloneSetup(new PersonController()).build();&#xA;        mockMvc.perform(get(&#34;/person/Lee&#34;).accept(MediaType.APPLICATION_JSON))&#xA;                .andExpect(status().isOk())&#xA;                .andExpect(content().contentType(&#34;application/json&#34;))&#xA;                .andExpect(jsonPath(&#34;$.name&#34;).value(&#34;Lee&#34;)).andExpect(jsonPath(&#34;$.title&#34;).value(&#34;你好&#34;));&#xA;        mockMvc.perform(post(&#34;/p2/haha&#34;).param(&#34;title&#34;, &#34;你好吧&#34;)).andExpect(status().is(302))&#xA;                .andExpect(view().name(&#34;redirect:/hello&#34;)).andExpect(model().attribute(&#34;title&#34;, &#34;你好吧&#34;));&#xA;        mockMvc.perform(get(&#34;/p2/haha2&#34;).param(&#34;title&#34;, &#34;你好吧&#34;).accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk())&#xA;                .andExpect(jsonPath(&#34;$.data[0].fullName&#34;).value(&#34;宝马-进口-x6&#34;));&#xA;    }&#xA;&#xA;    @Controller&#xA;    private class PersonController {&#xA;&#xA;        @RequestMapping(value = &#34;/person/{name}&#34;)&#xA;        public Object get(@PathVariable String name) {&#xA;            Map person = new HashMap();&#xA;            person.put(&#34;name&#34;, name);&#xA;            person.put(&#34;title&#34;, &#34;你好&#34;);&#xA;            return ViewUtils.createJsonView(person);&#xA;        }&#xA;&#xA;        @RequestMapping(value = &#34;/p2/haha&#34;)&#xA;        public Object post(String name, String title) {&#xA;            Map person = new HashMap();&#xA;            person.put(&#34;name&#34;, name);&#xA;            person.put(&#34;title&#34;, title);&#xA;&#xA;            return ViewUtils.createView(&#34;redirect:/hello&#34;, person);&#xA;        }&#xA;&#xA;        @RequestMapping(value = &#34;/p2/haha2&#34;,produces=MediaType.APPLICATION_JSON_VALUE+&#34;;charset=utf-8&#34;)&#xA;        @ResponseBody&#xA;        public Object getjson(String name, String title) {&#xA;            List&amp;lt;Car&amp;gt; cars = Lists.newArrayList();&#xA;            cars.add(EntityFactory.createCar(&#34;宝马-进口-x6&#34;, &#34;x6&#34;, null, &#34;进口&#34;));&#xA;            JsonData data = new JsonData();&#xA;            data.setData(BeanMapper.mapList(cars, CarDTO.class));&#xA;            return data;&#xA;        }&#xA;    }&#xA;}&lt;/pre&gt;&#xA;&lt;br /&gt;&#xA;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>研究cloudfoundry有感</title>
      <link>https://helao.net/2012/348.html</link>
      <pubDate>2012-12-10 12:55:00 +0800</pubDate>
      <description>&lt;pre&gt;研究cloudfoundry有感&#xA;1，刚开始按教程安装最新的vmc话0.4.3,出了一堆问题，我在stackflow报问题后，当天vmc升级到0.4.5,成功安装vmc 0。4。5&#xA;2，部署自己的spring系统到micro云上，发现了自己系统的一个问题，包冲突，解决后成功部署，也解决了外网访问mysql的问题，不过还没有找到方便导入数据的方式&#xA;3，部署了nodejs express应用到cloud上，所谓的的联机只是局域网连，外网依然不行，还需要试试离线模式的部署&#xA;4，还能自己安装云系统，vcap模式，单节点和多结点模式&#xA;5，可以添加框架和语言支持&#xA;6，spring insight 是监控spring程序的，nosh是大规模集群下的部署软件&#xA;&#xA;补充说明：&#xA;1，使用联机模式的云不能外网访问，只是把域名映射到虚拟机ip而已&#xA;在本地同样可以通过ip访问，这里还需要加端口，貌似还有些问题，部署到公网的就不需要改动端口而是自动适配&#xA;2，本地云可以使用自定义域名，只是无法使用虚拟机的dns映射，这里不区分离线和联机模式，自己做好dns映射就好&#xA;3，试验：使用code配置云，然后部署两个应用看看是否会有资源冲突，比如端口，我猜不会冲突，应该controller层会进行端口映射&#xA;&#xA;&#xA;发自我的 iPad&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>micro cloud foundry</title>
      <link>https://helao.net/2012/347.html</link>
      <pubDate>2012-12-06 06:20:45 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;span style=&#34;color:#333333;font-family:&#39;Helvetica Neue&#39;, Helvetica, sans-serif;font-size:20px;line-height:28px;background-color:#FFFFFF;&#34;&gt;micro cloud foundry , &amp;nbsp;tt64 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;brand-price-front&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;color:#333333;font-family:&#39;Helvetica Neue&#39;, Helvetica, sans-serif;font-size:20px;line-height:28px;background-color:#FFFFFF;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tt32. &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#333333;font-family:&#39;Helvetica Neue&#39;, Helvetica, sans-serif;font-size:20px;line-height:28px;white-space:normal;background-color:#FFFFFF;&#34;&gt;encourage-said-brother&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;color:#333333;font-family:&#39;Helvetica Neue&#39;, Helvetica, sans-serif;font-size:20px;line-height:28px;background-color:#FFFFFF;&#34;&gt;&lt;span style=&#34;color:#333333;font-family:&#39;Helvetica Neue&#39;, Helvetica, sans-serif;font-size:20px;line-height:28px;white-space:normal;background-color:#FFFFFF;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tt16. &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#333333;font-family:&#39;Helvetica Neue&#39;, Helvetica, sans-serif;font-size:20px;line-height:28px;white-space:normal;background-color:#FFFFFF;&#34;&gt;search-chat-heavy&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring mvc 学习笔记1</title>
      <link>https://helao.net/2012/346.html</link>
      <pubDate>2012-11-28 03:15:22 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    还在弄springmvc的事，又遇到了 @RequestParam 和 @PathVarable的的区别&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    前者是用来自动注入request中的参数的，如果参数转换出错的话整个请求会报错，所以得指定默认值才行， 而后者是和@requestMapping配合实现路径参数的&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有就是重定向的问题： 默认的InnerResourceResolver 是生成jstlview的，它就可以处理重定向，我们通常action中返回“viewpath”， 只需这样返回“redirect:url” 即可，同理可以使用&#34;forward:action&#34;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    但是要是想返回json视图的话就不行了，spring mvc&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    中可以通过@ResponseBody注解来将返回值直接解析为json然后写到response中，不过需要用到 jackson-mapping-asl&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    如果想文件上传的话就需要自己定义视图了如&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;ol style=&#34;margin-left:0px;background-color:#FFFFFF;color:#2B91AF;font-family:Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace;text-align:left;&#34;&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp; &amp;lt;bean&amp;nbsp;id=&lt;span style=&#34;color:blue;&#34;&gt;&#34;multipartResolver&#34;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;class&lt;/span&gt;=&lt;span style=&#34;color:blue;&#34;&gt;&#34;org.springframework.web.multipart.commons.CommonsMultipartResolver&#34;&lt;/span&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;!--&amp;nbsp;one&amp;nbsp;of&amp;nbsp;the&amp;nbsp;properties&amp;nbsp;available;&amp;nbsp;the&amp;nbsp;maximum&amp;nbsp;file&amp;nbsp;size&amp;nbsp;in&amp;nbsp;bytes&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;property&amp;nbsp;name=&lt;span style=&#34;color:blue;&#34;&gt;&#34;maxUploadSize&#34;&lt;/span&gt;&amp;nbsp;value=&lt;span style=&#34;color:blue;&#34;&gt;&#34;100000&#34;&lt;/span&gt;&amp;nbsp;/&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/bean&amp;gt;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;    &lt;/ol&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    需要依赖两个jar包： apache.commons.fileupload 和apache.commons.io&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这样就可以自动注入参数了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    如&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;ol style=&#34;margin-left:0px;background-color:#FFFFFF;color:#2B91AF;font-family:Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace;text-align:left;&#34;&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&lt;span style=&#34;color:#646464;&#34;&gt;@RequestMapping&lt;/span&gt;(value&amp;nbsp;=&amp;nbsp;&lt;span style=&#34;color:blue;&#34;&gt;&#34;/form&#34;&lt;/span&gt;,&amp;nbsp;method&amp;nbsp;=&amp;nbsp;RequestMethod.POST)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;public&lt;/span&gt;&amp;nbsp;String&amp;nbsp;handleFormUpload(&lt;span style=&#34;color:#646464;&#34;&gt;@RequestParam&lt;/span&gt;(&lt;span style=&#34;color:blue;&#34;&gt;&#34;name&#34;&lt;/span&gt;)&amp;nbsp;String&amp;nbsp;name,&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&lt;span style=&#34;color:#646464;&#34;&gt;@RequestParam&lt;/span&gt;(&lt;span style=&#34;color:blue;&#34;&gt;&#34;file&#34;&lt;/span&gt;)&amp;nbsp;MultipartFile&amp;nbsp;file)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;if&lt;/span&gt;&amp;nbsp;(!file.isEmpty())&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;byte&lt;/span&gt;[]&amp;nbsp;bytes&amp;nbsp;=&amp;nbsp;file.getBytes();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&lt;span style=&#34;color:#008200;&#34;&gt;//&amp;nbsp;去理上传写文件代码&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;} &amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;    &lt;/ol&gt;&#xA;多文件上传的话就这样&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;ol style=&#34;margin-left:0px;background-color:#FFFFFF;color:#2B91AF;font-family:Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace;text-align:left;&#34;&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&#34;color:#646464;&#34;&gt;@RequestMapping&lt;/span&gt;(value&amp;nbsp;=&amp;nbsp;&lt;span style=&#34;color:blue;&#34;&gt;&#34;/multipartFileUpload&#34;&lt;/span&gt;,method&amp;nbsp;=&amp;nbsp;RequestMethod.POST)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;public&lt;/span&gt;&amp;nbsp;String&amp;nbsp;upload2(&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MultipartHttpServletRequest&amp;nbsp;request&amp;nbsp;,&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#646464;&#34;&gt;@RequestParam&lt;/span&gt;(&lt;span style=&#34;color:blue;&#34;&gt;&#34;name&#34;&lt;/span&gt;)&amp;nbsp;String&amp;nbsp;name&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#008200;&#34;&gt;//&amp;nbsp;页面上的控件值&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)&amp;nbsp;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;throws&lt;/span&gt;&amp;nbsp;Exception&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&amp;lt;MultipartFile&amp;gt;&amp;nbsp;files&amp;nbsp;=&amp;nbsp;request.getFiles(&lt;span style=&#34;color:blue;&#34;&gt;&#34;file&#34;&lt;/span&gt;);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;for&lt;/span&gt;(&amp;nbsp;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;int&lt;/span&gt;&amp;nbsp;i=&lt;span style=&#34;color:#C00000;&#34;&gt;0&lt;/span&gt;;&amp;nbsp;i&amp;lt;files.size()&amp;nbsp;;i++){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;if&lt;/span&gt;(!&amp;nbsp;files.get(i).isEmpty())&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.info(&lt;span style=&#34;color:blue;&#34;&gt;&#34;上传文件：&#34;&lt;/span&gt;+files.get(i).getOriginalFilename());&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;this&lt;/span&gt;.copyFile(files.get(i).getInputStream(),&amp;nbsp;files.get(i).getOriginalFilename());&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.info(&lt;span style=&#34;color:blue;&#34;&gt;&#34;success&#34;&lt;/span&gt;);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;color:#7F0055;font-weight:bold;&#34;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&#34;color:blue;&#34;&gt;&#34;fileUpload/success&#34;&lt;/span&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li style=&#34;font-size:1em;margin-left:38px;background-color:#FAFAFA;&#34;&gt;&#xA;            &lt;span style=&#34;color:black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;    &lt;/ol&gt;&#xA;还很方便的吧，有时间将springmvc的源码跟一遍，至少把它的基本特性都得熟悉了&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>2012年11月27日  留念</title>
      <link>https://helao.net/2012/345.html</link>
      <pubDate>2012-11-27 09:53:33 +0800</pubDate>
      <description>&lt;p&gt;&lt;span&gt;新来公司要做一个小项目，本来打算用nutz做的，结果老大让用spring jpa hibernate框架， 这里hibernate只是托管jpa而已， dao层主要还是用jpa的查询接口，而spring-data做这些系统的粘合剂，很自然mvc层用spring-mvc整合方便配置简单，页面用了bootstrap做样式和sitemesh做模块控制。&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span&gt;下面就谈些具体的步骤吧&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span&gt;我使用的maven管理项目， pom.xml 内容为&lt;/span&gt;&lt;br /&gt;&#xA;&lt;div&gt;&#xA;&lt;pre class=&#34;prettyprint lang-xml linenums&#34;&gt;&amp;lt;properties&amp;gt;&#xA;    &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;&#xA;  &amp;lt;/properties&amp;gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;lt;dependencies&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;      &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;&#xA;      &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;&#xA;      &amp;lt;version&amp;gt;4.8.1&amp;lt;/version&amp;gt;&#xA;      &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;     &amp;lt;groupId&amp;gt;org.springframework.data&amp;lt;/groupId&amp;gt;&#xA;     &amp;lt;artifactId&amp;gt;spring-data-jpa&amp;lt;/artifactId&amp;gt;&#xA;     &amp;lt;version&amp;gt;1.1.0.RELEASE&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;spring-webmvc&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;version&amp;gt;3.1.3.RELEASE&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;spring-hibernate3&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;version&amp;gt;2.0.8&amp;lt;/version&amp;gt;&#xA;        &amp;lt;exclusions&amp;gt;&#xA;            &amp;lt;exclusion&amp;gt;&#xA;                &amp;lt;artifactId&amp;gt;hibernate&amp;lt;/artifactId&amp;gt;&#xA;                &amp;lt;groupId&amp;gt;org.hibernate&amp;lt;/groupId&amp;gt;&#xA;            &amp;lt;/exclusion&amp;gt;&#xA;        &amp;lt;/exclusions&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;servlet-api&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&#xA;        &amp;lt;version&amp;gt;2.5&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;commons-dbcp&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;commons-dbcp&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;version&amp;gt;1.4&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;version&amp;gt;5.1.21&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;amp;lt;dependency&amp;amp;gt;&#xA;    &amp;amp;lt;groupId&amp;amp;gt;org.hibernate&amp;amp;lt;/groupId&amp;amp;gt;&#xA;    &amp;amp;lt;artifactId&amp;amp;gt;hibernate-entitymanager&amp;amp;lt;/artifactId&amp;amp;gt;&#xA;    &amp;amp;lt;version&amp;amp;gt;4.1.8.Final&amp;amp;lt;/version&amp;amp;gt;&#xA;&amp;amp;lt;/dependency&amp;amp;gt;&#xA;&amp;amp;lt;dependency&amp;amp;gt;&#xA;    &amp;amp;lt;groupId&amp;amp;gt;org.sitemesh&amp;amp;lt;/groupId&amp;amp;gt;&#xA;    &amp;amp;lt;artifactId&amp;amp;gt;sitemesh&amp;amp;lt;/artifactId&amp;amp;gt;&#xA;    &amp;amp;lt;version&amp;amp;gt;3.0-alpha-1&amp;amp;lt;/version&amp;amp;gt;&#xA;&amp;amp;lt;/dependency&amp;amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&amp;lt;/dependencies&amp;gt;&#xA;  &amp;lt;build&amp;gt;&#xA;      &amp;lt;plugins&amp;gt;&#xA;        &amp;lt;plugin&amp;gt;&#xA;          &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;&#xA;            &amp;lt;configuration&amp;gt;&#xA;              &amp;lt;source&amp;gt;1.6&amp;lt;/source&amp;gt;&#xA;              &amp;lt;target&amp;gt;1.6&amp;lt;/target&amp;gt;&#xA;            &amp;lt;/configuration&amp;gt;&#xA;        &amp;lt;/plugin&amp;gt;&#xA;      &amp;lt;/plugins&amp;gt;&#xA;    &amp;lt;/build&amp;gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;amp;lt;repositories&amp;amp;gt;  &#xA;&amp;amp;lt;repository&amp;amp;gt;  &#xA;    &amp;amp;lt;id&amp;amp;gt;java&amp;amp;lt;/id&amp;amp;gt;  &#xA;    &amp;amp;lt;name&amp;amp;gt;java official repository&amp;amp;lt;/name&amp;amp;gt;  &#xA;    &amp;amp;lt;url&amp;amp;gt;http://download.java.net/maven/2/&amp;amp;lt;/url&amp;amp;gt;  &#xA;&amp;amp;lt;/repository&amp;amp;gt;  &#xA;&amp;amp;lt;/repositories&amp;amp;gt;  &amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;br /&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&#xA;    用到的jar包很明显有spring-mvc ,spring-data-jpa,hibernate 等，这里要注意有几个包会冲突，spring默认依赖的hibernate包版本太低，我这里手动指定了hibernate4，而且hibernate-entitymanager这个是必须的包，还有jpa这个包下载的问题， 需要添加一个源如上&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面从web.xml入手&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-xml linenums&#34;&gt;&amp;lt;filter&amp;gt;&#xA;        &amp;lt;filter-name&amp;gt;CharacterEncodingFilter&amp;lt;/filter-name&amp;gt;&#xA;        &amp;lt;filter-class&amp;gt;&#xA;        org.springframework.web.filter.CharacterEncodingFilter&amp;lt;/filter-class&amp;gt;&#xA;        &amp;lt;init-param&amp;gt;&#xA;        &amp;lt;param-name&amp;gt;encoding&amp;lt;/param-name&amp;gt;&#xA;        &amp;lt;param-value&amp;gt;UTF-8&amp;lt;/param-value&amp;gt;&#xA;        &amp;lt;/init-param&amp;gt;&#xA;    &amp;lt;/filter&amp;gt;&#xA;    &amp;lt;filter&amp;gt;&#xA;        &amp;lt;filter-name&amp;gt;sitemesh&amp;lt;/filter-name&amp;gt;&#xA;        &amp;lt;filter-class&amp;gt;cn.mucang.offlineModule.filters.MetaSitemeshFilter&amp;lt;/filter-class&amp;gt;&#xA;      &amp;lt;/filter&amp;gt;&#xA;    &amp;lt;filter-mapping&amp;gt;&#xA;        &amp;lt;filter-name&amp;gt;CharacterEncodingFilter&amp;lt;/filter-name&amp;gt;&#xA;        &amp;lt;url-pattern&amp;gt;/&lt;em&gt;&amp;lt;/url-pattern&amp;gt;&#xA;    &amp;lt;/filter-mapping&amp;gt;&#xA;    &amp;lt;!-- Processes application requests --&amp;gt;&#xA;    &amp;lt;servlet&amp;gt;&#xA;        &amp;lt;servlet-name&amp;gt;mvc-dispatcher&amp;lt;/servlet-name&amp;gt;&#xA;        &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;&#xA;        &amp;lt;init-param&amp;gt;&#xA;            &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;&#xA;            &amp;lt;param-value&amp;gt;/WEB-INF/applicationContext.xml&amp;lt;/param-value&amp;gt;&#xA;        &amp;lt;/init-param&amp;gt;&#xA;        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;&#xA;    &amp;lt;/servlet&amp;gt;&lt;br /&gt;&#xA;    &amp;lt;servlet-mapping&amp;gt;&#xA;        &amp;lt;servlet-name&amp;gt;mvc-dispatcher&amp;lt;/servlet-name&amp;gt;&#xA;        &amp;lt;url-pattern&amp;gt;&lt;/em&gt;.do&amp;lt;/url-pattern&amp;gt;&#xA;    &amp;lt;/servlet-mapping&amp;gt;&#xA;    &amp;lt;filter-mapping&amp;gt;&#xA;    &amp;lt;filter-name&amp;gt;sitemesh&amp;lt;/filter-name&amp;gt;&#xA;    &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;&#xA;    &amp;lt;dispatcher&amp;gt;FORWARD&amp;lt;/dispatcher&amp;gt;&#xA;    &amp;lt;dispatcher&amp;gt;REQUEST&amp;lt;/dispatcher&amp;gt;&#xA;  &amp;lt;/filter-mapping&amp;gt;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这里配置了 编码防止接收的内容出现乱码问题，还有spring-mvc的入口servlet，还有就是 sitemesh了，这个要放到spring-mvc后面，它只需要拦截mvc 转发的jsp请求即可&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面介绍一下包结构：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    src下： your.company.package.domains 领域类，&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .dao &amp;nbsp; 领域类操作接口&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .controllers 控制器&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .services &amp;nbsp;服务层， 方法上可使用 事务注解&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .utils &amp;nbsp; &amp;nbsp; &amp;nbsp;工具类&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .filters &amp;nbsp; &amp;nbsp;这个包看情况添加吧，这里我把自定义了 MetaSitemeshFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    webapp下 &amp;nbsp;css/ ,js/ ,img/， WEB-INF/templates/ 布局文件， &amp;nbsp;WEB-INF/views/ 视图&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面是最重要的applicationContext.xml&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-xml linenums&#34;&gt;&amp;lt;?xml version=&amp;ldquo;1.0&amp;rdquo; encoding=&amp;ldquo;UTF-8&amp;rdquo;?&amp;gt;&#xA;&amp;lt;beans xmlns=&amp;ldquo;&lt;a href=&#34;http://www.springframework.org/schema/beans&amp;quot;&#34;&gt;http://www.springframework.org/schema/beans&amp;quot;&lt;/a&gt;&#xA;    xmlns:xsi=&amp;ldquo;&lt;a href=&#34;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&#34;&gt;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/a&gt;&#xA;    xmlns:mvc=&amp;ldquo;&lt;a href=&#34;http://www.springframework.org/schema/mvc&amp;quot;&#34;&gt;http://www.springframework.org/schema/mvc&amp;quot;&lt;/a&gt;&#xA;    xmlns:context=&amp;ldquo;&lt;a href=&#34;http://www.springframework.org/schema/context&amp;quot;&#34;&gt;http://www.springframework.org/schema/context&amp;quot;&lt;/a&gt;&#xA;    xmlns:jpa=&amp;ldquo;&lt;a href=&#34;http://www.springframework.org/schema/data/jpa&amp;quot;&#34;&gt;http://www.springframework.org/schema/data/jpa&amp;quot;&lt;/a&gt;&lt;br /&gt;&#xA;    xmlns:tx=&amp;ldquo;&lt;a href=&#34;http://www.springframework.org/schema/tx&amp;quot;&#34;&gt;http://www.springframework.org/schema/tx&amp;quot;&lt;/a&gt;&lt;br /&gt;&#xA;    xsi:schemaLocation=&amp;rdquo;&#xA;        &lt;a href=&#34;http://www.springframework.org/schema/mvc&#34;&gt;http://www.springframework.org/schema/mvc&lt;/a&gt; &lt;a href=&#34;http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd&#34;&gt;http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd&lt;/a&gt;&#xA;        &lt;a href=&#34;http://www.springframework.org/schema/beans&#34;&gt;http://www.springframework.org/schema/beans&lt;/a&gt; &lt;a href=&#34;http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&#34;&gt;http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&lt;/a&gt;&#xA;        &lt;a href=&#34;http://www.springframework.org/schema/context&#34;&gt;http://www.springframework.org/schema/context&lt;/a&gt; &lt;a href=&#34;http://www.springframework.org/schema/context/spring-context-3.0.xsd&#34;&gt;http://www.springframework.org/schema/context/spring-context-3.0.xsd&lt;/a&gt;&#xA;        &lt;a href=&#34;http://www.springframework.org/schema/data/jpa&#34;&gt;http://www.springframework.org/schema/data/jpa&lt;/a&gt; &lt;a href=&#34;http://www.springframework.org/schema/data/jpa/spring-jpa.xsd&#34;&gt;http://www.springframework.org/schema/data/jpa/spring-jpa.xsd&lt;/a&gt;&#xA;        &lt;a href=&#34;http://www.springframework.org/schema/tx&#34;&gt;http://www.springframework.org/schema/tx&lt;/a&gt;  &lt;a href=&#34;http://www.springframework.org/schema/tx/spring-tx-3.1.xsd&amp;quot;&amp;gt;&#34;&gt;http://www.springframework.org/schema/tx/spring-tx-3.1.xsd&amp;quot;&amp;gt;&lt;/a&gt;&#xA;    &amp;lt;!-- DispatcherServlet Context: defines this servlet&amp;rsquo;s request-processing infrastructure --&amp;gt;&#xA;    &amp;lt;!-- Scans within the base package of the application for @Components to configure as beans --&amp;gt;&#xA;    &amp;lt;!-- @Controller, @Service, @Configuration, etc. --&amp;gt;&#xA;    &amp;lt;context:component-scan base-package=&amp;ldquo;cn.mucang.offlineModule&amp;rdquo; /&amp;gt;&#xA;    &amp;lt;!-- Enables the Spring MVC @Controller programming model --&amp;gt;&#xA;    &amp;lt;mvc:annotation-driven /&amp;gt;&#xA;    &amp;lt;context:annotation-config /&amp;gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;amp;lt;bean class=&amp;quot;org.springframework.web.servlet.view.InternalResourceViewResolver&amp;quot;&amp;amp;gt;&#xA;    &amp;amp;lt;property name=&amp;quot;prefix&amp;quot;&amp;amp;gt;&#xA;        &amp;amp;lt;value&amp;amp;gt;/WEB-INF/views/&amp;amp;lt;/value&amp;amp;gt;&#xA;    &amp;amp;lt;/property&amp;amp;gt;&#xA;    &amp;amp;lt;property name=&amp;quot;suffix&amp;quot;&amp;amp;gt;&#xA;        &amp;amp;lt;value&amp;amp;gt;.jsp&amp;amp;lt;/value&amp;amp;gt;&#xA;    &amp;amp;lt;/property&amp;amp;gt;&#xA;&amp;amp;lt;/bean&amp;amp;gt;&#xA;&amp;amp;lt;!--  spring mvc end --&amp;amp;gt;&#xA;&#xA;&amp;amp;lt;!-- spring jpa start--&amp;amp;gt;&#xA;&#xA;&amp;amp;lt;bean id=&amp;quot;dataSource&amp;quot;  &#xA;    class=&amp;quot;org.apache.commons.dbcp.BasicDataSource&amp;quot;&amp;amp;gt;  &#xA;    &amp;amp;lt;property name=&amp;quot;username&amp;quot; value=&amp;quot;root&amp;quot; /&amp;amp;gt;  &#xA;    &amp;amp;lt;property name=&amp;quot;password&amp;quot; value=&amp;quot;000000&amp;quot; /&amp;amp;gt;  &#xA;    &amp;amp;lt;property name=&amp;quot;driverClassName&amp;quot; value=&amp;quot;com.mysql.jdbc.Driver&amp;quot; /&amp;amp;gt;  &#xA;    &amp;amp;lt;property name=&amp;quot;url&amp;quot; value=&amp;quot;jdbc:mysql://localhost/offline&amp;quot; /&amp;amp;gt;  &#xA;&amp;amp;lt;/bean&amp;amp;gt;  &#xA;&#xA;&#xA;&amp;amp;lt;bean id=&amp;quot;entityManagerFactory&amp;quot;  &#xA;    class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;amp;gt;  &#xA;&#xA;   &amp;amp;lt;!--  &amp;amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;coreJpa&amp;quot; /&amp;amp;gt; --&amp;amp;gt; &#xA;    &amp;amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource&amp;quot; /&amp;amp;gt;  &#xA;    &amp;amp;lt;property name=&amp;quot;jpaVendorAdapter&amp;quot;&amp;amp;gt;  &#xA;        &amp;amp;lt;bean class=&amp;quot;org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter&amp;quot;&amp;amp;gt;  &#xA;            &amp;amp;lt;property name=&amp;quot;database&amp;quot; value=&amp;quot;MYSQL&amp;quot;/&amp;amp;gt;  &#xA;            &amp;amp;lt;property name=&amp;quot;showSql&amp;quot; value=&amp;quot;true&amp;quot;/&amp;amp;gt;  &#xA;            &amp;amp;lt;property name=&amp;quot;generateDdl&amp;quot; value=&amp;quot;true&amp;quot; /&amp;amp;gt;&#xA;        &amp;amp;lt;/bean&amp;amp;gt;  &#xA;    &amp;amp;lt;/property&amp;amp;gt;  &#xA;    &amp;amp;lt;property name=&amp;quot;jpaProperties&amp;quot;&amp;amp;gt;  &#xA;        &amp;amp;lt;props&amp;amp;gt;  &#xA;            &amp;amp;lt;prop key=&amp;quot;hibernate.max_fetch_depth&amp;quot; &amp;amp;gt;3&amp;amp;lt;/prop&amp;amp;gt;&#xA;            &amp;amp;lt;!--自动输出schema创建DDL语句 --&amp;amp;gt;&#xA;            &amp;amp;lt;prop key=&amp;quot;hibernate.hbm2ddl.auto&amp;quot; &amp;amp;gt;update&amp;amp;lt;/prop&amp;amp;gt;    &#xA;            &amp;amp;lt;prop key=&amp;quot;hibernate.show_sql&amp;quot; &amp;amp;gt;true&amp;amp;lt;/prop&amp;amp;gt;&#xA;            &amp;amp;lt;prop key=&amp;quot;hibernate.format_sql&amp;quot; &amp;amp;gt;true&amp;amp;lt;/prop&amp;amp;gt;&#xA;            &amp;amp;lt;prop key=&amp;quot;javax.persistence.validation.mode&amp;quot; &amp;amp;gt;none &amp;amp;lt;/prop&amp;amp;gt; &#xA;        &amp;amp;lt;/props&amp;amp;gt;  &#xA;    &amp;amp;lt;/property&amp;amp;gt;  &#xA;&amp;amp;lt;/bean&amp;amp;gt;  &#xA;&#xA;&amp;amp;lt;jpa:repositories base-package=&amp;quot;cn.mucang.offlineModule.dao&amp;quot; query-lookup-strategy=&amp;quot;create-if-not-found&amp;quot; /&amp;amp;gt;  &#xA;&amp;amp;lt;!--  TX Manager --&amp;amp;gt;   &#xA;&amp;amp;lt;bean id=&amp;quot;transactionManager&amp;quot; class=&amp;quot;org.springframework.orm.jpa.JpaTransactionManager&amp;quot;&amp;amp;gt;  &#xA;    &amp;amp;lt;property name=&amp;quot;entityManagerFactory&amp;quot;  ref=&amp;quot;entityManagerFactory&amp;quot; /&amp;amp;gt;  &#xA;&amp;amp;lt;/bean&amp;amp;gt;  &#xA;&amp;amp;lt;tx:annotation-driven/&amp;amp;gt;  &#xA;&amp;amp;lt;!-- spring jpa end --&amp;amp;gt;&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这里主要配置了 mvc 注解方式和 视图的简化， 还有datasource 和 spring+jpa+hibernate的结合情况，最后添加注解事务控制&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这里我配置 hibernate.hbm2ddl.auto=create ，按说明应该是可以生成表结构的，但我测试时没有生成，控制台也没报错，ddl的sql都打印了，初步判断是事务引起的，这个框架中我没有测试事务，多表联合查询也研究，这些我想跟这个配置应该关系不大了，读者有需求去google吧&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    对了这里还用到了一个hibernate的配置文件 persistence.xml, 放在 src下 META-INF下，&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这里面什么内容也没有， 也有种方式是把数据源的配置放到这个文件中，感觉这样配置就太零散了，这个文件中就是空的，但是没有这个文件的话启动会报错&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    文件内容&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-xml linenums&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt;&#xA;&amp;lt;persistence xmlns=&#34;http://java.sun.com/xml/ns/persistence&#34; version=&#34;1.0&#34;&amp;gt;&#xA;    &amp;lt;persistence-unit name=&#34;Teste&#34;   transaction-type=&#34;RESOURCE_LOCAL&#34;&amp;gt;&#xA;        &amp;lt;provider&amp;gt;org.hibernate.ejb.HibernatePersistence&amp;lt;/provider&amp;gt;&#xA;    &amp;lt;/persistence-unit&amp;gt;&#xA;&amp;lt;/persistence&amp;gt;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    基本上所有的配置就完了，&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面挨个放出java代码就行&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    controllers下 HelloController.java文件&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;@Controller&#xA;public class HelloController {&#xA;    &#xA;    @Autowired&#xA;    private RuleDao ruleDao;&#xA;    &#xA;    @RequestMapping(&#34;/hello&#34;)&#xA;    public String hello(Model model){&#xA;        model.addAttribute(&#34;count&#34;, ruleDao.count());&#xA;        return &#34;hello&#34;;&#xA;    }&#xA;}&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    domains下 Rule.java 文件&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;@Entity&#xA;@Table(name=&#34;rule&#34;)&#xA;public class Rule {&#xA;&#xA;    @Id&#xA;    private Integer id;&#xA;    @Column(length=100,name=&#34;para_key&#34;)&#xA;    private String key;&#xA;    @Column(length=100,name=&#34;para_value&#34;)&#xA;    private String value;&#xA;    @Column(length=10)&#xA;    private String operator;&#xA;    @Column(name=&#34;empty_key&#34;)&#xA;    private Boolean emptyKey ;&#xA;    @Column(name=&#34;empty_value&#34;)&#xA;    private Boolean emptyValue;&#xA;    public Integer getId() {&#xA;        return id;&#xA;    }&#xA;    public void setId(Integer id) {&#xA;        this.id = id;&#xA;    }&#xA;    public String getKey() {&#xA;        return key;&#xA;    }&#xA;    public void setKey(String key) {&#xA;        this.key = key;&#xA;    }&#xA;    public String getValue() {&#xA;        return value;&#xA;    }&#xA;    public void setValue(String value) {&#xA;        this.value = value;&#xA;    }&#xA;    public String getOperator() {&#xA;        return operator;&#xA;    }&#xA;    public void setOperator(String operator) {&#xA;        this.operator = operator;&#xA;    }&#xA;    public Boolean getEmptyKey() {&#xA;        return emptyKey;&#xA;    }&#xA;    public void setEmptyKey(Boolean emptyKey) {&#xA;        this.emptyKey = emptyKey;&#xA;    }&#xA;    public Boolean getEmptyValue() {&#xA;        return emptyValue;&#xA;    }&#xA;    public void setEmptyValue(Boolean emptyValue) {&#xA;        this.emptyValue = emptyValue;&#xA;    }&#xA;    &#xA;}&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这个文件中没有@id的话也会报错，表中必须存在主键&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    dao中 RuleDao.java&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public interface RuleDao extends CrudRepository&amp;lt;Rule, Integer&amp;gt;{&#xA;&#xA;}&lt;/pre&gt;&#xA;这里只需要实现接口即可，简单查询按规则生成方法名就行，复杂的请用@Query或者@NamedQuery进行手动sq查询&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    到这里基本上就快完工了，再把页面写一下就ok了， 记得在数据库中添加rule表&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    映射的url为 /hello.do, 输入的视图为 WEB-INF/views/hello.jsp,内容如下：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-html linenums&#34;&gt;&amp;lt;%@ page language=&#34;java&#34; contentType=&#34;text/html; charset=UTF-8&#34;&#xA;    pageEncoding=&#34;UTF-8&#34;%&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;&amp;lt;head&amp;gt;&#xA;&amp;lt;title&amp;gt;Insert title here&amp;lt;/title&amp;gt;&#xA;&amp;lt;meta name=&#34;layout&#34; content=&#34;main&#34;&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&amp;lt;body&amp;gt;&#xA;   &amp;lt;h2&amp;gt;h3llo  ${count}&amp;lt;/h2&amp;gt;&#xA;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这里就用到了metasitemeshfilter 代码如下&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public class MetaSitemeshFilter extends ConfigurableSiteMeshFilter{&#xA;&#xA;    private final String DECORATOR_PREFIX = &#34;/WEB-INF/templates/&#34;;&#xA;    private final String DECORATOR_SUFFIX = &#34;.jsp&#34;;&#xA;&#xA;    @Override&#xA;    protected void applyCustomConfiguration(SiteMeshFilterBuilder builder) {&#xA;        super.applyCustomConfiguration(builder);&#xA;        builder.setCustomDecoratorSelector(new DecoratorSelector&amp;lt;WebAppContext&amp;gt;() {&#xA;&#xA;            @Override&#xA;            public String[] selectDecoratorPaths(Content content,&#xA;                    WebAppContext context) throws IOException {&#xA;                String decoratorPath = content.getExtractedProperties()&#xA;                        .getChild(&#34;meta&#34;).getChild(&#34;layout&#34;).getValue();&#xA;                if (decoratorPath == null || decoratorPath.trim().equals(&#34;&#34;))&#xA;                    return new String[] {};&#xA;                else&#xA;                    return new String[] { DECORATOR_PREFIX + decoratorPath.trim()&#xA;                            + DECORATOR_SUFFIX };&#xA;            }&#xA;        });&#xA;    }&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    可以看出把会取得jsp中的meta layout的值，然后做为布局文件进行渲染，&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    因此还要在WEB-INF/templates/下添加main.jsp，&lt;span&gt;这里就很简单了&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&#xA;&lt;pre class=&#34;prettyprint lang-js linenums&#34;&gt;&amp;lt;html&amp;gt;&#xA;&amp;lt;head&amp;gt;&#xA;&amp;lt;title &amp;gt;&amp;lt;sitemesh:write property=&#34;title&#34;/&amp;gt;- my company&amp;lt;/title&amp;gt;&#xA;&amp;lt;sitemesh:write property=&#34;head&#34;/&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&amp;lt;body&amp;gt;&#xA;&#xA;    &amp;lt;h2&amp;gt;top&amp;lt;/h2&amp;gt;&#xA;&amp;lt;div&amp;gt;&amp;lt;sitemesh:write property=&#34;body&#34;/&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&amp;lt;footer&amp;gt; bottom copyright&amp;lt;/footer&amp;gt;&#xA;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&lt;/pre&gt;&#xA;&lt;br /&gt;&#xA;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;br /&gt;&#xA;&lt;p&gt;&#xA;    然后访问 &amp;nbsp;项目打包放到tomcat中，启动tomcat即可。访问 127.0.0.1:port/appname/hello.do&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    然后就看到了 top hell2 0 bottom这些任容吧，如果有问题欢迎发邮件。 所有的代码就是这样了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>面试知识点</title>
      <link>https://helao.net/2012/344.html</link>
      <pubDate>2012-11-21 08:54:40 +0800</pubDate>
      <description>&lt;p&gt;###运算府###&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;^ 这个玩意是异或运算符&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;###数组和容器###&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Arrays 和 Colletions工具类&#xA;   Executor类可以生成任务容器&lt;/p&gt;&#xA;&#xA;&lt;p&gt;synchronized 保护方法和代码块,一般基于对象内置锁进行保护， static 则会以类为锁&#xA;显示lock ， Lock lock = new ReentrantLock() 可以显示lock和unlock&#xA;CountDownLatch 执行一次，等待多个任务&#xA;   CyclicBarrier  循环执行，等待多个任务&#xA;   Exchanger 交换两个线程拥有的变量&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;</description>
    </item>
    <item>
      <title>面试总结</title>
      <link>https://helao.net/2012/343.html</link>
      <pubDate>2012-11-17 02:19:30 +0800</pubDate>
      <description>&lt;p&gt;#常用技术点#&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Pattern  Matcher&lt;/li&gt;&#xA;&lt;li&gt;DateFormat&lt;/li&gt;&#xA;&lt;li&gt;Exception&lt;/li&gt;&#xA;&lt;li&gt;assert&lt;/li&gt;&#xA;&lt;li&gt;try cacht finally&lt;/li&gt;&#xA;&lt;li&gt;scanner&lt;/li&gt;&#xA;&lt;li&gt;treemap  treeset&lt;/li&gt;&#xA;&lt;li&gt;i++ + ++i&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>常用算法介绍</title>
      <link>https://helao.net/2012/342.html</link>
      <pubDate>2012-11-14 11:33:28 +0800</pubDate>
      <description>&lt;p&gt;#排序算法#&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;冒泡排序&lt;/li&gt;&#xA;&lt;li&gt;选择排序&lt;/li&gt;&#xA;&lt;li&gt;插入排序&lt;/li&gt;&#xA;&lt;li&gt;快速排序&lt;/li&gt;&#xA;&lt;li&gt;归并排序&lt;/li&gt;&#xA;&lt;li&gt;堆排序&lt;/li&gt;&#xA;&lt;li&gt;希尔排序&lt;/li&gt;&#xA;&lt;li&gt;基数排序&lt;/li&gt;&#xA;&lt;li&gt;红黑树（数据结构）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>何去何从</title>
      <link>https://helao.net/2012/341.html</link>
      <pubDate>2012-11-12 03:08:12 +0800</pubDate>
      <description>&lt;p&gt;又要离开公司了，为毛找个好公司就这么的不顺，不是倒闭就是公司内部斗争严重，这跟我有毛关系，我只是想找个工作拿我的工资，做技术上的突破，这明明是双赢的事，为毛就这么难呢，非要让我跟你们踏上一条破船待个两三年熬个老员工才能有技术方面的工作给做，要是老子是这种混日子的性格老子也不会来你们公司，上个公司我呆着岂不是更好，又清闲又能熬资历，你一个破私企算怎么回事啊。让我熬上两年什么都给耽误了，我不是你们浪费的资本没有这方面的工作干嘛找我们进来啊，一群骗子一群混蛋，把公司整理好了再来招人行吗，招进来了也不管，也不让做相关工作，扯淡吧。把我放在一个名称叫 核心开发组的组里，然后跟其他业务做一样的东西，然后还让我用两个月设计文档，然后看都不看一眼就费了，这tm的算什么事啊，跟技术老大一谈，才知道目前没有技术方面的工作，要是让我做的话其他老员工就不干了，得先排排资历才行，次奥。老子进来是开发，不想考虑你们内部的各种纷争，没工作安排就别给我乱许诺，骗人没有号瞎掺的&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>要走的路</title>
      <link>https://helao.net/2012/340.html</link>
      <pubDate>2012-11-12 02:50:00 +0800</pubDate>
      <description>&lt;p&gt;又一次的开始探索自己走的路了，半年前自己辛苦做的决定错了，这次错误的原因是受了面试时候的影响，还是人事专员的蛊惑，两方面都有吧，我误以为他们的项目会让自己有个更好的接受锻炼的机会，谁知道公司内部的各种弊端和各种斗争是我不想要的，也受不了整天CRUD的编码，口号是更好的了解项目。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;自己心中的岗位应该是负责攻克项目中技术难点，大数据或者分布式方面的系统开发也是很感兴趣的，目前要开始的工作是简历和并发、算法方面的知识，面试的时候能对自己加分不少，这次要找个大公司，管理制度至少会很稳定，技术积累也会很不错，这次的目标是大公司的核心平台开发组的工作。如果我不能胜任进一步的技术挑战的话那么我就只能向管理层面发展了，就这样继续努力吧&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>离开公司前的总结</title>
      <link>https://helao.net/2012/339.html</link>
      <pubDate>2012-11-08 04:16:38 +0800</pubDate>
      <description>&lt;p&gt;#面试#&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;刚来这这个公司的时候，技术总监飞哥面试的我，面试的问题也很有难度，是千万表*千万表*千万表的关联关系存储方面的问题，我之前正好对新浪的架构有所了解，就随口聊了一下，这方面我没有实际数据支撑，也就是没有实际项目经验，飞哥貌似对我还算满意，后来才明白是相对他们开发者的水平而言的。 为了能确保公司的技术水平我还特意询问了公司的技术实力，答曰有多年技术积累。后来又有搜狐畅游的offor我就给拒了，来到了这个公司，是因为人事专员跟我说飞哥很重视我希望能重点培养。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;#实习#&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我被安排到一个名叫核心组的公司，然后第一个工作是kvstore的简单接口实现，用封装好的mvc做些CRUD，很快完成了，正式上线后我也不知道效果，后来项目经理说上线效果不是很好&#xA;第二个工作是顾问前台，大致给了我一些文档，好多细节都没有明确，然后我就开始做，发现这依然是CRUD性质的工作，用到的SERVICE都是已经有的，调用一下就ok了，折腾了两个星期搞定了&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;#转正#&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;第三个工作是写设计文档，写了两个月的设计文档，然后项目经理说现在我们工作重心变了，这些任务作废，开始新的任务。&#xA;第四个工作是顾问人员后台和顾问后台，后者用的时间比较多，大概有3个星期多吧，前者开发只用了两天，改遗留的bug用了一个多星期&#xA;第五个工作我和项目经理谈过后给我安排了有技术难度的工作是kvstore简单修改，依然有大量代码对我屏蔽，到目前3天。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;#总结&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;不喜欢这种不信任的工作环境，这是创业公司必须要有主人公意识，每个通过审核的都是队员，所有的资源应该都是共享的，只有紧缺资源才需要进行调配，到了这里也逐渐发现公司的管理僵硬，管理模式提前进入大公司水平不是一件好事情，很多事考虑都很欠缺，没有充分考虑到员工的意见。 创业公司员工才是最大的财富，管理的核心应该以员工的角度来出发，毕竟只拥有一个不明确的未来。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;</description>
    </item>
    <item>
      <title>markdown test</title>
      <link>https://helao.net/2012/338.html</link>
      <pubDate>2012-11-05 01:00:56 +0800</pubDate>
      <description>&lt;p&gt;#markdown test#&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;main class{&#xA;    System.out.println(&amp;quot;markdown test&amp;quot;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;script src=&#34;&#34;&gt;test&lt;/script&gt;&#xA;</description>
    </item>
    <item>
      <title>APACHE 常用项目</title>
      <link>https://helao.net/2012/337.html</link>
      <pubDate>2012-10-29 01:36:41 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;ol&gt;&#xA;        &lt;li&gt;&#xA;            zookeeper，它是一个针对大型分布式系统的可靠协调系统，提供的功能包括：配置维护、名字服务、分布式同步、组服务等。ZooKeeper的目标就是封装好复杂易出错的关键服务，将简单易用的接口和性能高效、功能稳定的系统提供给用户&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            hadoop,&amp;nbsp;&amp;nbsp;是一个能够对大量数据进行&lt;a target=&#34;_blank&#34; href=&#34;http://baike.baidu.com/view/185352.htm&#34;&gt;分布式处理&lt;/a&gt;的&lt;a target=&#34;_blank&#34; href=&#34;http://baike.baidu.com/view/37.htm&#34;&gt;软件&lt;/a&gt;框架&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            HBase是一个分布式的、面向列的开源数据库&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            dbutils, 数据库操作框架，提供sql-》record的映射,pool,dbcp,logging,log4j&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            commons: beanutils,lang,collections,io,httpclient,math,codec,degister(xml-object)&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            velocity,poi,struts,tiles&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            ,ant,maven&lt;br /&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            solr,lucene,&lt;br /&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            ,tomcat,mima&lt;br /&gt;&#xA;        &lt;/li&gt;&#xA;    &lt;/ol&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>大数据处理和分布式计算，等稍后再搞</title>
      <link>https://helao.net/2012/306.html</link>
      <pubDate>2012-10-26 04:10:22 +0800</pubDate>
      <description>&lt;p&gt;现在先搞java的高并发和高性能结合算法和数据结构， 算法和linux内核学习 这两本书可以先买了，先看着就行&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>hadoop 学习笔记1</title>
      <link>https://helao.net/2012/305.html</link>
      <pubDate>2012-10-25 07:31:17 +0800</pubDate>
      <description>&lt;p&gt;&lt;h1&gt;&#xA;    hadoop 学习笔记1&#xA;&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        环境搭建&#xA;        &lt;ul&gt;&#xA;            &lt;li&gt;&#xA;                linux环境下需要有 jdk、ssh、rsync（集群环境下需要ssh进行数据交换）&#xA;            &lt;/li&gt;&#xA;            &lt;li&gt;&#xA;                下载hadoop-stable-0.22.0.tar.gz , 解压到 /home/tt/hadoop下&#xA;            &lt;/li&gt;&#xA;        &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;p&gt;&#xA;            运行&#xA;        &lt;/p&gt;&#xA;        &lt;ul&gt;&#xA;            &lt;li&gt;&#xA;                hadoop内有三种模式：local mode(单机模式),pseudo mode(伪集群模式，在单机部署整个系统),fully-distributed mode(完整集群模式-生产环境下用，集群规模可打上百台服务器)&#xA;            &lt;/li&gt;&#xA;            &lt;li&gt;&#xA;                local mode&#xA;                &lt;ol&gt;&#xA;                    &lt;li&gt;&#xA;                        cd /home/tt/hadoop&#xA;                    &lt;/li&gt;&#xA;                    &lt;li&gt;&#xA;                        mkdir input&#xA;                    &lt;/li&gt;&#xA;                    &lt;li&gt;&#xA;                        cp conf/&lt;em&gt;.xml input&lt;/em&gt;&#xA;                    &lt;/li&gt;&#xA;&lt;em&gt; &lt;/em&gt;&#xA;                    &lt;li&gt;&#xA;                        &lt;em&gt;bin/hadoop jar hadoop-examples.&lt;/em&gt;.jar grep input output &amp;lsquo;dfs[a-z]+&amp;rsquo;&#xA;                    &lt;/li&gt;&#xA;                    &lt;li&gt;&#xA;                        cat output/*&#xA;                    &lt;/li&gt;&#xA;                    &lt;li&gt;&#xA;                        这个例子是读取input中的文件内容，并进行grep操作，这也是最简单的例子了&#xA;                    &lt;/li&gt;&#xA;                    &lt;li&gt;&#xA;                        环境变量： JAVA_HOME,HADOOP_HOME,HADOOP_ROOT_LOGGER=DEBUG,console(输出详细的LOG)&#xA;                    &lt;/li&gt;&#xA;                    &lt;li&gt;&#xA;                        note: 最好使用 linux amd-64环境， 因为 hadoop下默认自带 linux-amd-64.so的本地库&#xA;                    &lt;/li&gt;&#xA;                    &lt;li&gt;&#xA;                        在 window下使用 cyg 的话 会有这个问题，找不到需要的 本地库.&#xA;                    &lt;/li&gt;&#xA;                &lt;/ol&gt;&#xA;            &lt;/li&gt;&#xA;            &lt;li&gt;&#xA;                pseudo mode&#xA;1.&#xA;            &lt;/li&gt;&#xA;            &lt;li&gt;&#xA;                fully-distributed&amp;nbsp;&#xA;            &lt;/li&gt;&#xA;        &lt;/ul&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;p&gt;&#xA;            &amp;nbsp; &amp;nbsp;&#xA;        &lt;/p&gt;&#xA;        &lt;p&gt;&#xA;            &lt;br /&gt;&#xA;        &lt;/p&gt;&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>沿着google的脚步前行</title>
      <link>https://helao.net/2012/300.html</link>
      <pubDate>2012-10-17 05:31:54 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;white-space:nowrap;&#34;&gt;google项目&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;可用的：1, &amp;nbsp;go , 编程语言&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2, &amp;nbsp;chrome , 浏览器，基于webkit意味着自己可以嵌入系统或者进行定制&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;3, &amp;nbsp;dart &amp;nbsp;, javascript的替代&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;4, &amp;nbsp;java-collections ，对jdk collection的补充和替代&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;5, &amp;nbsp;java-guava , java的常用类库&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;6, &amp;nbsp;big-query , 大数据分析 --- 服务可用&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;7, &amp;nbsp;map-reduce, 大数据分析实现逻辑，切分大任务，同时并发处理多个小任务&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;8, &amp;nbsp;levelDB, key-value 缓存&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;9, &amp;nbsp;snappy ,高速压缩库&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;10, webRTC, 开源实时通信项目,内嵌到浏览器中，可以使用js api实现音频和视频通信&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;11, V8 , js引擎， 可用于嵌入系统解析js&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;12, google charts, web服务，速度挺快的。&lt;a href=&#34;http://chart.apis.google.com/chart?cht=p3&amp;amp;chd=t:65,35&amp;amp;chs=150x100&#34;&gt;http://chart.apis.google.com/chart?cht=p3&amp;amp;chd=t:65,35&amp;amp;chs=150x100&lt;/a&gt;&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt; &amp;nbsp; &amp;nbsp;使用方式：1，封装方法直接产生url；2，通过wget抓取图片到服务器，然后再显示或下载&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;13, Google Eclipse Plugin, 可以方便使用google的一些工具和服务&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;14, Protocol Buffers 开源数据交换格式， 格式可读、支持复杂数据类型、解析和压缩效率高、生成的最终文本比xml小&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;15, Google Code Prettify, web代码高亮&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;未开源的&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;spanner ,全球级的数据库&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;可替换技术：&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;1,hadoop&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;2,hbase&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;3,hdfs&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;4,hive&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;5,redis,mongodb,memcache&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;&amp;nbsp; //6,mysql,sqlite&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;&amp;nbsp; //7,nodejs&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;&amp;nbsp; //8,python&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span class=&#34;Apple-tab-span&#34; style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;核心就是如何处理大并发和大数据，这必然得分而治之，于是分布式应运而生&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;经常写点小工具，技术是点点滴滴积累起来的&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>多少天没写自己的代码了，看来这个公司不适合自己</title>
      <link>https://helao.net/2012/299.html</link>
      <pubDate>2012-10-10 01:50:43 +0800</pubDate>
      <description>&lt;p&gt;她轻轻的动了动鼠标没留下一行文字&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>列这么多计划了</title>
      <link>https://helao.net/2012/298.html</link>
      <pubDate>2012-09-26 05:31:05 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    列了这么多计划就是没有继续执行&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    目前需要做的有： 将nor整理为nutz plugin完善文档，单词学习和复习工具，jetty和nginx的源码学习（需要写学习笔记）&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>mongo db学习笔记-1</title>
      <link>https://helao.net/2012/297.html</link>
      <pubDate>2012-09-20 09:59:27 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    学习了mongodb的基础语法，还有rockmongo是mongodb的web管理界面&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        save,insert可以插入一条document&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        find({}).skip(n).limit(n).sort（{c:v}） 可以对查询结果进行分页和排序&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &amp;nbsp;查询条件支持 $lt,$gt,$lte,$gte,$in,$regex,$mod,$elementMatch ,$or&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        findOne({}) 一条&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        remove({...})删除，支持条件删除&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        update功能使用 findOne()和save()来实现&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        也可以使用&#xA;&lt;pre class=&#34;code-javascript&#34;&gt;job = db.jobs.findAndModify({&#xA;     query: {inprogress: &lt;span style=&#34;color:#000091;background-color:inherit;&#34;&gt;false&lt;/span&gt;, name: &#34;Biz report&#34;},&#xA;     sort : {priority:-1},&#xA;     update: {$set: {inprogress: &lt;span style=&#34;color:#000091;background-color:inherit;&#34;&gt;true&lt;/span&gt;, started: &lt;span style=&#34;color:#000091;background-color:inherit;&#34;&gt;new&lt;/span&gt; Date()}}, &lt;span style=&#34;color:#000091;background-color:inherit;&#34;&gt;new&lt;/span&gt;: &lt;span style=&#34;color:#000091;background-color:inherit;&#34;&gt;true&lt;/span&gt; });&lt;/pre&gt;&#xA;&lt;span&gt;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        ,ensureIndex() ，dropIndex() 和dropIndexs()可以添加和删除索引，索引的规则多，用处很大&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>每周看一本书</title>
      <link>https://helao.net/2012/296.html</link>
      <pubDate>2012-09-20 09:33:02 +0800</pubDate>
      <description>&lt;p&gt;她轻轻的动了动鼠标没留下一行文字&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>预言歌</title>
      <link>https://helao.net/2012/295.html</link>
      <pubDate>2012-09-19 05:41:53 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;span style=&#34;font-family:宋体, PMingLiu, SimSun, arial, helvetica, clean, sans-serif;font-size:medium;line-height:32px;background-color:#FFFFFF;&#34;&gt;在中国许多朝代都留下了传世预言，如周朝的《乾坤万年歌》，三国时诸葛亮的《马前课》，唐代李淳风的《推背图》，宋代邵雍的《梅花诗》，明代刘伯温的《烧饼歌》等，都有着对历史惊人、准确的预测，包括提及人类此时将有的大劫之忧。纵观这些朝代预言，年轮的运转，世事的变局，朝代的更迭似乎都是有道可循，冥冥之中有定数，五千年华夏文明的渊源，是否深藏着贯穿始终、密而不宣的真机……。&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;font-family:宋体, PMingLiu, SimSun, arial, helvetica, clean, sans-serif;font-size:medium;line-height:32px;background-color:#FFFFFF;&#34;&gt;以后可以多看一些传统文学，英文也要学&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>j2ee系统性能问题的总结及相应解决办法</title>
      <link>https://helao.net/2012/294.html</link>
      <pubDate>2012-09-14 09:19:56 +0800</pubDate>
      <description>&lt;p style=&#34;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;font-size:14px;background-color:#FFFFFF;&#34;&gt;&#xA;    接下来他列举了在过去十年中所遇到的Java EE性能问题的原因，并做出了一些高层次的建议。十大原因包括：&#xA;&lt;/p&gt;&#xA;&lt;ol style=&#34;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;font-size:14px;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;li&gt;&#xA;        缺少合适的容量计划。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        Java EE中间件环境规格说明不充分。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        过度的Java虚拟机垃圾回收。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        与外部系统过多或者很差的集成。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        缺少合适的数据库SQL调优和容量计划。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        对应用程序特定的性能问题。&#xA;        &lt;ol&gt;&#xA;            &lt;li&gt;&#xA;                线程安全代码的问题。&#xA;            &lt;/li&gt;&#xA;            &lt;li&gt;&#xA;                缺少通信API的超时处理。&#xA;            &lt;/li&gt;&#xA;            &lt;li&gt;&#xA;                I/O、JDBC或者关系型持久API资源管理的问题。&#xA;            &lt;/li&gt;&#xA;            &lt;li&gt;&#xA;                缺少合适的数据缓存。&#xA;            &lt;/li&gt;&#xA;            &lt;li&gt;&#xA;                过度的数据缓存。&#xA;            &lt;/li&gt;&#xA;            &lt;li&gt;&#xA;                过度的日志记录。&#xA;            &lt;/li&gt;&#xA;        &lt;/ol&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        Java EE中间件调优问题。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        主动监控不充分。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        通用基础设备上硬件饱和。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        网络延迟问题。&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p style=&#34;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;font-size:14px;background-color:#FFFFFF;&#34;&gt;&#xA;    针对这些问题，P-H做出的建议包括：&#xA;&lt;/p&gt;&#xA;&lt;ul style=&#34;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;font-size:14px;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;li&gt;&#xA;        项目团队应该花足够的时间，为Java EE生产环境创建合适的运营模型。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        找到Java EE中间件规格的平衡点，像业务和运维团队提供足够的灵活性，以应对运行中断的情况。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        避免在32位的JVM中部署过多Java EE应用程序。中间件的设计可以处理多个应用程序，但是JVM可能不行。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        在需要的时候选择64位JVM替换32位的JVM，但是要有合适的容量计划和性能测试，以确保硬件能够支持它。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        确保你的监控程序对JVM的垃圾回收有很好的理解。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        要记住，垃圾回收相关的问题可能不会再开发或者功能测试阶段发现。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        合适的容量计划包括负载和性能测试，在调优数据库环境的时候非常重要，它能够在SQL级别找到问题。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        如果你使用Oracle数据库，要确保DBA团队对AWR报告做出了评审。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        利用JVM Thread Dump和AWR报告找到运行缓慢的SQL，并使用选定的监控工具来做同样的工作。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        确保花费足够时间来增强数据库环境的运行能力（磁盘空间、数据文件、REDO日志、表空间等等），还要做出合适的监控和警告。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        评审你当前的Java EE环境监控能力，并找到提升的机会。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        你的监控解决方案应该尽可能覆盖端到端的环境，包括主动的警告。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        监控解决方案应该与容量计划过程保持一致。&#xA;    &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;font-size:14px;line-height:21px;&#34;&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;font-size:14px;line-height:21px;&#34;&gt;自己的最小团队分工为 ： &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;ul&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-size:14px;line-height:21px;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;font-size:14px;line-height:21px;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;&#34;&gt;运营1-2 负责生产和测试环境配置调优，系统监控，硬件性能监控和系统性能监控（触发警戒线后报警）， 还有崩溃后自动回滚机制（报警）， 当机报警等&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-size:14px;line-height:21px;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;font-size:14px;line-height:21px;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;&#34;&gt;dba 1， 负责数据库搭建调优，及日常开发中sql的优化， 满足当前容量&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-size:14px;line-height:21px;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;&#34;&gt;&amp;nbsp;开发2, &amp;nbsp;1java, 1 python/nodejs, 负责前后台，&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-size:14px;line-height:21px;font-family:Lucida, &#39;Lucida Grande&#39;, Tahoma, sans-serif;&#34;&gt;ui +产品经理&amp;nbsp;1， 页面要简单，并且稳定，产品不断优化。 后期再拆开&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;font-size:14px;line-height:21px;&#34;&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring mvc 提升</title>
      <link>https://helao.net/2012/293.html</link>
      <pubDate>2012-09-13 09:43:29 +0800</pubDate>
      <description>&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    上一篇文章简单介绍了一下springmvc的使用情况，这里对mvc做进一步的改进&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    1， recourses&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    上一篇中 home方法直接返回了 &#34;WEB-INF/views/home.jsp&#34;;&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    这里可以看到WEB-INF/views和jsp这些都是很多余只有home是真正可变量&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    所以我们希望能找到方法可以配置 这些即可，不用在多写&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    spring中有视图处理 是该接口&amp;nbsp;&lt;span style=&#34;color:#666666;font-family:monospace;line-height:20px;background-color:#EEEEEE;&#34;&gt;&lt;span style=&#34;background-color:#FFFFFF;color:#000000;&#34;&gt;ViewResolver,而默认的生成的处理类是：InternalResourceViewResolver&lt;/span&gt;&lt;span style=&#34;color:#000000;font-family:Arial, sans-serif;line-height:20px;background-color:#FFFFFF;&#34;&gt;&amp;nbsp;，仅仅生成了一个JSTLView， 而这个Resolver是可以定制的&amp;nbsp;&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:20px;&#34;&gt;我们可以这样：&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:20px;&#34;&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;package xyz.sample.baremvc;&#xA;&#xA;import org.springframework.context.annotation.Bean;&#xA;import org.springframework.context.annotation.Configuration;&#xA;import org.springframework.web.servlet.ViewResolver;&#xA;import org.springframework.web.servlet.view.InternalResourceViewResolver;&#xA;&#xA;@Configuration&#xA;public class AppConfig {&#xA;&#xA;    // Resolve logical view names to .jsp resources in the /WEB-INF/views directory&#xA;    @Bean&#xA;    ViewResolver viewResolver() {&#xA;        InternalResourceViewResolver resolver = new InternalResourceViewResolver();&#xA;        resolver.setPrefix(&#34;WEB-INF/views/&#34;);&#xA;        resolver.setSuffix(&#34;.jsp&#34;);&#xA;        return resolver;&#xA;    }&#xA;}&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:20px;&#34;&gt;也可以这样：&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:20px;&#34;&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-xml linenums&#34;&gt;&amp;lt;!-- Resolve logical view names to .jsp resources in the /WEB-INF/views directory --&amp;gt;&#xA;&amp;lt;bean class=&#34;org.springframework.web.servlet.view.InternalResourceViewResolver&#34;&amp;gt;&#xA;    &amp;lt;property name=&#34;prefix&#34; value=&#34;/WEB-INF/views/&#34; /&amp;gt;&#xA;    &amp;lt;property name=&#34;suffix&#34; value=&#34;.jsp&#34; /&amp;gt;&#xA;&amp;lt;/bean&amp;gt;&#xA;&lt;/pre&gt;&#xA;&lt;br /&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:20px;&#34;&gt;是不是简单些了，下面再复杂一点&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:20px;&#34;&gt;2， 方法拦截和参数注入&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:20px;&#34;&gt;我们可以指定 action 只可以被 get访问, 也可以直接注入要接收的参数&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:20px;&#34;&gt;如下：&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:20px;&#34;&gt; &lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;package xyz.sample.baremvc;&#xA;&#xA;import java.util.Comparator;&#xA;&#xA;import org.springframework.beans.factory.annotation.Autowired;&#xA;import org.springframework.stereotype.Controller;&#xA;import org.springframework.ui.Model;&#xA;import org.springframework.web.bind.annotation.RequestMapping;&#xA;import org.springframework.web.bind.annotation.RequestMethod;&#xA;import org.springframework.web.bind.annotation.RequestParam;&#xA;&#xA;/**&#xA; * Handles requests for the application home page.&#xA; */&#xA;@Controller&#xA;public class HomeController {&#xA;&#xA;    @Autowired&#xA;    Comparator&amp;lt;String&amp;gt; comparator;&#xA;&#xA;    @RequestMapping(value = &#34;/&#34;)&#xA;    public String home() {&#xA;        System.out.println(&#34;HomeController: Passing through...&#34;);&#xA;        return &#34;home&#34;;&#xA;    }&#xA;&#xA;    @RequestMapping(value = &#34;/compare&#34;, method = RequestMethod.GET)&#xA;    public String compare(@RequestParam(&#34;input1&#34;) String input1,&#xA;            @RequestParam(&#34;input2&#34;) String input2, Model model) {&#xA;&#xA;        int result = comparator.compare(input1, input2);&#xA;        String inEnglish = (result &amp;lt; 0) ? &#34;less than&#34; : (result &amp;gt; 0 ? &#34;greater than&#34; : &#34;equal to&#34;);&#xA;&#xA;        String output = &#34;According to our Comparator, &#39;&#34; + input1 + &#34;&#39; is &#34; + inEnglish + &#34;&#39;&#34; + input2 + &#34;&#39;&#34;;&#xA;&#xA;        model.addAttribute(&#34;output&#34;, output);&#xA;        return &#34;compareResult&#34;;&#xA;    }&#xA;}&#xA;&lt;/pre&gt;&#xA;&lt;br /&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;font-size:14px;&#34;&gt;&lt;span style=&#34;color:#000000;&#34;&gt;WEB-INF/views/compareResult.jsp&amp;nbsp;&lt;br /&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-html linenums&#34;&gt;&amp;lt;%@ taglib uri=&#34;http://java.sun.com/jsp/jstl/core&#34; prefix=&#34;c&#34; %&amp;gt;&#xA;&amp;lt;%@ page session=&#34;false&#34; %&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;    &amp;lt;head&amp;gt;&#xA;        &amp;lt;title&amp;gt;Result&amp;lt;/title&amp;gt;&#xA;    &amp;lt;/head&amp;gt;&#xA;    &amp;lt;body&amp;gt;&#xA;        &amp;lt;h1&amp;gt;&amp;lt;c:out value=&#34;${output}&#34;&amp;gt;&amp;lt;/c:out&amp;gt;&amp;lt;/h1&amp;gt;&#xA;    &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    要注入的service代码&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;package xyz.sample.baremvc;&#xA;&#xA;import java.util.Comparator;&#xA;import org.springframework.stereotype.Component;&#xA;&#xA;@Service&#xA;public class CaseInsensitiveComparator implements Comparator&amp;lt;String&amp;gt; {&#xA;    public int compare(String s1, String s2) {&#xA;        assert s1 != null &amp;amp;&amp;amp; s2 != null;&#xA;        return String.CASE_INSENSITIVE_ORDER.compare(s1, s2);&#xA;    }&#xA;}&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    至此，一个大致的mvc框架是就完工了， 基本零配置，比spring+struts简单多了吧&amp;nbsp;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring mvc 使用教程</title>
      <link>https://helao.net/2012/292.html</link>
      <pubDate>2012-09-13 09:17:50 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    spring mvc 教程&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1， mvc的原理图&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;img src=&#34;http://blog.springsource.com/wp-content/uploads/2010/11/mvc.png&#34; /&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2，web.xml配置&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-xml linenums&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt;&#xA;&amp;lt;web-app version=&#34;2.5&#34; xmlns=&#34;http://java.sun.com/xml/ns/javaee&#34;&#xA;    xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&#xA;    xsi:schemaLocation=&#34;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&#34;&amp;gt;&#xA;&#xA;    &amp;lt;!-- Processes application requests --&amp;gt;&#xA;    &amp;lt;servlet&amp;gt;&#xA;        &amp;lt;servlet-name&amp;gt;appServlet&amp;lt;/servlet-name&amp;gt;&#xA;        &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;&#xA;        &amp;lt;init-param&amp;gt;&#xA;            &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;&#xA;            &amp;lt;param-value&amp;gt;/WEB-INF/spring/appServlet/servlet-context.xml&amp;lt;/param-value&amp;gt;&#xA;        &amp;lt;/init-param&amp;gt;&#xA;        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;&#xA;    &amp;lt;/servlet&amp;gt;        &#xA;&#xA;    &amp;lt;servlet-mapping&amp;gt;&#xA;        &amp;lt;servlet-name&amp;gt;appServlet&amp;lt;/servlet-name&amp;gt;&#xA;        &amp;lt;url-pattern&amp;gt;/&amp;lt;/url-pattern&amp;gt;&#xA;    &amp;lt;/servlet-mapping&amp;gt;&#xA;&amp;lt;/web-app&amp;gt;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    3， servlet-context.xml&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-xml linenums&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt;&#xA;&amp;lt;beans xmlns=&#34;http://www.springframework.org/schema/beans&#34;&#xA;    xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&#xA;    xmlns:mvc=&#34;http://www.springframework.org/schema/mvc&#34;&#xA;    xmlns:context=&#34;http://www.springframework.org/schema/context&#34;&#xA;    xsi:schemaLocation=&#34;&#xA;        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd&#xA;        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&#xA;        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd&#34;&amp;gt;&#xA;&#xA;    &amp;lt;!-- DispatcherServlet Context: defines this servlet&#39;s request-processing infrastructure --&amp;gt;&#xA;&#xA;    &amp;lt;!-- Scans within the base package of the application for @Components to configure as beans --&amp;gt;&#xA;    &amp;lt;!-- @Controller, @Service, @Configuration, etc. --&amp;gt;&#xA;    &amp;lt;context:component-scan base-package=&#34;xyz.sample.baremvc&#34; /&amp;gt;&#xA;&#xA;    &amp;lt;!-- Enables the Spring MVC @Controller programming model --&amp;gt;&#xA;    &amp;lt;mvc:annotation-driven /&amp;gt;&#xA;&#xA;&amp;lt;/beans&amp;gt;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    4, controller 和 jsp&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;package xyz.sample.baremvc;&#xA;&#xA;import org.springframework.stereotype.Controller;&#xA;import org.springframework.web.bind.annotation.RequestMapping;&#xA;&#xA;/**&#xA; * Handles requests for the application home page.&#xA; */&#xA;@Controller&#xA;public class HomeController {&#xA;&#xA;    @RequestMapping(value = &#34;/&#34;)&#xA;    public String home() {&#xA;        System.out.println(&#34;HomeController: Passing through...&#34;);&#xA;        return &#34;WEB-INF/views/home.jsp&#34;;&#xA;    }&#xA;}&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-html linenums&#34;&gt;&amp;lt;%@ taglib uri=&#34;http://java.sun.com/jsp/jstl/core&#34; prefix=&#34;c&#34; %&amp;gt;&#xA;&amp;lt;%@ page session=&#34;false&#34; %&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;    &amp;lt;head&amp;gt;&#xA;        &amp;lt;title&amp;gt;Home&amp;lt;/title&amp;gt;&#xA;    &amp;lt;/head&amp;gt;&#xA;    &amp;lt;body&amp;gt;&#xA;        &amp;lt;h1&amp;gt;Hello world!&amp;lt;/h1&amp;gt;&#xA;    &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    好了，可以直接在浏览器查看结果了&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>大概闲了2个星期了</title>
      <link>https://helao.net/2012/291.html</link>
      <pubDate>2012-09-13 08:36:22 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;该考虑做点事了，目前积累的事情有：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;1，ibayle系统&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;2，nor，直接改造为nutz插件，至少不能和nutz的原有代码有任何冲突现象&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;3，ttcms ， 改造为 插件模式的方便系统改造升级&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;4，学习spring ， spring data，freemarker&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;5，osgi ,插件模型，需要研究一下&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;6，mongodb,redis,memcache的使用&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;7，lisp、python、nodejs的使用&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;8， jdk的源码研究&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1,ibayle和nor 可以在这星期完成， 并停止维护，多给nutz提交pull request&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2,spring ,springdata ,freemarker , -mongodb,redis,memcache的使用&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    3，osgi 的研究和 ttcms的改造&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    4,list ,python,nodejs ，jdk从源码层次提升自己&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    以后研究什么只少要为其开发一个插件，并发布出去&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    分布式的东西有机会再研究，还是先把基础打牢&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还要打造自己的开发环境，工欲善其事必先利其器，一个顺手的开发环境必不可少&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    环境要求： 1，有工程管理 2，编码有高亮 3，可进行关键字提示 4，可查看源码 5，运行外部命令方便（启动服务器、调试、查看日志等）&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    可用的软件列表： 1，vim+emacs+lisp（环境和插件） ，及其平台下的各种插件，需要整合明白,(eclipse)&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2，git + gerrit + hudson , 可直接部署到生产环境和测试环境&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3，快速开发框架的熟悉，nutz, spring(ioc,mvc,data,jms,jmx等)，nodejs-express, python-djingo&amp;nbsp;,ra&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4，存储 有mysql , oracle , h2 , mongodb,redis,memcache, hive, hadoop,hbase&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5，服务器，&amp;nbsp;jetty, tomcat,nginx,resin,varnish等， 还有服务器监控软件&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;6， 还需配置openvpn,dns，email等，这些既可以使用即可&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;7, 项目管理采用 maven,ant, nexus,ivy,freemind&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>java枚举类型的使用，查一下</title>
      <link>https://helao.net/2012/290.html</link>
      <pubDate>2012-09-12 02:56:35 +0800</pubDate>
      <description>&lt;p&gt;她轻轻的动了动鼠标没留下一行文字&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>分享一首诗</title>
      <link>https://helao.net/2012/289.html</link>
      <pubDate>2012-09-12 02:21:03 +0800</pubDate>
      <description>&lt;pre class=&#34;reply-text mb10&#34;&gt;《男儿行》 &#xA;男儿当杀人，杀人不留情。 &#xA;千秋不朽业，尽在杀人中。 &#xA;昔有豪男儿，义气重然诺。 &#xA;睚眦即杀人，身比鸿毛轻。 &#xA;又有雄与霸，杀人乱如麻。 &#xA;  &#xA;君不见， &#xA;竖儒蜂起壮士死，神州从此夸仁义。 &#xA;一朝虏夷乱中原，士子逐奔儒民泣。 &#xA;  &#xA;三步杀一人，心停手不停。 &#xA;血流万里浪，尸枕千寻山。 &#xA;壮士征战罢，倦枕敌尸眠。 &#xA;梦中犹杀人，笑魇映春晖。 &#xA;女儿莫相问，男儿凶何其？ &#xA;古来仁德专害人，道义从来无一真。 &#xA;  &#xA;君不见， &#xA;狮虎猎物获威名，可怜麋鹿有谁怜？ &#xA;世间从来强食弱，纵使有理也枉然。 &#xA;  &#xA;君休问，男儿自有男儿行。 &#xA;男儿行，当暴戾。 &#xA;事与仁，两不立。 &#xA;  &#xA;男儿事在杀人场，胆似熊罢目如狼。 &#xA;生若为男即杀人，不教男躯裹女心。 &#xA;男儿从来不恤身，纵死敌手笑相承。 &#xA;仇场战场一百处，处处愿与野草青。 &#xA;  &#xA;男儿莫战栗，有歌与君听。 &#xA;杀一是为罪，屠万是为雄。 &#xA;屠得九百万，即为雄中雄。 &#xA;  &#xA;雄中雄，道不同。 &#xA;看破千年仁义名，但是今生逞雄风。 &#xA;美名不爱爱恶名，杀人百万心不惩。 &#xA;宁叫万人切齿恨，不教无有骂我人。 &#xA;放眼世界五千年，何处英雄不杀人。&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>今天看到了三星26寸平板</title>
      <link>https://helao.net/2012/288.html</link>
      <pubDate>2012-09-07 05:51:57 +0800</pubDate>
      <description>&lt;p&gt;详细了解了一下，发现实际使用还是挺麻烦的，最好就是再配一块小的可触摸屏幕，就是为了控制更好一些。还可以把触摸控制器开放接口与屏幕分离，这样就能实现控制器的无缝切换了，这样岂不是更好&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>vps该续费了,继续保持这个规模就行</title>
      <link>https://helao.net/2012/287.html</link>
      <pubDate>2012-09-03 08:44:39 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    向交行中打入点钱，然后通过paypal付款&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    然后也该进行ibayle的开发完成&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>java class hotswap</title>
      <link>https://helao.net/2012/286.html</link>
      <pubDate>2012-08-24 10:06:57 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    习惯了动态语言的代码热替换，一直想为java添加一个这样的特性，一直以为class的热替换是通过新建classloader完成的，所以一直在顺着这个思路在研究，我先研究了jetty的classloader机制，并没有发现什么特殊的地方，仅仅是对urlclassloader做了一个简单的拓展。 而且我创建了几个classloader均没有实现这个效果，我在无意中发现jetty在debug模式下会进行hotswap, 而run模式下则不会，我开始怀疑了，顺便实验了一下tomcat，发现tomcat也是在debug下可以进行hotswap, 因此我认为这可能是java自带的类重新加载。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    通过jvisualvm观察java的运行参数，发现了agentlib参数&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    经过一番实验终于发现了java类hotswap的原理, 首先使用debug模式启动为jdwp服务器，然后使用jdb连接后，通过命令进行类redefine，才能实现hotswap.而eclipse实现方式是采用debug模式启动，然后由自己封装的debugger进行class热替换. &amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    总结一下要是自己想使用 hotswap，可以直接采用eclipse的debug模式，如果使用text，就自己封装一个jdb，去监听文件修改事件然后发送命令即可&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有一种设想，是采用自定义classloader, 1,重新define，2,重新new classloader&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>jetty实现代码热替换</title>
      <link>https://helao.net/2012/285.html</link>
      <pubDate>2012-08-22 01:40:18 +0800</pubDate>
      <description>&lt;p&gt;跟了jetty的webappContext的加载过程，发现初始化时对webappClassLoader进行了初始化，因此在运行过程中直接对 webappContext.setClassLoader是行不通的。所以可以自己实现一个classLoaderWrap,然后使用双亲委派的思想对webapp/lib和 webapp/classes分别进行加载,设置一守护线程，当classes发生变化时就重新设置webapp/classes下的loader。这样应该就可以实现了，应该还会遇到解析jar的问题，具体有问题再参考jetty的实现过程&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>好长时间没有记录东西了，正好把昨天的梦说说</title>
      <link>https://helao.net/2012/284.html</link>
      <pubDate>2012-08-16 07:34:28 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    昨天又梦到初恋了，陪我玩了一会就走了，她消失的时候我没有伤心，还苦笑了一下，好像能理解她的所做所为了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    今天开始要做 背单词的设计了&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Nutz 文档- scoffold功能</title>
      <link>https://helao.net/2012/283.html</link>
      <pubDate>2012-07-31 10:18:53 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    scoffold中文意思是脚手架，方便工作用的工具&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    直接上例子吧：&#xA;&lt;/p&gt;&#xA;&lt;span&gt;&lt;/span&gt; &#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        &amp;nbsp;使用ncode create-project test ,创建新项目&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &amp;nbsp;cd test;&amp;nbsp;ncode create-domain hello 创建 domain&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &amp;nbsp;修改src/domains/Hello.java 文件， 添加 name,age 属性,并添加set，get方法&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &amp;nbsp;在recourses/local/default.properties 下添加&amp;nbsp;&#xA;&lt;pre class=&#34;prettyprint linenums&#34;&gt;Hello.listName=列表&#xA;Hello.id=编号&#xA;Hello.name=姓名&#xA;Hello.age=年龄&lt;/pre&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        ncode create-controller hello ,然后将项目放到tomcat下运行&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        访问 127.0.0.1:port/test/hello/list 是不是看到页面已经生成了&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>如何学好外语</title>
      <link>https://helao.net/2012/282.html</link>
      <pubDate>2012-07-31 06:03:42 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    学外语重要的是词汇和语法，虽然语法有公式、词汇有各种相同之处，但是多说多练才是王道，想想我们小时候没人知道什么是语法，现在依然说的很好。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    词汇有发音-词义-词性-拼写几个方面，这是一切的基础&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    语法就几个公式，剩下的都是约定俗成的东西了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    从上面看学习外语应该从词汇开始，辅以日常用语，多说多练才能快速的掌握。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    背单词的方式应该是边学边用，而学习过程则可能会遇到更多的陌生词汇，应该专门分出一个个人词库，其他的有标准词库， 个人词库用于汇集自己平时用到的难点词汇，标准词汇来记录自己平时的学习任务&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    日常用语库： 分专业库和个人库，个人库记录自己平时遇到的好句子，专业库为了促进自己学习&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    等以上个人库等量上来之后，便进行汇总。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>先说项目管理</title>
      <link>https://helao.net/2012/281.html</link>
      <pubDate>2012-07-31 02:23:10 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    工作中每家公司的项目管理方式都不一样，现在基本上都是svn+eclipse比较流行，构建工具就是ant或者maven。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    如果是单项目，那么ant和maven差别不是很大，如果是多项目的话那么就很明显了，在maven都可以将依赖包直接已映射为项目依赖，这样项目的修改直接就可以体现出来。不过如果依赖jar和原项目冲突的话，那么就只能关闭项目映射，这样就debug时就无法提供源码查看了，如果依赖的jar同时包含源码包的话那么就无所谓了.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    等回去我也搭建一个maven服务器，能控制自己的依赖包的版本，另外打包比较方便&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    我理想中的&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>nor 1.b.44.6 开发计划</title>
      <link>https://helao.net/2012/280.html</link>
      <pubDate>2012-07-30 09:48:04 +0800</pubDate>
      <description>&lt;p&gt;&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        run-app&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        war&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        ncode支持file和classpath两种寻址，方便定制&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        将结构改为 proc, develop,test三种模式,&amp;nbsp;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        properties的结构化，&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        domain to database &amp;nbsp;分为update，drop&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        项目依赖管理，采用ant或者采用maven等， 有必要就新完成一个&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;    全部分解为插件了， 这样能方便引用&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    已经拆分成nutz plugin，以后分别维护&#xA;&lt;/p&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>说说这几天遇到的技术难点</title>
      <link>https://helao.net/2012/279.html</link>
      <pubDate>2012-07-30 01:44:07 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    从6月4日就开始计划实现scoffold功能，知道现在才完成第一版， 加上代码自动生成基本上就可以快速实现一些原型了。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    之所以用了这么长时间主要是遇到了好多难点，加上有时候晚上心里烦躁就没动手。 好歹坚持下来了，终成正果。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    我遇到的第一个技术点是 class在运行时动态增强， 主要就是为controller动态添加上crud方法。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    我采用了 asm，asm我是没有接触过，选择的理由是： asm性能高，对class code的要求为中，只需要大致了解class结构和命令即可。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1，我从官网下载了asm的文档开始看，没找中文的。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2,对class的整体结构还是挺简单的，但是具体的method中的命令有点复杂了，E文没看明白，一度陷入僵局，后来发现了一个神器 asmifier 类， asm自带的一个工具类，可以将指定的class 翻译为 asm编码，正好满足我的要求。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    3, asm完成之后，遇到了classloader的问题，表现为 junit 测试正常，在webapp下出问题. 在兽兽提醒下，我对classloader的一些疑问做了一些测试，然后这个问题就解决了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    4，freemarker 的templateloader， 我需要对template进行二次解析，我采用了自定义temploader的方式，当时不能上网直接反编freemarker参考 其他templateloader做的，还对freemarker的工作流程有了一定的了解&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    感悟：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;1,学习新知识时尽量从官网的教程开始看，至少要完整的看一遍,对技术的整体有个了解，然后做了一些例子，有工具类的尽量多注意工具类&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;2, 对代码要进行 junit测试完成后，在系统测试&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;3，系统上有问题，junit没问题，先看log，然后完善junit，比较环境的差异，针对性测试。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;4，尽量多看源码，从源码中去学习这个框架该如何入手&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>webapp下 ClassLoader 加载机制</title>
      <link>https://helao.net/2012/278.html</link>
      <pubDate>2012-07-27 07:33:15 +0800</pubDate>
      <description>&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:Verdana, Helvetica, Arial;background-color:#FFFFFF;&#34;&gt;先介绍下基本概念：&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:Verdana, Helvetica, Arial;background-color:#FFFFFF;&#34;&gt;类装载器是用来把类(class)装载进JVM的。&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:Verdana, Helvetica, Arial;background-color:#FFFFFF;&#34;&gt;JVM规范定义了两种类型的类装载器：&lt;/span&gt;启动内装载器(bootstrap)和用户自定义装载器(user-defined class loader)&lt;span style=&#34;color:#303030;font-family:Verdana, Helvetica, Arial;background-color:#FFFFFF;&#34;&gt;。&amp;nbsp;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:Verdana, Helvetica, Arial;background-color:#FFFFFF;&#34;&gt;&lt;br /&gt;&#xA;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    JVM在运行时会产生三个ClassLoader:Bootstrap&amp;nbsp;ClassLoader、Extension&amp;nbsp;ClassLoader和AppClassLoader.&lt;span style=&#34;color:#303030;font-family:Verdana, Helvetica, Arial;background-color:#FFFFFF;&#34;&gt;Bootstrap是用C++编写的，我们在Java中看不到它,是null,是JVM自带的类装载器，用来装载核心类库，如java.lang.*等。&lt;/span&gt;&lt;br /&gt;&#xA;AppClassLoader的Parent是ExtClassLoader，而ExtClassLoader的Parent为Bootstrap&amp;nbsp;ClassLoader。&lt;br /&gt;&#xA;&lt;span style=&#34;color:#303030;font-family:Verdana, Helvetica, Arial;background-color:#FFFFFF;&#34;&gt;&amp;nbsp;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    Java提供了抽象类ClassLoader，所有用户自定义类装载器都实例化自ClassLoader的子类。&amp;nbsp;System Class Loader是一个特殊的用户自定义类装载器，由JVM的实现者提供，在编程者不特别指定装载器的情况下默认装载用户类&lt;span style=&#34;color:#303030;font-family:Verdana, Helvetica, Arial;background-color:#FFFFFF;&#34;&gt;。系统类装载器可以通过ClassLoader.getSystemClassLoader() 方法得到。&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:Verdana, Helvetica, Arial;background-color:#FFFFFF;&#34;&gt;&lt;br /&gt;&#xA;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:&#39;Verdana, Helvetica, Arial&#39;;&#34;&gt;java类开始执行是从appClassLoader开始的，自定义的classloader的默认parent就是appClassLoader&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:&#39;Verdana, Helvetica, Arial&#39;;&#34;&gt;每个ClassLoader维护一个命名空间，一个命名空间内不准出现两个name相同的class &lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:&#39;Verdana, Helvetica, Arial&#39;;&#34;&gt;理解了这些，那么我们来了解一下WebApp下的ClassLoader层次，以tomcat为例&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:&#39;Verdana, Helvetica, Arial&#39;;&#34;&gt;tomcat为每个app分配了一个 WebappClassLoader ，这样来避免多个app会加载相同jar包的问题，&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:&#39;Verdana, Helvetica, Arial&#39;;&#34;&gt;WebappLoader的parent是&amp;nbsp;&lt;span&gt;StandardClassLoader,这样多个app就能共享tomcat的类库&lt;/span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:&#39;Verdana, Helvetica, Arial&#39;;&#34;&gt;当tomcat为每个请求启动线程后，会将该线程的classloader设为 WebappLoader，如果不设置，那么新建的线程默认为 父线程的classloader。&amp;nbsp;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:&#39;Verdana, Helvetica, Arial&#39;;&#34;&gt;案例， 如何在request中使用自定义classloader生成了一个class&amp;nbsp;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;color:#303030;font-family:&#39;Verdana, Helvetica, Arial&#39;;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; classloader的默认parent 为appclassloader，因此 classloader只能引用一些jdk的class，不能引用webappClassLoader范围的class，最好就将classloader 的parent设为 this.getClass().getClassLoader()。 如果你有特殊需求就需要你来根据classloader的层次和范围来进行设置。&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;text-indent:2em;&#34;&gt;&#xA;    之前我对classloader只知道分为3个层次，自定义classloader的parent的问题一直没注意，昨天写代码出现了这个问题，今天才意识到是parent的问题，自己写了一个test证实了这个问题，写出来分享一下&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>菊花体生成代码</title>
      <link>https://helao.net/2012/277.html</link>
      <pubDate>2012-07-20 08:36:23 +0800</pubDate>
      <description>&lt;p&gt;&lt;pre class=&#34;prettyprint lang-js linenums&#34;&gt;function fuckAss(inStr,code) {&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    var c1 = String.fromCharCode(code);&#xA;&#xA;    var outStr = &#39;&#39;;&#xA;&#xA;    for(var i=0,l=inStr.length; i&amp;amp;lt;l; i++){&#xA;&#xA;        outStr += inStr.charAt(i) + c1;&#xA;&#xA;    }&#xA;&#xA;    return outStr;&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;code可以自己设置，默认1161， 输出：菊҉花҉体҉是҉这҉么҉出҉来҉的҉&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>TTCMS 0.a.5--0.a.*开发计划</title>
      <link>https://helao.net/2012/276.html</link>
      <pubDate>2012-07-18 07:59:13 +0800</pubDate>
      <description>&lt;p&gt;&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        将ttcms的连接池改为 druid &amp;nbsp; 0.a.5 ，已完成&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span&gt;添加图片，附件管理 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;0.a.5 ，&lt;/span&gt;&lt;br /&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        改为 markdown 编辑器 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0.a.6 ，完成&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span&gt;添加h2备份功能 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;0.a.6&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        加入同步接口 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0.a.7&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        加入rss &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0.a.7&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        添加二维码生成功能 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0.a.8 &amp;nbsp;，已完成，使用js生成，同样有相应的java类库未使用，减少服务器浪费&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        分享功能 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0.a.8 &amp;nbsp;，去除jiathis，太慢了 完成&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        改造为插件系统 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0.a.9 &amp;nbsp;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        用户和权限插件 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0.a.9 &amp;nbsp;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        文章管理插件 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0.a.10&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        日历和天气插件 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0.a.11&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        主题管理 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0.a.12&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        文章归档排序不对，请修改&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        添加对外关联接口，使用rpcxml接口即可，先完成wordpress的常用接口就行&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        添加husdson系统，自动发布ttcms&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;    #美化cms样式，制定页面布局，以便能制作主题css。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    #监控druid，记录sql语句和运行时间，并希望能进行一定的分析统计&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    目前应该有发布状态管理了，默认的为未发布状态，添加《保存草稿》和《立刻发布》按钮，需要xiu&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    需要开放hudson系统，这样就可以直接在线发布了&#xA;&lt;/p&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>redis 命令学习 3</title>
      <link>https://helao.net/2012/275.html</link>
      <pubDate>2012-07-17 03:28:18 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    redis下有set和sortset两种类型， 对此分别有 interstore和unionstore 两种操作&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    inter求交集， union求并集&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    对于sortset类型，因为要排序所以比较有用，inter，union之后 交集的key的score会相加，这样就影响了sortset的排序了，得想办法避免一下&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>asm学习入门</title>
      <link>https://helao.net/2012/274.html</link>
      <pubDate>2012-07-16 07:09:12 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    最近一直在看ASM，打算用ASM为java添加一些动态特性&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    悲哀的发现果然研究类格式是件很蛋疼的事，简直就回到了汇编的时代，汇编我还懂些，这玩意还得重新学习&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    先记录两个asm的工具类，这样学习起来要快些，学以致用&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;1，org.objectweb.asm.util.ASMifier， 分析类，并生成asm生成该类的代码&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;如 &amp;nbsp;java -classpath asm.jar:asm-util.jar &lt;/span&gt;&lt;span&gt;org.objectweb.asm.util.ASMifier &lt;/span&gt;&lt;span&gt;java.lang.Runnable&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2，&lt;span&gt;org.objectweb.asm.util.TraceClassVisitor&lt;/span&gt;&amp;nbsp; 分析类，并生成 该类的方法的asm生成代码&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    如 &amp;nbsp;&lt;span&gt;java -classpath asm.jar:asm-util.jar&amp;nbsp;&lt;/span&gt;&lt;span&gt;org.objectweb.asm.util.TraceClassVisitor&amp;nbsp;&lt;/span&gt;&lt;span&gt;java.lang.Void&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    使用这两个类可以快速的学习asm的语法和加快开发效率，降低开发难度&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>最近心神不定，啥也没干</title>
      <link>https://helao.net/2012/273.html</link>
      <pubDate>2012-07-10 09:33:59 +0800</pubDate>
      <description>&lt;p&gt;两个周末啥都没干，总是心神不宁，心里乱糟糟的，看什么都烦。还是定下心来看asm吧，先把asm掌握熟练，完成scoffold功能，再把背单词的实现，先用html5+js支持新版浏览器，然后再开发flash通用版，完成这些之后就着手做记忆算法方面的研究，采用mongodb或者h2, 不用mysql了，太大&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>redis 命令大全 - 续-1</title>
      <link>https://helao.net/2012/272.html</link>
      <pubDate>2012-06-27 06:07:27 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &amp;nbsp;一、 key操作&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;s&gt; 1，pexpire &amp;nbsp;key milliseconds &amp;nbsp;设置key存活多少毫秒&lt;/s&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;s&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2，pexpireat key &amp;nbsp;milliseconds-timestamp &amp;nbsp;在指定设置unix毫秒级时间戳过期&lt;/s&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;s&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 3，pttl key ,查看key的存活时间，毫秒级&lt;/s&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; 4，randomkey &amp;nbsp;随机返回一个key&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; 5，rename key newkey， 将key改名&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; 6，renamenx key newkey，当newkey不存在时才改名&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &lt;s&gt;&amp;nbsp; 7，restore key ttl &amp;nbsp;serialized-value &amp;nbsp;，？&lt;/s&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; 8，sort key 【by pattern】【limit offset】， 对这些key排序 只能为list，set，sort set 类型&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; 9， ttl key ，取得可以的存活时间&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; 10，type key， key的存储类型&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    二、hash操作&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;1，hset key field value &amp;nbsp;设置key中一个字段&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;2，hmset key field value [field value]&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;3，hsetnx key field value&amp;nbsp;当字段field不存在时，才进行设置&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;4，hmget key field [field ] 取得多个字段的值&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;5，hvals key 取得hash中的所有值&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;6，hget key field &amp;nbsp;,取得hash中field的值&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;7，hkeys key 取得hash中所有的字段&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;8，hlen key 取得hash中字段的总数&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;9，hgetall key 取得hash中所有的键值，依次排列&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;10，hexists key field 查看hash是否存在field字段&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;11，hdel key field [field ..] 删除一个或多个字段&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;12，hincrby key field increment 字段的值加&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>昨晚做了一个梦</title>
      <link>https://helao.net/2012/271.html</link>
      <pubDate>2012-06-25 01:25:02 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    昨晚做了一个梦，梦到初恋了。 她来找我，我特别的高兴，陪着她玩了好半天。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    看来心里还放不下她，没有勇气去面对她在别人怀抱里。 我能做的就是把这份回忆深深的埋在心里，偶尔梦起也是非常快乐的。&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>redis 命令大全</title>
      <link>https://helao.net/2012/270.html</link>
      <pubDate>2012-06-21 09:46:09 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    redis版本 2.2.5，有条件请直接看英文版，都有例子的。&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    一、Strings类的， redis中存储的全是字符串&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1，append key value , 在key之后添加value&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    例： append key1 hello ; append key1 world ; &amp;nbsp;get key1 显示 helloworld&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2，decr key &amp;nbsp; ,对key的整数值减一，不存在的key默认为0&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    例 decr key2 ; 将显示 -1&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    3，decrby &amp;nbsp;key decrement, &amp;nbsp;对可以的整数值减去指定值 &amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;例： decrby key3 5 ; 显示 -5&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    4,get key 取得key的值&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;如：get key4 ，显示&amp;lt;nil&amp;gt; , decr key4 ,get key4 显示 -1&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    5, getbit key offset &amp;nbsp;&amp;nbsp;返回String值指定位置的位 ，只有0和1&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;如： getbit key4 7 显示1 ，getbit key4 0 ，显示0&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    6，getrange key start end 截取key值的 子字符串&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;如 ： getrange key1 0 3 ,显示 hell&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    7， getset key value ，返回key的旧值，然后将value赋给key&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    8， incr key ， key的整型值加一&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    9， incrby key increment， key的整型值加上指定值&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    10， mget key [key ...] 取得多个key的值&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    11，&amp;nbsp;mset key value [key value] &amp;nbsp;设置多个key value值对&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    12， msetnx key value [key value] 只有当所有的key都不存在时 才设置多个key value值对&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    13，set key value &amp;nbsp;设置key value值对&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    14， setbit key offset value , 设置key值指定位置的bit， value只能为0和1&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    15，setex key seconds value , 设置key value 在指定时间后过期&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    16，setnx key value ，当key不存在时设置key value&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    17,setrange key offset value ，在key值指定偏移处使用value进行覆盖&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    18，strlen key ， key值的长度&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    二、 连接类和服务器类&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1，auth 验证密码&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2，echo message， 控制台输出信息，在使用多命令时有用&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    3，ping ，验证服务器是否连通&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    4，quit ， 结束当前连接&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    5，select index ，改变当前的数据库 0-15，共16个&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    6，bgsave， 异步的保存数据到硬盘&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    7，dbsize ， 返回当前数据库的key的总数&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    8，flashall ， 移除所有库中的所有key&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    9，flashdb， 移除当前库中的所有key&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    10，info ， 该服务器的信息和统计数据&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    11，lastsave , 最近一次成功保存在硬盘的时间戳&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    12，监听服务器接受每个请求的实际时间&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    13， save ，同步的将数据保存到硬盘&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    14，shutdown &amp;nbsp;，这个命令相当于先执行 save，然后关闭服务器&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    15，slaveof host port ，**配置集群用的， 配置该服务器为 指定服务器的slaver，还有其他情况。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    16，sync ，集群瞎用， 同步集群中的数据&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    17，time 返回当前服务器的时间&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    三、key操作类型&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;1，del key [key ...] ,删除key&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;2，exists key ，该key是否存在&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;3，expire key seconds , 设置key多长时间后过期&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;4，expireat key timestamp ,设置key指定时间过期&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;5，keys pattern ， 列出所有符合表达式的key&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;6，move key db ,移动一个key到指定数据库&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;7，object &amp;nbsp;refcount|encoding|idletime &amp;nbsp;key ,查询key的一些属性&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;8，persist ，移除key的过期时间，固化key&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    --------未完&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>一些回忆</title>
      <link>https://helao.net/2012/269.html</link>
      <pubDate>2012-06-21 06:29:53 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    在我大四的那年寒假回家的火车上我认识了我的女友，她很爱说，胖乎乎的。我们是晚上11点上的车，6点才能到站，2点多的时候大家都困了，她正好坐在我旁边，我们之前聊了一会，都知道对方没有对象。然后她就把头靠在我肩上睡觉，这是头一次有女生对我这样亲昵，毕竟我们才认识。 下车后我到家给她发了条短信，她很意外很快就给我回了短信说自己很困在睡觉。 就这样我们就一直保持短信联系，这样过了一个多星期，她跟我说她刚和男朋友分手，心里很难受不想再找了。我顿时心灰意冷，随便安慰i了她几句，就不打算再跟她联系了。我是半年前才分的手，分手的时候我一个月瘦了20多斤，心里特别的难受，寒假的时候我刚好些了，胃口也刚好些。本来不打算再找对象了，等有工作后再说。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    没成想过年的时候她给我打了好几个电话，问我为什么没有给她发短信。我自以为这是她对我很有好感，后来才知道我错了。这样我们又接着每天的短信聊天直到开学。我们约好提前几天去学校，还买一列火车的车票。这样上车后很快我们就见面了，她又把头靠在我肩上睡觉了，还以为她对我非常有好感呢，我很激动，终于有个人能主动看上我了。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    本来我信誓旦旦的告诉她去了学校就能住到宿舍，结果到了学校宿舍却没有开门，于是我们只好去小旅馆，我们一人一间，还是她付的钱。 等到了明天我们一起超市买了一些东西，然后就把东西搬到了宿舍。接下来同学都回来了，我们就再没有说过话，我以为我们就这样结束了（其实还没开始）。 突然一天晚上她把我叫出去，我们在楼道里谈了好长时间，她说我为什么不理她，我说没什么，这样不是挺好的吗？ 她说连朋友也不能做吗，然后就抱了抱我，我脑子一热就抱着她说，做我女朋友吧，她开始还没答应，我们闹了一会她才答应的。她问我们会分手吗？ 我说我绝对不会再你离开我前我离开你。我问她你呢？ 她说我爱你还来不及呢怎么会离开你呢。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    过了三天到周末，我们打算去市中心玩，结果那天下大雪，去不成了。在楼道里她第一次跟我发脾气，我哭了，我哭的原因是看她很不高兴怕她离开我。她吵也许是心情不好吧。好不容易到了晚上，她再次发脾气，她莫名奇妙的哭，然后说配不上我要分手。我劝了她好半天，直到我也哭了，她才停下来安慰我。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    那时候我表现的像个小孩子，自己喜欢的东西就会一直和它在一起，它不高兴了会哭，它要离开也会哭。也许那时候她表现的太减轻吧，母性十足，才会不断的容忍我，我只是对她才会表现的像个小孩子，在其他人眼里我还是挺优秀的。以后每星期她都会跟我发几次脾气，每次都是以我伤心的哭了结束（因为她以分手威胁我）。两次之后我知道她不会离开我的，然后在一次她发脾气时就不哭然后一直劝她，结果见我没哭就直接说我不爱她，然后分手。转头就走，我一急就哭了，哭的比她还伤心，这样她就好了然后过来安慰我，说她爱我不会离开我的。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    我意识到整个爱情的节奏一直被她掌握呢，而我愿意被她掌控，我只是担心当什么时候我的眼里没有眼泪之后我用什么来挽留她，我没有找到任何东西。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这样直到我毕业，期间她，她非要跟我分手，在她眼里我什么本事都没有，觉得我哪儿都不好，什么事都对我发脾气。我面对她却一句话也说不出来，我不敢说话怕再刺激到她，只好等她发完脾气，每次看她发脾气我的心都疼的难受，然后她见我不说话脾气更大了，接下来就说分手吧，我一见她说分手就急的直接哭了，真的一听到她说分手就特别的伤心，眼泪很自觉的流出来了。平时我从不哭的，我就怀疑跟她那一阵子比我从小到大流的泪还多。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    我毕业了，去北京上班，她为此还跟发了一通脾气，嫌我没在学校附近找工作陪她。我去北京时她只把我送到了校门口。我到北京很快找到了工作，这期间每天都在和她通电话。上班之后，第一个周末我坐车回去看她，她没去车站接我，小别胜新婚我们都很开心，晚上我们在一起她又发脾气了。就这样白天她上考研补习班，晚上我们玩会然后她继续发脾气。我回北京的时候是自己一个人走的，她没送。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这样每隔半个月我都会回学校去看她，她每次依然都会跟我发脾气，她总能找到借口。很快就到了我生日，我满心高兴的去学校看她，她依然没有去车站接我，我直接去了她住的地方，她给我的第一句话是她要和我分手，说这样才能让我记得深刻一些。我当时感觉心就跟碎了似的，她说你哭也没用我已经决定了。我愣愣的看着她，等我回过神来，立刻拿起我的东西开门就直接往外走，我想直接回北京去，离开这个让我伤心的地方。等我走出去了两百米她立刻追了出来抱住我说不让我走，然后就跟她回去了。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    等到了天明，她又开始说我们会分手的，不管你同意不同意，我想拿东西走人她又不让说我不懂事太小孩子气。确实那时候我在她面前就像个小孩子，太依赖她了，她不高兴的时候我就会很难受，她哭的时候我难受的也会哭出来。就这样我们纠结的度过了两天，然后我回北京了，她没送我。我带着一颗碎了的心回到了北京，回去后根本没什么胃口。 后来她给我打电话说虽然我们分手了但如果我追她的话她还会考虑我的，于是我又去学校看她，买了一个大熊（女生对大熊没有免疫力吧），她见到大熊的第一眼就对我说我不要这东西，没地方，你拿回去吧。她晚上继续对我发脾气，然后我回北京时带着小熊回去了。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    到了中秋我又去看她，这次给她买了玫瑰花、月饼，她看到玫瑰花却说不要，月饼也不吃，在那求了她半天她也不肯收下，我没办法就把花放一边，过了大概一个多小时，她突然心情好了，然后拿起花说这是第一次有人给她送花，她很高兴，但她依然不同意跟我和好。 我带着遗憾打算放弃努力了，在回去的火车上我说服我放弃了。突然她给我打来了电话，我挂了，她又打来，我才接。她说她同意当我女朋友，但她不爱我。可气的是当时我同意了。我怎么一点气节都没有。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    期间我说服她放弃考验然后来北京实习，正好我公司招人就让她来面试了，这样也能照顾好她。 也许在她眼里我真的什么都不好吧，她依然为了一点点小事跟我发脾气，这时候我经历了那次火车上的思想斗争我不再哭了，她发脾气我就冷战，不理她。这期间继续发生着很多事，有一次早上我醒来我发现自己的眼睛肿了，想去药店看看，她非要我陪着去见她同学，说什么晚去会有死不了，我一听扭头就回去了，但是我已经被她拉到马路上了，这是我第一次主动离开她，以前都是她跑掉我去找她。这次我们冷战了3天才和好，凡事有了开头就会继续下去。接下来她一旦逼急了我就直接一走了之，不管在什么地方，当然我保证她肯定能自己坐车回家，我不会把她留在陌生的地方的。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    一次去买东西时她非要我去跟她去见她同学我不肯她跟我又吵又闹，我就直接坐车回去了。一次公司开会回来她跟我吵了一路，我故意和她错开了一站地下。之后还有几次已经记不清了。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这期间我越来越感觉她对我的不满意，总是说我没钱、不高、不帅。 有几次我感冒了，她陪我去拿药，一路上她说你看我怎么不生病啊，怎么就你生病啊，你干脆也别看就耗着，赢了就不用看了，死了拉到。 但是我心里就一阵阵的发冷。 还有一次她去看同学回来，我去接她，路上她说她那同学多不好多不好，我也就跟着她说她同学不好，结果她居然直接就跟我翻脸了，说只能她说，我不能说。我当时一愣，脾气就上来了，我好心来接你哄你，你却这个意思凭什么啊。 也不等她我就加快脚步向前走，她叫住我说让我道歉。 也许当时我对她这样很反感吧，直接就走了。终于我们吵架到了分手的地步，那一阵子经常分分合合，她家里给她介绍了一个对象，她就瞒着我去见了，然后问我，你能以后对我好吗？ 我说只要你不跟我发脾气，我会对你很好。之后她有找了我两次问我能不能对她好，我对她这样特别反感，你已经有退路了就开始跟我谈条件，我也死硬，说你要想跟我好，就别再总跟我发脾气。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    她说我是再给你机会，我很珍惜咱们的感情。我想你有了别人追你你才对我这么说，我说我也只有一个条件不许跟我再乱发脾气，她说我做不到。我说那咱们就没机会了，然后我们就正式分手了，她就直接跟那人好上了。我想如果你没有找别人，也许咱们还有机会，一旦你找了别人就突破了我的底线，那真是就再没有挽回的机会了。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    后来我们又见了几次面，聊聊一些不痛不痒的东西，后来就再没有联系了。她依然还在北京，和我一个城市，我知道我们再也没机会了。&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>接下来的任务是玩转asm</title>
      <link>https://helao.net/2012/268.html</link>
      <pubDate>2012-06-20 01:06:10 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    玩转asm，学java一定要了解底层,早日实现scoffold功能&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>norbert HelloWorld教程</title>
      <link>https://helao.net/2012/267.html</link>
      <pubDate>2012-06-20 01:56:12 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    为了避免依赖的问题，我采用了maven创建项目&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面是依赖的包&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-xml linenums&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;com.linkedin&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;norbert_2.8.1&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;version&amp;gt;0.6.12&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;org.scala-lang&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;scala-library&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;version&amp;gt;2.8.1&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;com.google.protobuf&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;protobuf-java&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;version&amp;gt;2.4.0a&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;org.apache.zookeeper&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;zookeeper&amp;lt;/artifactId&amp;gt;&#xA;        &amp;lt;version&amp;gt;3.3.3&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; 先上一个norbert官方的例子，官方的缺少protoc生成消息格式类的介绍，具体生成办法请参考 我的另一篇文章&amp;lt;&lt;a href=&#34;http://www.feiyan35488.com/show/266&#34; target=&#34;_blank&#34;&gt;protobuf介绍&lt;/a&gt;&amp;gt;&lt;br /&gt;&#xA;&lt;span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;class PingSerializer implements Serializer&amp;lt;Ping, Ping&amp;gt; {&#xA;    public String requestName() {&#xA;      return &#34;ping&#34;;&#xA;    }&#xA;&#xA;    public String responseName() {&#xA;      return &#34;pong&#34;;&#xA;    }&#xA;&#xA;    public byte[] requestToBytes(Ping message) {&#xA;      return NorbertExampleProtos.Ping.newBuilder().setTimestamp(message.timestamp).build().toByteArray();&#xA;    }&#xA;&#xA;    public Ping requestFromBytes(byte[] bytes) {&#xA;      try {&#xA;        return new Ping(NorbertExampleProtos.Ping.newBuilder().mergeFrom(bytes).build().getTimestamp());&#xA;      } catch (InvalidProtocolBufferException e) {&#xA;         System.out.println(&#34;Invalid protocol buffer exception &#34; + e.getMessage());&#xA;         throw new IllegalArgumentException(e);&#xA;      }&#xA;    }&#xA;&#xA;    public byte[] responseToBytes(Ping message) {&#xA;      return requestToBytes(message);&#xA;    }&#xA;&#xA;    public Ping responseFromBytes(byte[] bytes) {&#xA;      return requestFromBytes(bytes);&#xA;    }&#xA;}&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    必须要实现 serializer接口，这是使用netty传输时对内容进行转换的&#xA;NorbertExampleProtos这个类是通过.proto文件生成的，具体生成办法请参考 我的另一篇文章&amp;lt;&lt;a href=&#34;http://www.feiyan35488.com/show/266&#34; target=&#34;_blank&#34;&gt;protobuf介绍&lt;/a&gt;&amp;gt;&#xA;下面是客户端和服务端的写法， 直接运行就可以看到结果， 据我查到的情况是 norbert能支持1000并发以上没问题。这个对企业大并发还不是很了解，不评论&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;import java.util.Set;&#xA;import java.util.concurrent.ExecutionException;&#xA;import java.util.concurrent.Future;&#xA;&#xA;import proto.Request;&#xA;import proto.RequestResponseSerializer;&#xA;import proto.Response;&#xA;&#xA;import com.linkedin.norbert.cluster.InvalidClusterException;&#xA;import com.linkedin.norbert.javacompat.cluster.ClusterClient;&#xA;import com.linkedin.norbert.javacompat.cluster.ClusterListener;&#xA;import com.linkedin.norbert.javacompat.cluster.Node;&#xA;import com.linkedin.norbert.javacompat.cluster.ZooKeeperClusterClient;&#xA;import com.linkedin.norbert.javacompat.network.Endpoint;&#xA;import com.linkedin.norbert.javacompat.network.LoadBalancer;&#xA;import com.linkedin.norbert.javacompat.network.LoadBalancerFactory;&#xA;import com.linkedin.norbert.javacompat.network.NettyNetworkClient;&#xA;import com.linkedin.norbert.javacompat.network.NettyNetworkServer;&#xA;import com.linkedin.norbert.javacompat.network.NetworkClient;&#xA;import com.linkedin.norbert.javacompat.network.NetworkClientConfig;&#xA;import com.linkedin.norbert.javacompat.network.NetworkServer;&#xA;import com.linkedin.norbert.javacompat.network.NetworkServerConfig;&#xA;import com.linkedin.norbert.javacompat.network.RequestHandler;&#xA;import com.linkedin.norbert.javacompat.network.RoundRobinLoadBalancerFactory;&#xA;&#xA;public class Start {&#xA;    public static void main(String[] args)&#xA;    {&#xA;        final String serviceName = &#34;norbert&#34;;&#xA;        final String zkConnectStr = &#34;localhost:2181&#34;;&#xA;&#xA;        configCluster(serviceName, zkConnectStr);&#xA;        startServer(serviceName, 1, zkConnectStr);&#xA;        startServer(serviceName, 2, zkConnectStr);&#xA;&#xA;        NetworkClientConfig config = new NetworkClientConfig();&#xA;        config.setServiceName(serviceName);&#xA;        config.setZooKeeperConnectString(zkConnectStr);&#xA;        config.setZooKeeperSessionTimeoutMillis(30000);&#xA;        config.setConnectTimeoutMillis(1000);&#xA;        config.setWriteTimeoutMillis(150);&#xA;        config.setMaxConnectionsPerNode(5);&#xA;        config.setStaleRequestTimeoutMins(10);&#xA;        config.setStaleRequestCleanupFrequencyMins(10);&#xA;&#xA;        final LoadBalancerFactory myLB = new LoadBalancerFactory()&#xA;        {&#xA;            @Override&#xA;            public LoadBalancer newLoadBalancer(final Set&amp;lt;Endpoint&amp;gt; endpoints) throws InvalidClusterException&#xA;            {&#xA;                return new LoadBalancer()&#xA;                {&#xA;                    @Override&#xA;                    public Node nextNode()&#xA;                    {&#xA;                        return endpoints.iterator().next().getNode();&#xA;                    }&#xA;                };&#xA;            }&#xA;        };&#xA;        final NetworkClient nc = new NettyNetworkClient(config, new RoundRobinLoadBalancerFactory());&#xA;        //PartitionedNetworkClient&amp;lt;Integer&amp;gt; nc = new NettyPartitionedNetworkClient&amp;lt;Integer&amp;gt;(config, new IntegerConsistentHashPartitionedLoadBalancerFactory());&#xA;&#xA;        //nc.registerRequest(NetqProtocol.AppendReq.getDefaultInstance(), NetqProtocol.AppendResp.getDefaultInstance());&#xA;&#xA;        for(int index = 0;index&amp;lt;10;index++){&#xA;            new Thread(new Runnable() {&#xA;                @Override&#xA;                public void run() {&#xA;                    for(int i=0;i&amp;lt;10;i++){&#xA;                        final Request request = new Request(5+i);&#xA;                        System.out.println(Thread.currentThread().getName()+&#34;-client request at &#34;+(5+i));&#xA;                        Future&amp;lt;Response&amp;gt; pingFuture = nc.sendRequest(request, new RequestResponseSerializer());&#xA;                &#xA;                        try&#xA;                        {   &#xA;                            final Response appendResp = pingFuture.get();&#xA;                            System.out.println(Thread.currentThread().getName()+&#34;-client got ping resp: &#34; + appendResp.total);&#xA;                        }&#xA;                        catch( InterruptedException e )&#xA;                        {&#xA;                            e.printStackTrace();&#xA;                        }&#xA;                        catch( ExecutionException e )&#xA;                        {&#xA;                            e.printStackTrace();&#xA;                        }&#xA;                    }&#xA;&#xA;                    &#xA;                }&#xA;            }).start();    &#xA;       }&#xA;    }&#xA;&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt; private static void startServer(String serviceName,final int nodeId, String zkConnectStr)&#xA;    {&#xA;        NetworkServerConfig config = new NetworkServerConfig();&#xA;        config.setServiceName(serviceName);&#xA;        config.setZooKeeperConnectString(zkConnectStr);&#xA;        config.setZooKeeperSessionTimeoutMillis(30000);&#xA;        config.setRequestThreadCorePoolSize(5);&#xA;        config.setRequestThreadMaxPoolSize(10);&#xA;        config.setRequestThreadKeepAliveTimeSecs(300);&#xA;&#xA;        NetworkServer ns = new NettyNetworkServer(config);&#xA;&#xA;        ns.registerHandler(new RequestHandler&amp;lt;Request, Response&amp;gt;()&#xA;        {&#xA;            @Override&#xA;            public Response handleRequest(Request request) throws Exception&#xA;            {&#xA;                System.out.println(&#34;server_&#34;+nodeId+&#34;:run at &#34;+request.num);&#xA;                return new Response(request.num+10);&#xA;            }&#xA;        }, new RequestResponseSerializer());&#xA;&#xA;&#xA;        ns.bind(nodeId);&#xA;    }&#xA;&#xA;    private static void configCluster(String serviceName, String zkConnectStr)&#xA;    {&#xA;        //ClusterClient cc = new InMemoryClusterClient(&#34;norbert&#34;);//, &#34;localhost:2181&#34;, 30000);&#xA;        final ClusterClient cc = new ZooKeeperClusterClient(serviceName, zkConnectStr, 30000);&#xA;        cc.awaitConnectionUninterruptibly();&#xA;&#xA;        cc.addListener(new ClusterListener()&#xA;        {&#xA;            @Override&#xA;            public void handleClusterConnected(Set&amp;lt;Node&amp;gt; nodes)&#xA;            {&#xA;                System.out.println(&#34;connected to cluster: &#34; + nodes);&#xA;            }&#xA;&#xA;            @Override&#xA;            public void handleClusterNodesChanged(Set&amp;lt;Node&amp;gt; nodes)&#xA;            {&#xA;                System.out.println(&#34;nodes changed: &#34;);&#xA;                for( Node node : nodes )&#xA;                {&#xA;                    System.out.println(&#34;node: &#34; + node);&#xA;                }&#xA;            }&#xA;&#xA;            @Override&#xA;            public void handleClusterDisconnected()&#xA;            {&#xA;                final Set&amp;lt;Node&amp;gt; nodes = cc.getNodes();&#xA;                System.out.println(&#34;dis-connected from cluster: &#34; + nodes);&#xA;            }&#xA;&#xA;            @Override&#xA;            public void handleClusterShutdown()&#xA;            {&#xA;                final Set&amp;lt;Node&amp;gt; nodes = cc.getNodes();&#xA;                System.out.println(&#34;cluster shutdown: &#34; + nodes);&#xA;            }&#xA;        });&#xA;&#xA;        cc.removeNode(1);&#xA;        cc.removeNode(2);&#xA;        cc.addNode(1, &#34;localhost:5002&#34;);&#xA;        cc.addNode(2, &#34;localhost:5003&#34;);&#xA;&#xA;//        cc.markNodeAvailable(1);&#xA;//        cc.shutdown();&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>protoBuf 语法介绍</title>
      <link>https://helao.net/2012/266.html</link>
      <pubDate>2012-06-19 09:57:08 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    先上个例子看看&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-js linenums&#34;&gt;package proto.test2;  &#xA;  &#xA;option java_package = &#34;proto.test&#34;;  &#xA;option java_outer_classname = &#34;RequestBPO&#34;;  &#xA;  &#xA;option optimize_for = SPEED;  &#xA;  &#xA;message Request{  &#xA;  optional int32 num = 1; &amp;nbsp;&#xA;  required string msg = 2;&#xA;  repeated Keyval maps = 3 ;&#xA;  optional bool right = 4 ;&#xA;} &#xA;message Keyval{&#xA;   optional string key = 1;&#xA;   optional string value = 2;&#xA;}&lt;/pre&gt;&#xA;&#xA;使用protoc.exe --java_out=src\ &amp;nbsp;src\request.proto 编译&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    即可在 src\proto\test下生成 RequestBPO 类 &amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    为什么不是proto.test2呢，因为 option java_package 的优先级比package的优先级要高&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    如果没有option java_package 那么就会在 proto.test2下生成。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    文件里面要定义消息格式 &amp;nbsp;例： message SomeMessage{...} 这个样子，可以定义多个，也可以嵌套定义&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    SomeMessage是最终生成BPO中的request message的类名&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面看message中支持的类型 &amp;nbsp; 定义属性格式是这个样子滴： optional|required|repeated &amp;nbsp; type &amp;nbsp;name = order;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    第一个是描述符只有那三种， type有 double，float，int32对应java中的double，float，int&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有string对应string， bool对应boolean， repeated则对应为list&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    名称随便起，貌似没有啥关键字。 最后这个是order，必须大于0 应该是在协议中传输时有用吧&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    上面repeated Keyval相当于自定义类型了。还有嵌套定义的情况，我没细看。等用到了再来更新。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>NOR的特性</title>
      <link>https://helao.net/2012/265.html</link>
      <pubDate>2012-06-17 12:19:57 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:16px;line-height:24px;&#34;&gt;COC&lt;/span&gt;&lt;span style=&#34;font-size:16px;line-height:24px;&#34;&gt;，约定大于配置。通过项目中约定俗成的规则来代替大部分的配置，同时还可以让大家能对项目更加熟悉，连文档都能省了。&lt;br /&gt;&#xA;下面是具体的项目规定： 项目中源码包的结构：&lt;br /&gt;&#xA;&lt;span&gt;&lt;/span&gt;appSrc/domains/ 领域对象存放位置，&lt;br /&gt;&#xA;appSrc/controllers/ 业务逻辑所在位置，常用的CRUD可以直接通过ncode生成。&lt;br /&gt;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 一般的业务逻辑直接使用通用dao直接查询数据库&lt;br /&gt;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 而复杂或者可复用的逻辑可以分离出来放到services中&lt;br /&gt;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; controllers中的类要以Controller结尾才会进行映射处理&lt;br /&gt;&#xA;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 非Controller结尾的类则按照nutz的正常流程处理&lt;br /&gt;&#xA;appSrc/services/ 复杂或者可复用的业务逻辑或者通用功能放在这里， &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;controller中直接使用service类注入，不适用接口。根据大多数的&lt;span&gt;&lt;/span&gt;中小型项目&amp;nbsp;&amp;nbsp;&amp;nbsp;的&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;统计，其使用接口来实现多个service的情况十分少见。当然若使用接口也可以，只需在service实行出使用@Inject(&#34;refer:nameService&#34;)即可注入，也可以只用配置文件进行注入&lt;br /&gt;&#xA;appSrc/utils/ 这里放一些常用的工具类&lt;br /&gt;&#xA;webapp/WEB-INF/templates/ 模版文件&lt;br /&gt;&#xA;webapp/Web-INF/views/ 这里放所有的视图文件，命名规则是moduleName/viewName&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:16px;line-height:24px;&#34;&gt;这里介绍一些controllers处的url到action到view的映射关系&lt;br /&gt;&#xA;url 格式： http://yourdomain/appName/moduleName/actionName&lt;br /&gt;&#xA;moduleName是 controllerName去掉Controller，然后首字母小写&lt;br /&gt;&#xA;actionName就是 methodName&lt;br /&gt;&#xA;你若在Contoller设置了@At, 映射就变为 @At.value/actionName&lt;br /&gt;&#xA;若在Action中设置了@At 映射就直接为 /@At.value, 这里要注意这时候没有controllerName做前缀&lt;br /&gt;&#xA;View和action的映射关系则为 WEB-INF/views/controllerName/actionName.jsp&lt;br /&gt;&#xA;这里还没有处理的很好，若不满意可以直接使用@Ok处理即可&lt;br /&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span&gt;&lt;span style=&#34;line-height:24px;&#34;&gt;这里有个新特性则是为REDIRECT 重定向 添加了可以直接返回message&lt;br /&gt;&#xA;例如： @Ok(&#34;&amp;gt;&amp;gt;:/index.jsp&#34;) Object someFunction(){return &#34;i&#39;m redirect&#34;;}&lt;br /&gt;&#xA;在index.jsp 页面你可以直接使用${message} 来得到 这个字符串。目前只支持返回字符串，再复杂的数据应该采用db或者session或者cache来处理。&lt;br /&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span&gt;&lt;span style=&#34;line-height:24px;&#34;&gt;添加了ncode模版功能，目前支持 create-project projectName , create-domain&lt;br /&gt;&#xA;&amp;nbsp;create-controller ,generate-controller, generate-views ，&amp;nbsp;help几个命令&lt;br /&gt;&#xA;以后会添加run-app，war等热部署项目和项目打包&lt;/span&gt;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span&gt;&lt;span style=&#34;line-height:24px;&#34;&gt;这个时目前正在做的，scoffold脚手架功能，可以使你只创建一个domain就可以享受到所有的CRUD功能，不需要再生成重复的代码&lt;br /&gt;&#xA;这是你就可以通过修改模版来完成大部分功能的生成，若实在特殊再添加相应的action或者view即可。&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&lt;span style=&#34;line-height:24px;&#34;&gt;说了这么多，只有一个目的，减少代码数，提高开发者的开发效率，减少对重复性代码的复制，更多的时间去关注业务，去关注其他的方面。希望你们在开发的时候更快乐，也给我反馈更多的意见。大家能为重复代码少烦一些，多快乐一点，也算我为创建和谐社会做的贡献 :)&lt;/span&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>介绍</title>
      <link>https://helao.net/2012/264.html</link>
      <pubDate>2012-06-17 11:39:07 +0800</pubDate>
      <description>&lt;p style=&#34;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;text-align:left;background-color:#FFFFFF;text-indent:2em;&#34;&gt;&#xA;    Nutz为了提高开发效率做了很大的努力也非常成功。Nutz on Rails 只是站在巨人的肩膀上做点小小的工作。&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;text-align:left;background-color:#FFFFFF;text-indent:2em;&#34;&gt;&#xA;    Nutz on Rails&amp;nbsp;规定了项目的一些开发规范，添加了COC特性(主要是为Nutz添加了一些默认设置)&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;text-align:left;background-color:#FFFFFF;text-indent:2em;&#34;&gt;&#xA;    添加了Code 生成功能，还有已经在日程的scoffold 功能&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;text-align:left;background-color:#FFFFFF;text-indent:2em;&#34;&gt;&#xA;    未来还会集成jetty服务器，并会做一些定制，使开发时不需要再重启服务器,真正的热部署.还有使应用更方便配置，以及开发 , 测试 , 部署三种模式.方便开发和部署&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;text-align:left;background-color:#FFFFFF;text-indent:2em;&#34;&gt;&#xA;    还有至关重要的插件系统，没有插件的系统不是好系统，一个系统不可能应付所有的场景,插件系统必不可少.&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;text-align:left;background-color:#FFFFFF;text-indent:2em;&#34;&gt;&#xA;    插件系统目前考虑思路，还没提到日程上，我会把我所有的空闲时间用到实现这些目标上的 :)&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;text-align:left;background-color:#FFFFFF;text-indent:2em;&#34;&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;text-align:left;background-color:#FFFFFF;text-indent:2em;&#34;&gt;&#xA;    注:&lt;span style=&#34;background-color:#F9F9F9;font-family:Verdana, sans-serif, 宋体;font-size:14px;&#34;&gt;nutz on rails完全兼容nutz的一切注解和规则，完全可以混合开发.&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;text-align:left;background-color:#FFFFFF;text-indent:2em;&#34;&gt;&#xA;    &lt;span style=&#34;background-color:#F9F9F9;font-family:Verdana, sans-serif, 宋体;font-size:14px;&#34;&gt;&amp;nbsp; &amp;nbsp; 你可以直接把nutz的包换成 nor的jar包，项目原有的功能完全正常，只需把新功能按照nutz on rails的约定进行开发就可以了&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>工作中遇到一些不懂的东西，记录下来找机会学习以下</title>
      <link>https://helao.net/2012/263.html</link>
      <pubDate>2012-06-14 10:10:09 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    linkedin.norbert包&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    jboss.netty 包&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    sleepycat.je包&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    zookeeper 包&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    google.protobuf包&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有google的guava和collect包也要看一下&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    其他的都是些很常用的包，哦也许还要加上bdb的包，存储部分采用的bdb，还有系统的并发处理也不知道是在哪里做的。好好研究以下吧&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>zookeeper 简介及使用场景说明</title>
      <link>https://helao.net/2012/262.html</link>
      <pubDate>2012-06-13 02:16:45 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    首先先介绍配置文件吧,&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    conf/zoo.cfg ,zoo是默认名称，当然也可以随便改名，只需在在启动时指定一下就可以了如&amp;nbsp;bin/zkServer.sh start xxx &amp;nbsp;.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    里面最少需要三个参数&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    tickTime 2000, &amp;nbsp;zookeeper 最小单位是毫秒， 这个时间是心跳检测的时间, session最低的过期时间是两倍tickTime&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    dataDir /var/zookeeper/data &amp;nbsp;指定数据文件路径. 里面会存储一些内存数据库的快照，以及更新数据库时的事务控制日志&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    port &amp;nbsp;2181 &amp;nbsp;监听的端口，不解释&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    initLimit &amp;nbsp;5 , &amp;nbsp;其他服务器连接到leader的最大时间，5×tickTime , 超过这个时间，则不再接受该服务器&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    syncLimit 2 &amp;nbsp;是其他服务器与leader 最大可连续不同步的时间, 2*tickTime, 及如果服务器与leader失去连接长达4s则说明服务器掉线了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    应用场景;&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;20台服务器, 1台主服务器，一台备用服务器&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 主服务器在zookeeper中注册 /zookeeper/master &amp;nbsp;hostName&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 备用主服务器监控/zookeeper/master ，如果master中的值发生变化就把自己启动为主服务器，并将自己的ip放到/zookeeper/master中&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 20台服务器在zookeeper中注册 /zookeeper/nodes/node1 &amp;nbsp;ip,还有服务器的状态&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 有一台web-cgi服务器，监控/zookeeper/master ,发生变化时取得最新的ip保存到本地&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; web-cgi 接收到搜索请求时，将请求转发到主服务器中，主服务器遍历出各分布式服务器的状态，等状态正常时，然后提供服务后将结果返回.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    zookeeper的功能就是维护分布式系统的配置情况&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>zookeeper 简介及安装说明</title>
      <link>https://helao.net/2012/261.html</link>
      <pubDate>2012-06-12 12:42:08 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    换了新公司，开始维护一个cache系统，分布式采用的zookeeper ,自己也下载在本机运行了一下，第一感觉这就是个分布式缓存，在一台机器上更新了，然后其他机器是可见的.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    再深入的理解一下就是这些机器是可以自动维护的,他们会自动选择出一个leader，可以查询目前有多少follers在线等，还自动有一个副leader，它会和leader做心跳检测，当leader挂掉时，它就代替leader，并更新follers的连接地址，直接与follers联系.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    实际应用中应该是 创建app,然后在app下关联servers,然后这些servers会共享app下面的配置数据。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    而客户端连接时直接连接leader,从leader得到follers的信息，然后foller的职能分配给foller执行&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    说了这么多还是直接演示一下吧&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    首先下载zookeeper.**.tar.gz&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    解压到 ~/server1/zookeeper&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; 如果单机的，直接运行 bin/zkServer.sh start就可以了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    然后 运行 bin/zkCli.sh -server 127.0.0.1:2181&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    在里面输入 ls / ,查看当前路径， 可以通过create path value ，创建路径&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    get path ,取得路径的内容, set path value 修改路径值&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>jvm调优系列0，jvm内存空间分配</title>
      <link>https://helao.net/2012/260.html</link>
      <pubDate>2012-06-08 10:36:36 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    一般大家了解的就是heap和stack了，日常接触得到的 异常也是针对这两个的&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    具体的来说，stack是jvm为每个线程划分的一块区域，还有线程共享区域&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    stack是有深度的也就是大小限制，如果程序调用的方法层次过深则就有可能触发 out of stack&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这里可以针对系统的具体情况去设置这块区域的大小&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    heap则分为 年轻代，老年代和持久代&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    主要是根据对象的存活时间而定的，短期的就是年轻代，gc采用的复制算法，gc比较频繁，但是gc速度很快&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;存活时间较长就进入了老年代，等老年代空间不足时会触发gc，或者fullgc时也会释放一些对象&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    持久代则就是存放一些类定义和方法定义之类的东西，gc很少，只有fullgc时才会参与到，一般使用默认值即可，除非系统情况特殊，需要加载非常多的类，在进行设定。&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>jvm调优系列1，调优eclipse</title>
      <link>https://helao.net/2012/259.html</link>
      <pubDate>2012-06-08 10:27:37 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    环境普通pc，4G内存，i3cpu，jdk 1.6&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    使用工具： jvisualvm 和其插件visualgc&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    首先启动jvisualvm，eclipse按默认配置启动，在jvisualvm中选择eclipse的进程，查看统计信息&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    jvm的默认参数是 xmx=256M maxpermsize = 64M&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    看heap曲线图，最大值前期会有一个上升阶段，应该会稳定在一个值，而使用值则会有一些波动，没有明显提升&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    再看permgem，也就是永久带，也是上来就一个上升，然后使用值和最大值一般会相同，没有大项目的话会稳定在50上下M&lt;span&gt;&lt;/span&gt;，一旦打开项目，就有可能会造成out of memory。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    首先得到heap max 的稳定值&amp;nbsp;和 &amp;nbsp;和 maxpermsize的稳定值&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这就是在eclipse。ini要进行设置的参数&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    -Xms512m -Xmx512m ，设置成一样，省的jvm去不停的进行full gc。 用来设置整个heap的大小&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    -Xmn128m &amp;nbsp;用来设置年轻代的大小，一般不需要多大，这里面gc速度很快，可以被经常回收&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    -XX:PermSize=256m&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    -XX:MaxPermSize=256m&amp;nbsp; 这个是设定永久代空间大小的，同样设为一样，防止去不停的触发full gc&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    跟年轻代的gc机制不同，fullgc是非常慢的，应该采用串行回收机制，回收过程整个jvm需要等待gc的完成，若通过gc还是没有足够的空间那么就会去申请新的空间，如果申请不到就报out of memory 错误了。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    其实针对eclipse设置这些就够了，还有可以去指定java的路径也能提升一点。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    如果是服务器则就要根据系统的整体情况，分别针对不同区域设置大小和gc机制&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>每次找工作都会纠结</title>
      <link>https://helao.net/2012/258.html</link>
      <pubDate>2012-06-08 10:04:10 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    搜狐畅游，待遇很行，但评价普遍不好，貌似就是因为加班和待遇的问题。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    九樱天下：感觉是未来电商的引领者，只是不知道自己在里面的发展情况，再玩这一回吧，下次就直接创业得了。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    不信就没有符合自己理想的公司。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>JAVA体系分布</title>
      <link>https://helao.net/2012/257.html</link>
      <pubDate>2012-06-07 10:04:56 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    JAVA 从高到低分为5层&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;ol&gt;&#xA;        &lt;li&gt;&#xA;            JAVA语言规范&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            各平台的JVM实现&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            CLASS类文件格式&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            JDK CORE API&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            大量第三方的API&amp;nbsp;&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;        &lt;/li&gt;&#xA;    &lt;/ol&gt;&#xA;    &lt;p&gt;&#xA;        我们通常就处在第四和第五 交叉的部分，如果那一层精通了，首先第五层东西太多了，只能选择精通其中的几种，也足以大幅度提高自己的水平。一旦研究了第五层，就会对第四层感兴趣，再精通就能达到高级开发的级别的&#xA;    &lt;/p&gt;&#xA;    &lt;p&gt;&#xA;        以上三个领域是大牛的专属领域，第五层就可以使自己混到中级乃至高级的水平。&#xA;    &lt;/p&gt;&#xA;    &lt;p&gt;&#xA;        自己应该选取第五层中几个有代表性的项目首先进行研究，同时配置研究第四层，不断的参照，这样研究速度回大幅上升，也能快速提高自己的技术水平。就这么多了，前三层自己目前还处在了解的阶段，一定要有自己精通的一方面才行。&#xA;    &lt;/p&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>面试有感，选择一个目标进行下去吧，神挡杀神，佛挡杀佛</title>
      <link>https://helao.net/2012/256.html</link>
      <pubDate>2012-06-06 12:59:23 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    得找一个深层次的知识点深究下去，要在其中一方面成为NO1，才能算作一点成功，整天摆弄一些常用的自己定位就有问题，如果自己还相信自己有目标的话，那么就排除一切困难直接努力吧，如果选择等待你将没有任何话语权。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面是几个方向： 1，java &amp;nbsp;class格式，动态插入方法，生成 bytes code（jvm的原理及源码）&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2，语义识别，更好的分词&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3，人工智能，机器学习&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4，海量数据存储&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5，海量数据处理&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;6，分布式架构，如memcached，redis，hadoop&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;7，应用级分布式&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;8，mysql的集群和读写分离&amp;nbsp;，以及如何分布式&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    我选分布式，明天开始研究memcached 源码，架设hadoop，以及进行map/reduce编程。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    多使用伪码处理问题，屏蔽语言的差异&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>反爬虫设计思路</title>
      <link>https://helao.net/2012/255.html</link>
      <pubDate>2012-06-05 02:45:10 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    采用时间窗口限值法， 将每次请求(remote_addr)放到 cache中，并设置expired time 为5, 每次请求时query当前的remote_addr的值，大于阀值，就返回error，否则加入cache 并继续进行&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    也可以根据自己的网站调整限值和时间窗口&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    由于可能spider会猜出限值，并且24小时访问，那么这只能依靠每天手动分析日志了，这样spider就很明显能看出来了&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>2012.6.5 采集系统的设计思路</title>
      <link>https://helao.net/2012/254.html</link>
      <pubDate>2012-06-05 01:05:36 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    题目： 设计一个采集系统能采集网站的全部网页, 如果需要采集几十万个中文网站，那么需要哪些方法能加快采集速度&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    大家先想想，有思路可以直接评论回复.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>要开始面试了，好好准备吧</title>
      <link>https://helao.net/2012/253.html</link>
      <pubDate>2012-06-04 06:54:22 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    需要准备的应该有常用设计模式的概念和类图&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有多线程并发的关键字，&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    熟悉一下oracle和 linux shell&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>联系我们</title>
      <link>https://helao.net/2012/252.html</link>
      <pubDate>2012-06-04 06:09:46 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    本站采用NOR(NUTZ ON RAILS) 搭建而成，以后会陆续把代码分享到该网站，有需要的直接和我联系&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    联系方式： 1，点击最下方的链接&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2，QQ：676370540&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>验证码bug</title>
      <link>https://helao.net/2012/251.html</link>
      <pubDate>2012-06-04 06:05:01 +0800</pubDate>
      <description>&lt;p&gt;&lt;s&gt;每个session的验证码用完后，要立马注销掉 &amp;nbsp;&lt;/s&gt; &amp;nbsp;fixed&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>一个背单词系统，爱贝勒</title>
      <link>https://helao.net/2012/250.html</link>
      <pubDate>2012-06-04 05:14:44 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    在线背单词，前台先用js做吧。后台采用nutz+h2+mongodb，交互性太强，采用nosql（mongodb）比较合适。h2放一些基础数据即可，前台改为flash的比较好，能兼容所有的浏览器&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    已经把book_info 和 word_info 放到h2中了， 接下来先把流程定一下，写出原型，然后写后台的book_info和word_info导入导出功能。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    流程:&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 1，选择的词库&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 2，选择未掌握的单词，每次取10个。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 3，显示题型时随机展示&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 4，每个题目连续答对三次算做是 已掌握的单词，展示题目时有时间限制（必须要集中精力）&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 5，每个单词答对了就积1分，积10分也算掌握&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 6，单词发音目前采用单词文件，想办法使用发音控件，去掉这部分的链接请求&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 7，统计用户每天的在线时长和学习单词个数和掌握的单词个数&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;&amp;nbsp;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>nor 1.b.44.5 开发计划</title>
      <link>https://helao.net/2012/249.html</link>
      <pubDate>2012-06-04 01:20:46 +0800</pubDate>
      <description>&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:16px;&#34;&gt;&lt;s&gt;scoffold 功能 &amp;nbsp;&lt;/s&gt;&lt;/span&gt; &amp;nbsp; &amp;nbsp;ok&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span&gt;&lt;span style=&#34;line-height:24px;&#34;&gt;&lt;s&gt;使用脚本 &amp;nbsp; &amp;nbsp; &amp;nbsp; ok&lt;/s&gt;&lt;/span&gt;&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span&gt;&lt;span style=&#34;line-height:24px;&#34;&gt;&lt;s&gt;文档 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ok&lt;/s&gt;&lt;/span&gt;&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;line-height:24px;&#34;&gt;&lt;s&gt;nginx proxy后tomcat取得remote_uri 出问题，需要直接配置为remote_uri 即可，不在使用proxy中转 ok&lt;/s&gt;&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span class=&#34;Apple-style-span&#34; style=&#34;line-height:24px;&#34;&gt;&lt;s&gt;将nor更新到1.b.44 &amp;nbsp;ok&lt;/s&gt;&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>软件开发中我们都应该需要哪些框架</title>
      <link>https://helao.net/2012/248.html</link>
      <pubDate>2012-06-03 12:06:43 +0800</pubDate>
      <description>&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:16px;&#34;&gt;hudson ,自动集成部署工具，能编译和跑自动测试工具&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:16px;&#34;&gt;svn 版本控制,(已有)&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:16px;&#34;&gt;需要mvc ，ioc，dao层框架。mvc用来将 C和V分离， ioc将依赖关系&lt;/span&gt;&lt;span style=&#34;font-size:16px;&#34;&gt;解耦, dao可以配置事务，减少sql的使用，提高开发效率&lt;/span&gt;&lt;span&gt;&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:16px;&#34;&gt;日志框架, 调试bug必备的东西&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:16px;&#34;&gt;jira 任务分配和&lt;/span&gt;&lt;span style=&#34;font-size:16px;&#34;&gt;&lt;span style=&#34;line-height:24px;font-size:16px;&#34;&gt;bug跟踪&lt;/span&gt;&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>定义自己的classloader</title>
      <link>https://helao.net/2012/247.html</link>
      <pubDate>2012-05-29 11:28:07 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    自定义classloader主要实现的方法是 findClass(String name) , 而我们调用的则是loadClass来加载类&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    具体的loadClass代码请自己查阅,直接上干货:&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public class NorClassLoader extends ClassLoader{&#xA;    &#xA;    URL[] urls = null;&#xA;    public NorClassLoader(){&#xA;        super();&#xA;    }&#xA;    public NorClassLoader(URL[] urls){&#xA;        this.urls = urls;&#xA;    }&#xA;    public NorClassLoader(URL[] urls,ClassLoader parent){&#xA;        super(parent);&#xA;        this.urls = urls;&#xA;    }&#xA;    @Override&#xA;    protected Class&amp;lt;?&amp;gt; findClass(String name) throws ClassNotFoundException {&#xA;        Class&amp;lt;?&amp;gt; clazz = null;&#xA;        if(name == null || name.length()==0) &#xA;            throw new ClassNotFoundException(&#34;class &amp;lt;&#34;+name+&#34;&amp;gt; can&#39;t found&#34;);&#xA;        &#xA;        try{&#xA;            byte[] buffer = searchResource(name);&#xA;            if(buffer == null){&#xA;                throw new ClassNotFoundException(&#34;class &amp;lt;&#34;+name+&#34;&amp;gt; can&#39;t found&#34;);&#xA;            }&#xA;            clazz = defineClass(null, buffer, 0, buffer.length);&#xA;            &#xA;        }catch(Exception e){&#xA;            throw new ClassNotFoundException(&#34;class &amp;lt;&#34;+name+&#34;&amp;gt; can&#39;t found&#34;,e);&#xA;        }&#xA;        if(clazz == null){&#xA;            throw new ClassNotFoundException(&#34;class &amp;lt;&#34;+name+&#34;&amp;gt; can&#39;t found&#34;);&#xA;        }&#xA;        return clazz;&#xA;    }&#xA;    private byte[] searchResource(String name) throws IOException{&#xA;        if(urls == null || urls.length ==0){&#xA;            throw new NullPointerException(&#34;urls can&#39;t be null or empty&#34;);&#xA;        }&#xA;        String pathName = name.replaceAll(&#34;\\.&#34;, &#34;/&#34;);&#xA;        ByteArrayOutputStream baos = null;&#xA;        for(URL url : urls){&#xA;            try {&#xA;                File file = new File(url.toURI());&#xA;                if(file.exists() &amp;amp;&amp;amp; file.isDirectory()){// source folder&#xA;                    File clazzFile = new File(file,pathName+&#34;.class&#34;);&#xA;                    if(clazzFile.exists() &amp;amp;&amp;amp; clazzFile.isFile()){&#xA;                        baos = new ByteArrayOutputStream();&#xA;                        FileInputStream fis = new FileInputStream(clazzFile);&#xA;                        int b = 0;&#xA;                        while((b=fis.read()) &amp;gt;=0){&#xA;                            baos.write(b);&#xA;                        }&#xA;                        fis.close();&#xA;                        break;&#xA;                    }&#xA;                }else{&#xA;                    if(file.getName().endsWith(&#34;.jar&#34;)){// jar file&#xA;                        JarFile jarFile = new JarFile(new File(url.toURI()));&#xA;                        ZipEntry zentry = jarFile.getEntry(pathName+&#34;.class&#34;);&#xA;                        if(zentry ==null){&#xA;                            continue;&#xA;                        }else{&#xA;                            InputStream is = jarFile.getInputStream(zentry);&#xA;                            baos = new ByteArrayOutputStream();&#xA;                            int b = 0;&#xA;                            while((b=is.read())&amp;gt;=0){&#xA;                                baos.write(b);&#xA;                            }&#xA;                            is.close();&#xA;                            jarFile.close();&#xA;                            break;&#xA;                        }&#xA;                    }else if(file.getName().endsWith(&#34;.zip&#34;)){// zip file&#xA;                        ZipFile zipFile = new ZipFile(new File(url.toURI()));&#xA;                        ZipEntry zentry = zipFile.getEntry(pathName);&#xA;                        if(zentry ==null){&#xA;                            continue;&#xA;                        }else{&#xA;                            InputStream is = zipFile.getInputStream(zentry);&#xA;                            baos = new ByteArrayOutputStream();&#xA;                            int b = 0;&#xA;                            while((b=is.read())&amp;gt;=0){&#xA;                                baos.write(b);&#xA;                            }&#xA;                            is.close();&#xA;                            zipFile.close();&#xA;                            break;&#xA;                        }&#xA;                    }else{ // can&#39;t process the file type&#xA;                        continue;&#xA;                    }&#xA;                    &#xA;                }&#xA;            } catch (URISyntaxException e) {&#xA;                continue;&#xA;            }&#xA;        }&#xA;        return baos ==null ? null : baos.toByteArray();&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    再来一个 测试用例,用例是从其他项目即时编译一个源文件用classloader加载&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public class TestClassloader {&#xA;    @Before&#xA;    public void setUp(){&#xA;        String[] args = new String[]{&#34;-extdirs&#34;,&#34;/home/tt/workspace/java/nor/deps/&#34;,&#xA;                &#34;-sourcepath&#34;,&#34;/home/tt/workspace/java/nor/src/&#34;,&#xA;                &#34;-6&#34;,&#34;-d&#34;,&#34;/home/tt/workspace/java/nor/testbin/&#34;,&#xA;                &#34;/home/tt/workspace/java/nor/src/org/nutz/template/Start.java&#34;};&#xA;        new org.eclipse.jdt.internal.compiler.batch.Main(new PrintWriter(new ByteArrayOutputStream()),new PrintWriter(new ByteArrayOutputStream()),false,null,null).compile(args);&#xA;    }&#xA;    @Test&#xA;    public void testNorClassloader() throws ClassNotFoundException, MalformedURLException{&#xA;        ClassLoader cl = new NorClassLoader(new URL[]{new File(&#34;/home/tt/workspace/java/nor/testbin/&#34;).toURI().toURL(),&#xA;                new File(&#34;/home/tt/workspace/java/nor/deps/jetty-xml-7.2.2.v20101205.jar&#34;).toURI().toURL()&#xA;        },Thread.currentThread().getContextClassLoader());&#xA;        Class&amp;lt;?&amp;gt; clazz = cl.loadClass(&#34;org.nutz.template.Start&#34;);&#xA;        Assert.assertEquals(&#34;org.nutz.template.Start&#34;, clazz.getName());&#xA;        clazz = cl.loadClass(&#34;org.eclipse.jetty.xml.XmlParser&#34;);&#xA;        Assert.assertEquals(&#34;org.eclipse.jetty.xml.XmlParser&#34;, clazz.getName());&#xA;    }&#xA;    @After&#xA;    public void tearDown(){&#xA;        Files.deleteDir(new File(&#34;/home/tt/workspace/java/nor/testbin/&#34;));&#xA;    }&#xA;}&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    大家把 其中的变量适当替换一下,如果有class文件可以直接用classloader进行加载,&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>nor b.43.4 已经发布了</title>
      <link>https://helao.net/2012/246.html</link>
      <pubDate>2012-05-29 01:27:44 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    终于完成了code generate 功能，不过目前还不支持多表关联的情况，原因：dao层目前还不支持多变关联save和update，需要重写一部分代码&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有自己在脚本方面很欠缺，赶紧弥补一下，学一下bash 和bat命令，目前要能看到tomcat的所有启动脚本，二nor的脚本写出来&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    唉，还有scoffold 功能也要开始做了，有了一些思路，再理顺一些就开始做吧&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>模板生成遇到了$冲突的问题</title>
      <link>https://helao.net/2012/245.html</link>
      <pubDate>2012-05-24 03:26:32 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    开始看freemarker 源码,争取能改一下源码,&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    达到的目标: 1,当变量找不到时,可以通过开关控制是否原样显示,或者显示&#34;&#34;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2,能对$进行转义&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    解决的还不是很完美,看来还是有必要修改freemarker的源码的&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    不过先按照这个思路来处理,generate的功能基本能实现了,预计很快就可以组装起来测试了.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    等这个完成后开始动手最神奇的 scoffold功能&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>拓词的用户和拓展方式</title>
      <link>https://helao.net/2012/244.html</link>
      <pubDate>2012-05-24 01:20:19 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    用户群: 1,有考证需求的人群,用户量很稳定&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2,有心改变的屌丝&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    核心价值: 能帮助用户提高记单词的效率&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    技术壁垒: 不断优化的记忆-推荐算法&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    目标: 扩展用户群,提高用户粘度&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    改进方式: 核心功能暂时没有好的改进思路&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 外围功能: &amp;nbsp;可以考虑添加 你画我猜,来增加用户粘度. 不过需要背单词的人有时间玩游戏吗&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;还有可以考虑国外的填词游戏 ,总感觉不靠普&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 还是专心优化算法和提升服务器性能吧&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>已经打算好去拓词了,我也想干点为国为民的事,不能只是用自己的青春为那些不良商家去剥削</title>
      <link>https://helao.net/2012/243.html</link>
      <pubDate>2012-05-24 10:04:02 +0800</pubDate>
      <description>&lt;p&gt;&lt;span&gt;已经打算好去拓词了,我也想干点为国为民的事,不能只是用自己的青春为那些不良商家去剥削&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>好吧我承认我又纠结了</title>
      <link>https://helao.net/2012/242.html</link>
      <pubDate>2012-05-23 04:22:58 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    1，有一个支付行业基础平台开发，用到的技术应该还不错吧，给的待遇有些低只有 6.5K，年底有两个月工资，可以参加公司内部的评级考核&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2，还有一个小公司拓词，也就是常用的一些技术，对我来说入门可能更快一些，工资有8K，其他的没有&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1，我也需要一个可以提升的平台，第一个公司据说明年要上市，公司居然没有裁人很意外。有以下好处：有了支付行业的基础平台开发经验，可以学到自己想要的技术，也算是镀金了，有明确的评级考核制度，1年为限看能不能冲到高级，也是我这一年的目标&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2，小公司可能会氛围可能会更好一点，待遇上提升有限取决有公司的拉到的投资&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    已经在一个小公司呆过了，也在国企呆过了，换个正规的企业去参观参观&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    在小公司可能接触到的实际技术更多一些，大公司分工很明确，自己也就能清楚大平台的运作流程&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    已经拒了易宝,打算去拓词了,看拓词越久就越喜欢它, 哈哈&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>code生成设计思路</title>
      <link>https://helao.net/2012/239.html</link>
      <pubDate>2012-05-18 02:04:02 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    1，createDomainInfo(domainName) ，取得domain的标准名称和首字符小写名称，文件是否存在，若存在则将java文件进行编译并得到类属性和属性类型&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2，generateDomain ,根据domainName从模板生成即可 java&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    3，generateController &amp;nbsp;： createDomainInfo, &amp;nbsp;从模板生成java文件&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    4，generateView： createDomainInfo, 从模板生成 jsp&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 生成前面几个很简单,但要是生成view 就有些难办了,这需要遍历domain的所有属性,只能通过class文件来实现,要么先对这个进行编译,然后再读取class文件,先考虑手动调用 compile借口吧,用classloader实现一下,若是能实现交叉编译那么就完美了,按照原理应该可以实现, 得到class文件后再考虑下一步的计划,如果有多对多或者一对多的关系,那么在list或者show,或者 edit,save, update 这些地方都需要进行优化,先完成compile再说. dao层的api进行下重写即可完成controller方面的功能, 接下来就是view 页面如何实现create 时如何得到自动关联表的全部值呢,这个应该放到jsp层去考虑,&lt;span style=&#34;background-color:#CCCCCC;&#34;&gt;将dao传到jsp层&lt;/span&gt;(*应该不会产生连接长期占用,dao是在操作时才得到连接,然后操作玩就释放了*)&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有 view页面中用到了class属性的遍历,并需要根据 属性的类型然后生成相应的&amp;lt;input&amp;gt;标签, 既然涉及到遍历那么就应该用freemarker吧,不知道fm 对 类的类型支持的怎么养? 还有一种方案是采用jsp的解析方式对vm进行解析,首先将vm生成java代码,然后编译成类,再执行输出内容这就是最终产生的内容,这个实现方式基于前面的实现,具体实现的代码可以参考一下jetty中jsp产生的代码,不过简单考虑的话直接做出来就是了.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    结论: 有些事不亲自做,你体会不到这其中的难点,只靠泛泛的想一下貌似很简单,要深入一点下去想,揪出细节,才能了解到其中的复杂度,才能估计出可行性和完成的时间&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>redis 入门</title>
      <link>https://helao.net/2012/238.html</link>
      <pubDate>2012-05-18 03:25:38 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    首先下载redis.*. tar.gz包，然后解压&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-bsh linenums&#34;&gt;tar zxf redis.*.tar.gz&#xA;cd redis.*/&#xA;make&lt;/pre&gt;&#xA;&lt;span&gt;&lt;/span&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这时 cd src 可以找到 redis-server 和 redis-cli,直接启动./redis-server &amp;amp; ； 启动 ./redis-cli&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    执行下面的命令 ： ping &amp;nbsp; &amp;nbsp;&amp;gt; pong&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; set a 1&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; get a &amp;gt; &#34;1&#34;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; incr a &amp;gt; &#34;2&#34;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; exit&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    然后关闭 redis-server&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    cd ..; make install 将 redis安装到系统中，执行utils/install-server，将redis安装成服务，可以通过 /etc/init.d/redis-&amp;lt;port&amp;gt; &amp;nbsp;start|stop|restart&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    来快速启动了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>处理action@At时的bug</title>
      <link>https://helao.net/2012/237.html</link>
      <pubDate>2012-05-17 04:41:57 +0800</pubDate>
      <description>&lt;p&gt;&lt;span&gt;&lt;s&gt;处理action的@At时，若controller存在@At则应 则为action设置为 /actionName 不用加controller前缀，否则url匹配就出错了&lt;/s&gt;&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>scaffold实现思路</title>
      <link>https://helao.net/2012/236.html</link>
      <pubDate>2012-05-16 01:47:12 +0800</pubDate>
      <description>&lt;ul&gt;&#xA;    &lt;li&gt;&#xA;        实现效果:&lt;br /&gt;&#xA;在Controller类中添加static boolean scaffold = true;之后,会为该类自动生成show,list,create,save,edit,update&lt;br /&gt;&#xA;,delete,deleteAll及相应的view.如果Controller类中有相应方法覆盖,则执行是应该调用该方法,&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        思路:&lt;br /&gt;&#xA;初始化时得到含有static scaffold == true的controller ,生成show等url和view&lt;br /&gt;&#xA;用filter 在nutzfilter之后拦截,如果满足则去调用通用的方法,并使用freemarker生成view返回值&lt;br /&gt;&#xA;这里需要使用local message才能满足&lt;br /&gt;&#xA;若controller中含有相应方法,则应该拦截其view,为其自动生成,若含有@Ok,则不应拦截&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        详细涉及&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        伪码&#xA;    &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>多线程编程总结</title>
      <link>https://helao.net/2012/235.html</link>
      <pubDate>2012-05-16 12:14:23 +0800</pubDate>
      <description>&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        任务列表, 使用生产者消费者模型就足以, 为了性能考虑,应该有专门的线程监听连接,然后直接添加到任务列表后返回继续监听,由于系统中的内存和线程上下文切换的开销,采用线程池控制运行的线程数.线程循环从任务列表中取得任务并执行&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        日志记录,要求详细的日志记录,在调试和运维期间能更加方便的找出问题原因&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        性能监控,实时的性能监控是高性能程序必备的功能,找出瓶颈然后优化&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        map/reduce模型,针对分布式的,单机可用多任务列表来模拟,核心思想是将大任务分解成几个小任务,然后分发到不同的任务列表中,然后在reduce中将结果进行汇总&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        结合任务列表实现异步,想想nodejs, 也是单线程实现事件分发,来达到异步效果的(这个要好好想想实现思路)&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>checkout googlecode svn to git</title>
      <link>https://helao.net/2012/234.html</link>
      <pubDate>2012-05-15 02:25:40 +0800</pubDate>
      <description>&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;apt-get install&lt;/span&gt; git-core &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;git-svn&lt;/span&gt; ruby rubygems&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;&lt;br /&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;text-align:right;color:#888888;background-color:#EEEEEE;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;                                &lt;br /&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;sudo&lt;/span&gt; gem &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;install&lt;/span&gt; svn2git --source&amp;nbsp;http:&lt;span style=&#34;line-height:1.4em;&#34;&gt;//&lt;/span&gt;gemcutter.org&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;&lt;br /&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;text-align:right;color:#888888;background-color:#EEEEEE;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;                                &lt;br /&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;vim&lt;/span&gt; &lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;tmp&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;authors.txt&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    Then, for each author, you have to add the mapping between their Google Code and GitHub accounts. If a Google Code committer does not exist on GitHub, then you should map it to your own GitHub account.&#xA;&lt;/p&gt;&#xA;&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;text-align:right;color:#888888;background-color:#EEEEEE;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;                                &lt;br /&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                (no author) = Frederick Giasson &lt;fred@f...com&gt;&lt;br /&gt;&#xA;fred@f...com = Frederick Giasson&lt;/fred@f...com&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    The format of this&amp;nbsp;authors.txt&amp;nbsp;file is:&#xA;&lt;/p&gt;&#xA;&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;text-align:right;color:#888888;background-color:#EEEEEE;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;                                &lt;br /&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                Google-Account-Username = Name-Of-Author-On-GitHub&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    Take note of the first Google Code committer&amp;nbsp;(no author)&amp;nbsp;mapping. This link is required for every&amp;nbsp;authors.txt&amp;nbsp;file. This placeholder is used to map the initial commit performed by the Google Code system. (When Google Code initializes a new project, it uses that username for creating the first commit of any project.)&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    When you are done, save the file.&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    Now that set up is complete, you are ready to migrate your project. First, let’s create the folder that will be used to checkout the SVN project on the server, and then to push it on GitHub.&#xA;&lt;/p&gt;&#xA;&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;text-align:right;color:#888888;background-color:#EEEEEE;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;                                &lt;br /&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                &lt;span style=&#34;line-height:1.4em;color:#6E9CBE;&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;tmp&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;mkdir&lt;/span&gt; myproject&lt;br /&gt;&#xA;&lt;span style=&#34;line-height:1.4em;color:#6E9CBE;&#34;&gt;cd&lt;/span&gt; myproject&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    In this tutorial, we have a normal migration scenario. However, your migration scenario may differ from this one. It is why I would suggest you check out the &lt;a href=&#34;https://github.com/nirvdrum/svn2git&#34;&gt;different scenarios that are supported by&amp;nbsp;svn2git&amp;nbsp;document&lt;/a&gt;. Change the following command accordingly. Let’s migrate the Google Code SVN Project into the local Git repository:&#xA;&lt;/p&gt;&#xA;&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;text-align:right;color:#888888;background-color:#EEEEEE;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;                                &lt;br /&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                &lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;var&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;lib&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;gems&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;line-height:1.4em;color:#6D9CBE;&#34;&gt;1.8&lt;/span&gt;&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;bin&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;svn2git http:&lt;span style=&#34;line-height:1.4em;&#34;&gt;//&lt;/span&gt;myproject.googlecode.com&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;svn&lt;/span&gt; &lt;span style=&#34;line-height:1.4em;&#34;&gt;--authors&lt;/span&gt; &lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;tmp&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;authors.txt &lt;span style=&#34;line-height:1.4em;&#34;&gt;--verbose&lt;/span&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    Make sure that no errors have been reported during the process. If it is the case, then refer to the&amp;nbsp;Possible Errors and Fixes&amp;nbsp;section below to troubleshoot your issue.&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    The next step is to create a new GitHub repository where to migrate the SVN project. &lt;a href=&#34;https://github.com/repositories/new&#34;&gt;Go to this GitHub page to create your new repository&lt;/a&gt;. Then you have to configure Git to add a remote link, from the local Git repository you created on your migration computer, to this remote GitHub repository:&#xA;&lt;/p&gt;&#xA;&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;text-align:right;color:#888888;background-color:#EEEEEE;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;                                &lt;br /&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;git remote&lt;/span&gt; add origin &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;git&lt;/span&gt;&lt;span style=&#34;line-height:1.4em;&#34;&gt;@&lt;/span&gt;github.com:you-github-username&lt;span style=&#34;line-height:1.4em;&#34;&gt;/&lt;/span&gt;myproject.git&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;&lt;br /&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    Finally, let’s push the local Git repository master, branches and tags to GitHub. The first thing to push onto GitHub is the SVN’s trunk. It is done by running that command:&#xA;&lt;/p&gt;&#xA;&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;text-align:right;color:#888888;background-color:#EEEEEE;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;git push&lt;/span&gt; &lt;span style=&#34;line-height:1.4em;&#34;&gt;-u&lt;/span&gt; origin master&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    Then, if your project has multiple branches and tags, you can push them, one by one, using the same command. However, you will have to replace&amp;nbsp;master&amp;nbsp;by the name of that branch or tag. If you don’t know what is the exact name of these branches or tags, you can easily list all of them using this Git command:&#xA;&lt;/p&gt;&#xA;&lt;div style=&#34;margin-left:0px;color:#444444;font-family:&#39;Lucida Grande&#39;, Verdana, Arial, sans-serif;text-align:justify;background-color:#FFFFFF;&#34;&gt;&#xA;    &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;        &lt;div style=&#34;margin-left:0px !important;text-align:left;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;color:#E6E1DC;background-color:#2B2B2B;&#34;&gt;&#xA;            &lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; style=&#34;font-size:13px;&#34;&gt;&#xA;                &lt;tbody&gt;&#xA;                    &lt;tr&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;text-align:right;color:#888888;background-color:#EEEEEE;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;&#34;&gt;&#xA;                                &lt;br /&gt;&#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                        &lt;td style=&#34;font-family:Monaco, &#39;Lucida Console&#39;, monospace;font-size:13px;&#34;&gt;&#xA;                            &lt;div style=&#34;margin-left:0px !important;text-align:left;color:#E6E1DC;&#34;&gt;&#xA;                                &lt;span style=&#34;line-height:1.4em;color:#CC7833;&#34;&gt;git show-ref&lt;/span&gt; &#xA;                            &lt;/div&gt;&#xA;                        &lt;/td&gt;&#xA;                    &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;            &lt;/table&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>工作总结</title>
      <link>https://helao.net/2012/233.html</link>
      <pubDate>2012-05-15 06:05:14 +0800</pubDate>
      <description>&lt;p style=&#34;font-family:Verdana, sans-serif, 宋体;font-size:14px;text-align:left;background-color:#F9F9F9;text-indent:2em;&#34;&gt;&#xA;    转眼都工作两年了，回首这两年貌似在公司也没学到多少东西。下面简单说说自己的一些情况吧。&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;font-family:Verdana, sans-serif, 宋体;font-size:14px;text-align:left;background-color:#F9F9F9;text-indent:2em;&#34;&gt;&#xA;    刚从学校毕业时自己只会s2sh，幸运的找到了一家做B2B的公司做J2EE开发，在这个公司开始使用ssh,并学会了使用freemarker、velocity、tiles、spring security，并对spring security的源码进行了深入研究。在工作不忙的时候自己也搭建了LINUX的虚拟机，练习练习基础命令。在偶尔的一天突然对nutz产生了兴趣，小小研究了一下，并在2011年2月用一个月时间做了一个ESHOP开源网店项目。&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;font-family:Verdana, sans-serif, 宋体;font-size:14px;text-align:left;background-color:#F9F9F9;text-indent:2em;&#34;&gt;&#xA;    好景不长，由于我们的B2B交易平台没有产生任何交易量，我们部门被取消了。我也就来到了第二家公司（我现在的公司），这家是做教育方向考试平台的，如汉语能力考试（网传的汉语四六级）、还有教师资格证考试，我部门负责两个项目的报名和考务平台。&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;font-family:Verdana, sans-serif, 宋体;font-size:14px;text-align:left;background-color:#F9F9F9;text-indent:2em;&#34;&gt;&#xA;    面试时面试官（也就是我的老大）跟我吹嘘他们使用groovy基于JVM的动态语言，还有基于groovy的ror开发框架grails，能与java无缝集成。正好这期间我对动态语言感兴趣，于是就来到了该公司。groovy的入门确实挺简单的，经过一个月我基本上就可以熟练使用了。用了grails之后我逐渐了解了ror的思想，也让我了解到了j2ee方面的一些约定。很快就过了使用grails的新鲜劲，开始对系统进行了一次升级，功能方面很简单，也没用到复杂的技术，老大说越简单越安全稳定，主要就是频繁修改页面细节上了，真是改过来改回去，经历了两次考试我就开始崩溃了。&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;font-family:Verdana, sans-serif, 宋体;font-size:14px;text-align:left;background-color:#F9F9F9;text-indent:2em;&#34;&gt;&#xA;    这期间因为老大不想引用其他JAR我也写了几个通用功能如html转pdf，pdf直接生成，excel通用生成，单任务执行列表，多任务定时执行列表等。&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;font-family:Verdana, sans-serif, 宋体;font-size:14px;text-align:left;background-color:#F9F9F9;text-indent:2em;&#34;&gt;&#xA;    这家公司平时的时候工作挺轻松的，于是我有大量的空闲时间来做一些自己感兴趣的事情。在这段时间我完成了nutz4ror开源项目，使nutz支持约定大于配置和添加代码生成功能，能简化开发复杂度、提高开发效率。之后自己有动手写了一个TTCMS内容管理系统，采用nutz4ror+sitemesh3开发，sitemesh3当时只有测试版没有详细文档，于是用了一晚的时间研究了一下sitemesh3的源码,这两个项目的源码均托管在github上。t.feiyan35488.com 这个是我自己的博客网站就是用TTCMS搭建的，服务器采用nginx+2*tomcat。这期间我也将自己的桌面系统换成了linux mint，学习了git、python、nginx、django，看了jetty的源码。&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;font-family:Verdana, sans-serif, 宋体;font-size:14px;text-align:left;background-color:#F9F9F9;text-indent:2em;&#34;&gt;&#xA;    我上大学时对C++、数据结构、编译原理都挺熟的，可惜毕业两年一直在用J2EE，于是都快忘完了。前几天去云云网面试，笔试时有7、8道算法题，我都顺利解答了，到面试环节JAVA部分答得还不错，又问起红黑树和词法分析等看法，于是就挂了。&#xA;&lt;/p&gt;&#xA;&lt;p style=&#34;font-family:Verdana, sans-serif, 宋体;font-size:14px;text-align:left;background-color:#F9F9F9;text-indent:2em;&#34;&gt;&#xA;    我现在对大并发处理和海量数据处理感兴趣，希望能有人提供这方面的工作。如果您对我的简历感兴趣请联系qq:676370540或者发邮件 feiyan35488#gmail.com&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>高并发ThreadPool实现思路</title>
      <link>https://helao.net/2012/232.html</link>
      <pubDate>2012-05-14 02:09:30 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    首先需要实现 ThreadPool接口中 SizeThreadPool 用来控制线程队列的大小&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    属性:&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;ul&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ConcurrentLinkedQueue &amp;nbsp;_threads, // 线程队列&amp;nbsp;,需线程安全&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BlockingQueue &amp;nbsp;_jobs; // 任务队列 , 需线程安全&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AutomicInteger startThread; // 目前运行线程的个数&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;AutomicInteger idleThread &amp;nbsp;// 目前空闲线程的个数&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Object joinLock ; // 用来实现join方法中 的 当前线程等待&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;还有 诸如 maxThreads,minThreads,maxIdleTimeMs,name&#xA;        &lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    方法 :&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;ul&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&#34;background-color:#E53333;&#34;&gt;&amp;nbsp;start()&lt;/span&gt;&lt;span style=&#34;background-color:#E53333;&#34;&gt; *&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&#34;background-color:#E53333;&#34;&gt;&amp;nbsp;stop() *&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&#34;background-color:#E53333;&#34;&gt; &amp;nbsp;interrupt(long id) *&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&#34;background-color:#E53333;&#34;&gt;dispatch(Runnable runnable) &amp;nbsp;*&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&#34;background-color:#E53333;&#34;&gt;&amp;nbsp;join() &amp;nbsp;*&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;getThreads()&amp;nbsp;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;getIdleThreads()&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;isLowOnThreads()&#xA;        &lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Z形遍历二维数组</title>
      <link>https://helao.net/2012/231.html</link>
      <pubDate>2012-05-14 12:52:02 +0800</pubDate>
      <description>&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;static String  sort(int[][] sort){&#xA;        StringBuffer sb = new StringBuffer();&#xA;        &#xA;        int colNums = sort[0].length;&#xA;        int rowNums = sort.length;&#xA;        &#xA;        int maxLength = colNums + rowNums -1;&#xA;        &#xA;        for(int i=0;i&amp;lt;maxLength; i++){&#xA;            &#xA;            // left-down to right-top&#xA;            int col = i&amp;gt;(rowNums-1) ? (i-rowNums+1) :0;&#xA;            int row = i&amp;gt;(rowNums-1) ? (rowNums-1) :i;&#xA;            for(int index =0;index &amp;lt; (i+1) ;index++){&#xA;                int r = row - index;&#xA;                int c = col + index;&#xA;                if(r &amp;lt; 0 || c &amp;gt;(colNums-1)){&#xA;                    break;&#xA;                }else{&#xA;                    sb.append(sort[r][c]).append(&#34;,&#34;);&#xA;                }&#xA;            }&#xA;        }&#xA;        return sb.toString();&#xA;    }&#xA;    static String  sortN(int[][] sort){&#xA;        StringBuffer sb = new StringBuffer();&#xA;        &#xA;        int colNums = sort[0].length;&#xA;        int rowNums = sort.length;&#xA;        &#xA;        int maxLength = colNums + rowNums -1;&#xA;        &#xA;        for(int i=0;i&amp;lt;maxLength; i++){&#xA;            if(i%2 == 1){&#xA;                // left-down to right-top&#xA;                int col = i&amp;gt;(rowNums-1) ? (i-rowNums+1) :0;&#xA;                int row = i&amp;gt;(rowNums-1) ? (rowNums-1) :i;&#xA;                for(int index =0;index &amp;lt; (i+1) ;index++){&#xA;                    int r = row - index;&#xA;                    int c = col + index;&#xA;                    if(r &amp;lt; 0 || c &amp;gt;(colNums-1)){&#xA;                        break;&#xA;                    }else{&#xA;                        sb.append(sort[r][c]).append(&#34;,&#34;);&#xA;                    }&#xA;                }&#xA;            }else{&#xA;                // right-top to left-down&#xA;                int row = i&amp;gt;(colNums-1) ? (i-colNums+1) :0;&#xA;                int col = i&amp;gt;(colNums-1) ? (colNums-1) :i;&#xA;                for(int index = 0;index &amp;lt; (i+1) ; index++){&#xA;                    int r = row + index;&#xA;                    int c = col - index;&#xA;                    if(c &amp;lt; 0 || r &amp;gt;(rowNums -1)){&#xA;                        break;&#xA;                    }else{&#xA;                        sb.append(sort[r][c]).append(&#34;,&#34;);&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;        return sb.toString();&#xA;    }&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>两个任意值整数列 ,交换元素使两个数列的和相差最小</title>
      <link>https://helao.net/2012/230.html</link>
      <pubDate>2012-05-14 12:50:36 +0800</pubDate>
      <description>&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;/**&#xA; * 两个任意值整数列 ,交换元素使两个数列的和相差最小&#xA; * @author tt&#xA; *&#xA; */&#xA;public class TwoArrayTotalLeast {&#xA;&#xA;    static int[] first = {1,3,4,89,32,234,42,12,34,34,123,443,55,66};&#xA;    static int[] second = {1,3,4,89,76,87,34,12,24,64,93,393,59,89};&#xA;    &#xA;    static void sort(){&#xA;        int[] max = null;&#xA;        int[] min = null;&#xA;        int sum1 =0;&#xA;        int sum2 = 0;&#xA;        for(int t : first){sum1 += t;}&#xA;        for(int t : second){sum2 += t;}&#xA;        if(sum1 &amp;lt; sum2){&#xA;            min = first;&#xA;            max= second;&#xA;        }else{&#xA;            max = first;&#xA;            min = second;&#xA;        }&#xA;        while(true){&#xA;            boolean change = false;&#xA;            sum1=0;sum2=0;&#xA;            for(int t : max){sum1 += t;}&#xA;            for(int t : min){sum2 += t;}&#xA;            int sub = (sum1-sum2)/2;&#xA;            if(sub==0) break;&#xA;            &#xA;            int temp = -1;&#xA;            int tempi = -1;&#xA;            int tempj = -1;&#xA;            for(int i=0;i&amp;lt;max.length;i++){&#xA;                for(int j=0;j&amp;lt;min.length ;j++){&#xA;                    if(max[i] &amp;gt; min[j] &amp;amp;&amp;amp; (max[i] - min[j] &amp;lt;= sub) &amp;amp;&amp;amp; (max[i] - min[j]  &amp;gt; temp)){&#xA;                        temp = max[i] - min[j];&#xA;                        tempi = i;&#xA;                        tempj = j;&#xA;                        change = true;&#xA;                    }&#xA;                }&#xA;            }&#xA;            if(change){&#xA;                int t = max[tempi];&#xA;                max[tempi] = min[tempj];&#xA;                min[tempj] = t;&#xA;            }else break;&#xA;        }&#xA;    }&#xA;    public static void main(String[] args) {&#xA;        System.out.println(sum(first));&#xA;        System.out.println(sum(second));&#xA;        sort();&#xA;        System.out.println(sum(first));&#xA;        System.out.println(sum(second));&#xA;        &#xA;    }&#xA;    public static int sum(int[] temp){&#xA;        int result = 0;&#xA;        for(int i : temp){&#xA;            result += i;&#xA;        }&#xA;        return result;&#xA;    }&#xA;}&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>求整型数组中, 能排列的最大的数</title>
      <link>https://helao.net/2012/229.html</link>
      <pubDate>2012-05-14 12:49:22 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    如 34,23,5 应该排列为 5,34,23&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    算法为: 先比较第一位数字 数字大的在前,如果相同按此规则比较下一位&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    当第一次发现有数字位数不够时,则比较较长数字的第一位和当前位,若第一位大则短数字在前,否则反之&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    以下是代码&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public static String test(int[] values){&#xA;        if(values.length == 1){&#xA;            return &#34;&#34;+values[0];&#xA;        }&#xA;        String[] strValues = new String[values.length];&#xA;        int maxLength = 0;&#xA;        for(int i=0;i&lt;values.length;i++){ strvalues[i]=&#34;String.valueOf(values[i]);&#34; if(strvalues[i].length()=&#34;&#34;&gt; maxLength){&#xA;                maxLength = strValues[i].length();&#xA;            }&#xA;        }&#xA;        for(int i=0;i&lt;maxlength;i++){ sort(strvalues,i);=&#34;&#34; }=&#34;&#34; stringbuilder=&#34;&#34; sb=&#34;new&#34; stringbuilder();=&#34;&#34; for(string=&#34;&#34; v=&#34;&#34; :=&#34;&#34; strvalues){=&#34;&#34; sb.append(v).append(&#34;=&#34;&#34; &#34;);=&#34;&#34; return=&#34;&#34; sb.tostring();=&#34;&#34; public=&#34;&#34; static=&#34;&#34; void=&#34;&#34; sort(string[]=&#34;&#34; strvalues,int=&#34;&#34; index){=&#34;&#34; while(true){=&#34;&#34; boolean=&#34;&#34; change=&#34;false;&#34; for(int=&#34;&#34; i=&#34;0;i&amp;lt;strValues.length-1;i++){&#34; string=&#34;&#34; first=&#34;strValues[i];&#34; second=&#34;strValues[i+1];&#34; if(first.length()=&#34;&#34;&gt;= index+1 &amp;amp;&amp;amp; second.length() &amp;gt;= index+1){// 数值大的直接去前边&#xA;                    if(first.substring(0, index).equals(second.substring(0,index)) &amp;amp;&amp;amp; Integer.valueOf(first.substring(index,index+1)) &amp;lt; Integer.valueOf(second.substring(index,index+1))){&#xA;                        strValues[i] = second;&#xA;                        strValues[i+1] = first;&#xA;                        change = true;&#xA;                    }else if(first.substring(0, index).equals(second.substring(0,index)) &amp;amp;&amp;amp;  Integer.valueOf(first.substring(index,index+1)) == Integer.valueOf(second.substring(index,index+1))){&#xA;                        if(first.length()&amp;gt;second.length()){&#xA;                            strValues[i] = second;&#xA;                            strValues[i+1] = first;&#xA;                            change = true;&#xA;                        }&#xA;                    }&#xA;                }else if(first.length() ==index  &amp;amp;&amp;amp; second.length() &amp;gt;index){&#xA;                    if(second.startsWith(first)){&#xA;                        if(Integer.valueOf(second.substring(0,1)) &amp;lt; Integer.valueOf(second.substring(index,index+1))){&#xA;                            strValues[i] = second;&#xA;                            strValues[i+1] = first;&#xA;                            change = true;&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;            if(!change){&#xA;                break;&#xA;            }&#xA;        }&#xA;    }&lt;/maxlength;i++){&gt;&lt;/values.length;i++){&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>云云面试-续</title>
      <link>https://helao.net/2012/228.html</link>
      <pubDate>2012-05-14 09:35:39 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    直接两轮面试,都是问的技术方面,第一轮全是算法,&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1 有两个整型列表,交换元素使得两个列表总和 相差绝对值最小&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2 &amp;nbsp;z字型遍历二维数组&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    第二轮中也都是问的技术方面的细节还有数学方面的知识,对大并发 数据结构 编译原理 等都有涉及&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1 红黑树&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2 词法分析语法分析&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    3 高并发线程池&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    今晚将这个问题总结一下,然后描述简单一些&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>周末看了一会jetty的源码</title>
      <link>https://helao.net/2012/227.html</link>
      <pubDate>2012-05-14 04:33:37 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    感觉确实挺灵活的，各种connector和handler的搭配，默认采用了nio，据说对长连接支持更好一些，而bio对大量短连接支持更稳定一些&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有看了theadPool的源码，再好好研究一下。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有大并发感觉要对系统有一些了解，比如端口，进程，线程切换时的开销、算法、内存等，有了这些指标才能对大并发程序进行量化，并达到理想值&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>云云面试总结</title>
      <link>https://helao.net/2012/226.html</link>
      <pubDate>2012-05-11 03:17:17 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    有两个概念一直是自己没搞清楚的 ， static nested class 和 inner class，&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    再有就是高并发模块或者高度复杂的业务模块，这些我都没有涉及到过，也没从网上找到案例，看来是我对这些东西了解的不够，要不就先看看jetty的并发处理和 jdk中并发处理代码。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    不过确实该好好想想自己以后的发展路线了，是走技术流、还是管理流、或者转行测试、或者回家&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    我对技术更加感兴趣一些，在这个公司虽然工作压力不大，但技术没亮点，升级难度大，对自己发展很没好处，自己也不喜欢这种单调生活。自己应该去找些富有激情的环境，哪怕加班，只要能是自己的技术不断的进步一切都是值得的。不要在荒废时光了。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    我希望能走技术，也算我少时的一个梦吧，我也想用技术去改变世界，趁着自己年轻抓紧时间去拼搏去努力吧。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>CMS结构优化</title>
      <link>https://helao.net/2012/225.html</link>
      <pubDate>2012-05-09 03:37:24 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;文章应该以分类为主，标签为辅。 因此要优化分类和标签内容&lt;/s&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;首页菜单应该能包括页面，自定义链接，分类，标签等&lt;/s&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;应该有用户和权限处理， 这样每篇文章发布时可以定义权限 o(公开),u(私密)&lt;/s&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;分类为： 默认，技术，日记，娱乐，创意，项目管理&lt;/s&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;标签为 : 未执行任务，进行中任务，完成任务，项目名-bug，&lt;/s&gt; &#xA;    &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>0.a.3  bug</title>
      <link>https://helao.net/2012/224.html</link>
      <pubDate>2012-05-09 02:56:51 +0800</pubDate>
      <description>&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;文章评论处，编辑器需要简化 &amp;nbsp;--- close---&lt;/s&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;发表评论后，《发表评论》按钮不可用 &amp;nbsp;--- close--&lt;/s&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;编辑器在编辑文章时，内容中的标签会全部混乱 &amp;nbsp; close &amp;nbsp;&lt;/s&gt;&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>评估项目预算</title>
      <link>https://helao.net/2012/223.html</link>
      <pubDate>2012-05-07 06:37:46 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;white-space:nowrap;&#34;&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:nowrap;&#34;&gt;&lt;a href=&#34;http://nhfb.assn.cn/&#34;&gt;http://nhfb.assn.cn/&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;看看这个仿一个出来，多少钱&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;用户:13554996669&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;密码：123456 &lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:nowrap;&#34;&gt;大概有&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;文章管理&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;图片管理&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;文档管理&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;日程管理&lt;/span&gt;&lt;br /&gt;&#xA;&lt;span style=&#34;white-space:nowrap;&#34;&gt;收支管理 &lt;/span&gt;&lt;br /&gt;&#xA;&lt;div style=&#34;white-space:nowrap;&#34;&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/div&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>0.a.4开发工作安排</title>
      <link>https://helao.net/2012/222.html</link>
      <pubDate>2012-05-07 02:24:39 +0800</pubDate>
      <description>&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;将前台展示view全部合并到一个view中,并添加&amp;lt;编辑&amp;gt;连接&lt;/s&gt; &amp;nbsp; -----ok&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;留言系统,采用验证码, &amp;nbsp;---&lt;/s&gt;- ----ok&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        自&lt;s&gt;定义菜单,添加菜单表&lt;/s&gt; &amp;nbsp; ------ ok&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;添加页面功能, 能评论,要求同2 &amp;nbsp;&lt;/s&gt; &amp;nbsp;--- 先采用一个帖子来代替吧，我真聪明&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;white-space:normal;&#34;&gt;&lt;s&gt;文章添加时,添加keywords,和 自定义url &amp;nbsp;&lt;/s&gt;&lt;/span&gt; &amp;nbsp;暂时不提供该功能&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;优化点样式,增大字体 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/s&gt; &amp;nbsp; &amp;nbsp;等研究了bootstrap.css后再进行修改&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;添加google analyic 查看访问量情况，&lt;/s&gt; 这怎么样防止 爬虫呢,启用iteye反爬虫系统&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
    </item>
    <item>
      <title>nor b.43.3 / b.43.4开发安排</title>
      <link>https://helao.net/2012/220.html</link>
      <pubDate>2012-05-02 07:27:24 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    fixbug ，取消了controller上的At处理，使其直接拼接到method上，否则method是无法方便的进行url映射的 ，---实现版本 b.43.3&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;white-space:normal;&#34;&gt;准备开始做 create-project等模版，还有相应的bat，sh脚本 &amp;nbsp;b.43.4&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    模板ENGINE处理方案: 1, nutz.el, &amp;nbsp; 2,freemark, 3,velocity (貌似对$过敏，这样处理jsp时貌似会有些问题)&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>0.a.3开发工作安排</title>
      <link>https://helao.net/2012/219.html</link>
      <pubDate>2012-05-02 07:19:45 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;添加在线代码编辑 codeMirror &amp;nbsp;不需要在线代码编辑，&lt;/s&gt;&lt;s&gt;可以考虑markdown &lt;/s&gt; 先不考虑，等插件系统构建完成后，再添加&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        添加评论功能，评论需要进行密码验证 ------------ok---------------------&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;修复文章编辑时某些文章会表现出错的bug &lt;/s&gt;已经修复了&lt;span style=&#34;background-color:#E53333;&#34;&gt;-- 1&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;分页采用turn.js,&lt;/s&gt; 不实用，将精力放到功能开发上。&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        优化blog的url，将rewrite放到系统中处理了 ------已经ok，不需要rewrite，直接进行url映射即可&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>点击这个连接时显示不正常</title>
      <link>https://helao.net/2012/218.html</link>
      <pubDate>2012-04-26 01:09:44 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;http://t.feiyan35488.com/admin/news/edit?id=202&#34;&gt;&lt;s&gt;&lt;a href=&#34;http://t.feiyan35488.com/admin/news/edit?id=202&#34;&gt;http://t.feiyan35488.com/admin/news/edit?id=202&lt;/a&gt;&lt;/s&gt;&lt;/a&gt;&lt;s&gt; ,点击这个链接时 显示的不是后台的布局 &amp;nbsp; close&lt;/s&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>添加markdown编辑器</title>
      <link>https://helao.net/2012/217.html</link>
      <pubDate>2012-04-25 03:36:08 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    首先需要学习markdown的语法,然后为kindeditor添加在线代码编辑器 codemirror&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp;添加pagedown编辑器，必要时应对该编辑器进行一些改动-- add by wangc&amp;nbsp;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>解决h2多项目共享的问题</title>
      <link>https://helao.net/2012/216.html</link>
      <pubDate>2012-04-25 03:34:01 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;    &lt;li&gt;&#xA;        貌似可以用混合模式，或者tcp模式来解决 ，明天解决. &lt;span style=&#34;background-color:#009900;&#34;&gt; -----------ok------------------&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        启用auto_server=true混合模式即可，第一个连接的作为embedded applicant, 第二个连接连接时 则会自动开启server模式，仅限同一个连接地址，&lt;span style=&#34;background-color:#009900;&#34;&gt;不能为内存数据库。&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;还有ttcms打包后发布到vps无法正常运行, linux下能正常运行, window下和linux下打包效果一致，看来就是其他原因了，明天继续解决&lt;/s&gt;&lt;s&gt;-------&lt;/s&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;需要保存方法中的变量名，需要在class编译时加入debug信息 即-debug ,ant中为 javac 后加 debug=&#34;on&#34;, 才能启用该功能&lt;/s&gt; &#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;strike&gt;以上两个是jdk编译的问题，启用eclipse的ecj编译器后就没问题了&lt;/strike&gt; &#xA;    &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>项目部署流程</title>
      <link>https://helao.net/2012/215.html</link>
      <pubDate>2012-04-25 08:16:44 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    项目部署流程：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 服务器结构 &amp;nbsp;nginx-- tomcat1（平时不启动，测试机）,tomcat2（一直启动）,static&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 部署时，停掉tomcat1，部署上最新的系统，启动。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 使用ip访问tomcat1验证系统是否正常&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 1，正常，停掉tomcat2，tomcat2部署新系统，启动tomcat2，停掉tomcat1。最后一次测试，部署成功&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp; 2，否，停掉tomcat1，报告错误日志&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &amp;nbsp; &amp;nbsp;&amp;nbsp;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>action无法得到参数</title>
      <link>https://helao.net/2012/214.html</link>
      <pubDate>2012-04-25 08:06:35 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;s&gt;按照nutz b.43的说明，我将action中的 @Param 都去除了，不过却没有得到参数。需要看nutz源码解决，他不做，我做。&lt;/s&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;s&gt;项目编译时需要加上debug参数 , 需要使用eclipse的&lt;span style=&#34;font-size:18px;background-color:#009900;&#34;&gt;ecj&lt;/span&gt;编译器&lt;/s&gt; &#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>chown</title>
      <link>https://helao.net/2012/213.html</link>
      <pubDate>2012-04-23 06:07:42 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    chown -Rv user[:group] file&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    可以改变文件或文件夹的所属用户和所属用户组&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>vps部署工作</title>
      <link>https://helao.net/2012/212.html</link>
      <pubDate>2012-04-23 05:28:31 +0800</pubDate>
      <description>&lt;ul&gt;&#xA;    &lt;li&gt;&#xA;        调整tomcat和db文件的所有者和权限---------ok------------&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        nginx 映射首页到 /news/list &amp;nbsp; &amp;nbsp;---- 没有做&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        将css,img,editor,js等静态文件与项目的只执行文件分离 ---------ok--------&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        采用增量部署法，需要写一个部署的命令行-----未处理&#xA;    &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>急需的基础知识</title>
      <link>https://helao.net/2012/211.html</link>
      <pubDate>2012-04-22 01:12:02 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:18px;&#34;&gt;linux 用户权限，和进程运行级别，及基础知识 &amp;nbsp;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;font-size:18px;&#34;&gt;tomcat7新特性,jsp2.2 和jsp-el2.2&lt;/span&gt; &#xA;    &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>cat , split , od ,wc , head ,tail,dmesg</title>
      <link>https://helao.net/2012/210.html</link>
      <pubDate>2012-04-22 01:51:09 +0800</pubDate>
      <description>&lt;p style=&#34;text-align:justify;&#34;&gt;&#xA;    &lt;ul&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:18px;&#34;&gt;cat 用来显示文件内容&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:18px;&#34;&gt;cat text* &amp;gt; text1 用来合并文件&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:18px;&#34;&gt;cat &amp;gt; text 用输入流创建文件, ctrl+d 表示文件结尾&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:18px;&#34;&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:18px;&#34;&gt;split 分割文件, -l 行数 , -b 字节数, split -l 3 text3 y (y表示分割后文件名前缀，默认是x)&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:medium;&#34;&gt;&lt;span style=&#34;line-height:27px;&#34;&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:18px;&#34;&gt;od ,转储文件&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:18px;&#34;&gt;wc ，可以用来统计 文件的行数，单词数，字节数&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:18px;&#34;&gt;head ,tail ,显示文件开始，结尾, -n 可以指定显示行数&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-family:SimSun;font-size:18px;&#34;&gt;dmesg 显示登录信息&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &lt;p&gt;&#xA;        &lt;span style=&#34;font-family:SimSun;font-size:medium;&#34;&gt;&lt;span style=&#34;line-height:27px;&#34;&gt;&lt;br /&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&#xA;    &lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>echo , exec,uname</title>
      <link>https://helao.net/2012/209.html</link>
      <pubDate>2012-04-21 04:40:06 +0800</pubDate>
      <description>&lt;p&gt;&lt;pre class=&#34;prettyprint lang-bsh linenums&#34;&gt;tt@tt ~/workspace/java/ttcms $ uname&#xA;Linux&#xA;tt@tt ~/workspace/java/ttcms $ uname -s&#xA;Linux&#xA;tt@tt ~/workspace/java/ttcms $ uname -n&#xA;tt&#xA;tt@tt ~/workspace/java/ttcms $ uname -r&#xA;3.0.0-12-generic&#xA;tt@tt ~/workspace/java/ttcms $ uname -v&#xA;#20-Ubuntu SMP Fri Oct 7 14:56:25 UTC 2011&#xA;tt@tt ~/workspace/java/ttcms $ uname -m&#xA;x86_64&#xA;tt@tt ~/workspace/java/ttcms $ uname -o&#xA;GNU/Linux&#xA;tt@tt ~/workspace/java/ttcms $ uname -a&#xA;Linux tt 3.0.0-12-generic #20-Ubuntu SMP Fri Oct 7 14:56:25 UTC 2011 x86_64 x86_64 x86_64 GNU/Linux&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    echo &amp;nbsp;可以接收多个参数,若用引号则表示一个参数，会保留其中的空格&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    命令链接可以用 ; （顺序执行）,&amp;amp;&amp;amp; (需要前面的命令返回0)&amp;nbsp;,||(需要前面的命令返回非零) , 可以用()来表示命令序列&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    常用的环境变量 HOME, SHELL,PWD,$(进程ID)，？（前个命令返回代码） ，PPID（父进程ID）,UID(用户ID)&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    在命令行用VAR1=var1就能进行赋值，但是必须要export VAR1后，才能导出，貌似这样才能在其他进程中使用&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    exec 会在当前进程执行程序， 比如直接执行bash ，会新起新进程&lt;img src=&#34;http://t.feiyan35488.com/editor/plugins/emoticons/images/8.gif&#34; border=&#34;0&#34; alt=&#34;&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    history 查看历史命令, 加参数 n表示 显示最近的n条记录&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    !! 显示就近的记录, &amp;nbsp;！#当前正输入的命令, !String,以string 开头的命令 !?string？ 包含string 的命令&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    命令后加#可以用来注释&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    cd -可用来返回上一个工作目录， CDPATH 可以用来设置默认的工作目录&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    which,type 可以用来查看命令的实际路径&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    whatis 可以用来查看命令的简要功能介绍&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;line-height:2;&#34;&gt;&lt;/span&gt;&#xA;&lt;/p&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>bug and task</title>
      <link>https://helao.net/2012/208.html</link>
      <pubDate>2012-04-21 12:28:30 +0800</pubDate>
      <description>&lt;p&gt;&lt;div&gt;&#xA;    &amp;nbsp; all close&#xA;&lt;/div&gt;&#xA;&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;首页上分类统计的链接不对&lt;/s&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;a href=&#34;http://t.feiyan35488.com/admin/news/edit?id=202&#34; style=&#34;white-space:normal;&#34;&gt;&lt;s&gt;&lt;a href=&#34;http://t.feiyan35488.com/admin/news/edit?id=202&#34;&gt;http://t.feiyan35488.com/admin/news/edit?id=202&lt;/a&gt;&lt;/s&gt;&lt;/a&gt;&lt;span style=&#34;white-space:normal;&#34;&gt;&lt;s&gt; ,点击这个链接时 显示的不是后台的布局&lt;/s&gt;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;s&gt;强烈要求添加评论功能&lt;/s&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;text-align:justify;&#34;&gt;&lt;s&gt;标签、类别的分页链接不对 -----------已修改-----------&lt;/s&gt;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;text-align:justify;&#34;&gt;&lt;s&gt;function/execsql功能的提交action不对，---------------已修改--------------------&lt;/s&gt;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;text-align:justify;&#34;&gt;&lt;s&gt;搜索后，如果是中文则不能正常进行&amp;lt;上一页&amp;gt;下一页 -------------已修改----------------------&lt;/s&gt;&lt;/span&gt;&lt;span style=&#34;text-align:justify;&#34;&gt;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        &lt;span style=&#34;text-align:justify;&#34;&gt;&lt;s&gt;添加批量删除功能 &amp;nbsp;-------------ok------------------------&lt;/s&gt;&lt;/span&gt;&lt;span style=&#34;text-align:justify;&#34;&gt;&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;&lt;br /&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>这个博客(wordpress)要封笔了，转到我自己的cms(ttcms)上了</title>
      <link>https://helao.net/2012/207.html</link>
      <pubDate>2012-04-19 03:35:03 +0800</pubDate>
      <description>&lt;p&gt;我自己写的cms上线了，虽然还很简单，但是已经能发文章了，可以用来管理自己了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>当前工作计划</title>
      <link>https://helao.net/2012/206.html</link>
      <pubDate>2012-04-19 01:47:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;ol&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-size:24px;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&#34;font-size:24px;&#34;&gt;先把精力放到nginx上， basic auth,server&amp;nbsp;&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-size:24px;&#34;&gt;&amp;nbsp;升级nutz4ror&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&#xA;            &lt;span style=&#34;font-size:24px;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&#34;font-size:24px;&#34;&gt;继续ttcms的开发&lt;/span&gt;&#xA;        &lt;/li&gt;&#xA;    &lt;/ol&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>bug1:标题是“新闻列表”</title>
      <link>https://helao.net/2012/3.html</link>
      <pubDate>2012-04-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    文章日期归档，搜索，分类统计，标签统计 的标题都是 “新闻列表”， fix it&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    ----已经修改，并部署了&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>nutz4ror开发计划</title>
      <link>https://helao.net/2012/2.html</link>
      <pubDate>2012-04-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;ol&gt;&#xA;    &lt;li&gt;&#xA;        分包，注意子包的处理 &lt;span style=&#34;background-color:#009900;&#34;&gt;------------完成&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        去掉controller中的所有注解 &lt;span style=&#34;background-color:#009900;&#34;&gt;---------------ok&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        去掉Inject 注解，不用判断，含有public set的直接ioc注入, domain的注解不处理（要不然只能是domain更加复杂）&lt;span style=&#34;background-color:#009900;&#34;&gt;--ok&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        redirect 支持返回&amp;nbsp;message&lt;span style=&#34;background-color:#009900;&#34;&gt; &amp;nbsp;--- ok-----------------------&lt;/span&gt;&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        项目模版，create-project , create-domain,create-controller,create-view， 想办法实现Scaffold 功能&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        url rewrite&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        taglibs ,filters&amp;nbsp;更方便的支持&#xA;    &lt;/li&gt;&#xA;    &lt;li&gt;&#xA;        为domain动态添加各种查询方法-----------------考虑中------------------------------&#xA;    &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;    可以将nor 打包了,基本的约定已经实现了，对ttcms进行升级,同时看看nutz 关于dao 和mvc的新特性&#xA;&lt;/p&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>vps首次文章体验</title>
      <link>https://helao.net/2012/1.html</link>
      <pubDate>2012-04-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    下面分享redirect 带回message功能代码&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    首先在redirect时将referer，message放到session中，如下：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;                String referer = req.getHeader(&#34;Referer&#34;);&#xA;        if(! Strings.isEmpty(message) &amp;amp;&amp;amp; !Strings.isEmpty(referer)){&#xA;            req.getSession().setAttribute(CV.REDIRECT_MESSAGE, message);&#xA;            req.getSession().setAttribute(CV.REDIRECT_OLD_URL, referer);&#xA;        }&lt;/pre&gt;&#xA;然后用filter去识别，当新请求的refer和session中的referer相同时，将session中的message注入到 request中，否则清空session的referer和message值&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    就保证message不会带到别的url中&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    filter代码：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;    HttpServletRequest req = (HttpServletRequest) arg0;&#xA;        String realPath = Mvcs.getRequestPathObject(req).getUrl();&#xA;        if (null != ignorePtn &amp;amp;&amp;amp; !ignorePtn.matcher(realPath).find()) {&#xA;            HttpSession session  = req.getSession(true);&#xA;            String oldUrl = (String) session.getAttribute(CV.REDIRECT_OLD_URL);&#xA;            if(! Strings.isEmpty(oldUrl)){&#xA;                String referer = req.getHeader(&#34;Referer&#34;);&#xA;                if(!(Strings.isEmpty(referer) || ! oldUrl.equals(referer))){&#xA;                    req.setAttribute(CV.REDIRECT_MESSAGE, session.getAttribute(CV.REDIRECT_MESSAGE));&#xA;                }&#xA;                session.setAttribute(CV.REDIRECT_OLD_URL, null);&#xA;                session.setAttribute(CV.REDIRECT_MESSAGE, null);&#xA;            }&#xA;        }&#xA;        arg2.doFilter(arg0, arg1);&#xA;    }&#xA;&#xA;    private static final String IGNORE = &#34;^.+\\.(jsp|png|gif|jpg|js|css|jspx|jpeg|swf)$&#34;;&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>明天将ttcms 部署到vps上</title>
      <link>https://helao.net/2012/205.html</link>
      <pubDate>2012-04-18 09:50:30 +0800</pubDate>
      <description>&lt;p&gt;工作：1, 配置域名解析 t.feiyan35488.com    --ok&#xA;            2,停用ipv6                   --ok&#xA;            3,配置nginx, static 和tomcat 请求分开   --ok&#xA;            4,配置tomcat 的service启动,停止   ---not ok, 不做了，反正这个启动也不算复杂，这里tomcat只能用root用户启动，以后再研究吧&#xA;            5,精简server  -- ok  影响性能的看不出来，python，g++,gcc等开发工具就不用删了&#xA;            6,iptables 启用     -- ok 只开放了 22，80&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>ttcms 已经完成 文章,标签,类别的添加和管理</title>
      <link>https://helao.net/2012/204.html</link>
      <pubDate>2012-04-15 02:23:30 +0800</pubDate>
      <description>&lt;p&gt;ttcms 已经完成 文章,标签,类别的添加和管理   // 完成&#xA;下一步,1,先添加一个security filter，将admin 控制台保护起来&#xA;2,修改添加文章编辑文章页面, media text, 需要支持 code, 分页标签的实现&#xA;3,发布,导入wordpress 的文章。&#xA;4,以后发布文章优先从 这里发,然后从后台同步到 wordpress 中去&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1,采用的是basic 认证   // 完成&#xA;2,media text ,code ,paginate,文章管理， 分类查询，标签查询，按月查询等都已经完成.  // 完成&#xA;按月统计还有些问题: 显示不友好,修改v_date,变为 full_month ,month,count 这样就可以了 // 已经完成&#xA;还有search 有问题,get传中文参数的问题  // 已经完成&#xA;还有个message提示的问题，怎样往回带message提示的问题  // 已经有思路了，下午完成 -- 已经完成&#xA;3,从wordpress 导入 cms功能, 同步发送到 wordpress 功能  这个先不做，还没有思路&#xA;4,发布到 vps中  // 可以考虑发布的事情了&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5,升级nutz4ror 到 nutz 1.b.43&#xA;6,重构该系统-发布&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>xp下清除dns缓存</title>
      <link>https://helao.net/2012/203.html</link>
      <pubDate>2012-04-12 12:34:27 +0800</pubDate>
      <description>&lt;p&gt;ipconfig /flushdns&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>nutz4ror 开发路线</title>
      <link>https://helao.net/2012/202.html</link>
      <pubDate>2012-04-10 08:59:27 +0800</pubDate>
      <description>&lt;pre&gt;1,首先满足分包如controllers,services,domains,utils,filters等&#xA;     1,mvc : controller全部在controllers包中， controller命名规范： YourNameController(如果不用Controller 结尾将不对其进行映射)，方法名随便起&#xA;            所有符合命名规范的Controller中的所有public方法全部会按照一下规范进行映射&#xA;            方法映射的url为   http://youdomain/yourappname/submodulename/yourName/actionName -- &amp;gt; controllers.submodulename.YourNameController.actionName --&amp;gt;&#xA;                  view:     webapp/WEB-INF/views/submodulename/yourName/actionName.jsp&#xA;       默认采用了sitemesh3， 启用sitemesh过滤器后，只需在 actionName.jsp中head处加入meta name=&#34;layout&#34; content=&#34;main&#34; &#xA;则就会自动装饰到 webapp/WEB-INF/templates/main.jsp, sitemesh3的语法去google&#xA;         web等配置文件不能和项目相关,MainModule类默认为MainModule.class ,MainModule在controllers中，可以参考例子进行配置&#xA;     2，ioc :controller，service&#xA;         默认使用单例进行注入， 属性默认使用ioc中的值进行注入（以后可以检查ioc中是否存在）&#xA;         不复杂的代码直接在controller中写，复用的在server中写。 都可以直接注入dao的&#xA;     3， 为redirect 添加了返回message 的特性&#xA;     4， 添加nutz create-project,create-domain,create-filter,generate-controller,generate-view,generate-all, 等模板生成功能&#xA;     5,  自动配置 taglibs&#xA;     6， 自动配置 filter&#xA;     7， url rewrite 功能&#xA;以下功能有时间再说&#xA;----------------------------------------------------------------------------&#xA;2,动态为domain添加find,findAll,executeQuery,executeUpate,delete,save,还有set,get等方法&#xA;4,添加run-app,war,test热部署功能&#xA;5,添加反向工程的功能，根据domain生成表&#xA;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>上周回家了</title>
      <link>https://helao.net/2012/201.html</link>
      <pubDate>2012-04-09 10:43:05 +0800</pubDate>
      <description>&lt;p&gt;上周回家了，不过幸好回家了，发现原来妈妈已经动过手术了，妈妈这几年为我们操劳太多了，也该歇歇了，以后多回去看妈妈，也抓紧时间找个女朋友吧，了了妈妈的心愿.这也间接说明自己的预测还是准点的，以后要坚持自己的判断，要有自信。&#xA;自己长这么大就是太没有自信了，导致自己严重缺乏安全感，当然也不能给别人安全感了，这应该就是自己女朋友离开自己的原因吧。使自己强大起来，自信起来，一个人只有自信和不断的成功，以及不屈服的意志才能改变自己的气质,让自己给别人安全感，才能更好地实现自己的目标&#xA;   看三国上的一段话很有感触： 备素有大志，常结交于豪杰志士；备坚信自己的观点，带领兄弟三人明知是不可为却为之，最终成就自己三分天下的大业&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>ttcms 的目前设计细节</title>
      <link>https://helao.net/2012/200.html</link>
      <pubDate>2012-03-30 02:44:25 +0800</pubDate>
      <description>&lt;p&gt;目前需要完成的功能有： new的增删改和tag,category的增删改&#xA; 后台： new的增加： 选择tag，category，同时也可以通过添加tag和category（全部用id）--需要考虑sql注入的功能&#xA;       new的修改： 与new基本类似&#xA;       new的删除： 删除和批量删除&#xA;       new列表&#xA; 前台： news 列表&#xA;       news 查看&lt;/p&gt;&#xA;&#xA;&lt;p&gt;下一步实现标签云，分类统计，时间统计等小功能&#xA;再下一步实现用户管理+权限&lt;/p&gt;&#xA;&#xA;&lt;p&gt;再下一步实现插件系统&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>bootstrap 前端开发</title>
      <link>https://helao.net/2012/199.html</link>
      <pubDate>2012-03-28 11:35:44 +0800</pubDate>
      <description>&lt;p&gt;bootstrap 是css框架,能将ui的风格统一起来，对不精通样式的开发人员来说，能更加集中精力去关注业务&#xA;bootstrap定制用到了less ，css的预处理技术，并对css增加了继承等一系列高级功能,挺不错的,也就可以去更好的定制css&#xA;好多动态效果都用到了自己的库，又依赖了jquery, 以后可以不用jquery-ui了&#xA;对了都是对html5 和css3的封装， ie6淘汰吧,明天去看看html5的基本属性就行了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>linux下无线驱动不能正常使用的解决办法</title>
      <link>https://helao.net/2012/198.html</link>
      <pubDate>2012-03-24 10:15:59 +0800</pubDate>
      <description>&lt;p&gt;此情况仅适用于linux有无线驱动，但是无法正常连接无线的情况&#xA;以我的think pad e420为例说明:&#xA;首先运行该命令 : $ rfkill list&#xA;0: acer-wireless: Wireless LAN&#xA;    Soft blocked: yes&#xA;    Hard blocked: no&#xA;1: hci0: Bluetooth&#xA;    Soft blocked: no&#xA;    Hard blocked: no&#xA;2: phy0: Wireless LAN&#xA;    Soft blocked: no&#xA;    Hard blocked: no&#xA;3: tpacpi_bluetooth_sw: Bluetooth&#xA;    Soft blocked: no&#xA;    Hard blocked: no&lt;/p&gt;&#xA;&#xA;&lt;p&gt;可以看到acer-wireless 提示 soft blocked :yes ,明显可以看出这个无线网卡的驱动安装错了&#xA;下面我们将这个驱动卸载就行:&#xA;sudo rmmod -f acer-wmi&#xA;sudo rfkill unblock all&#xA;rfkill list all&#xA;再看一遍 看还有没有 acer-wireless,没有的话就说明已经卸载了，然后看一下无线管理那里是否已经能搜到信号了,开心吧&#xA;不过每次开机都要输入这三个命令确实挺烦人的,下面我们彻底来改变这一切吧:&#xA;sudo echo &amp;ldquo;blacklist acer-wmi&amp;rdquo; &amp;gt;&amp;gt; /etc/modprobe.d/blacklist.conf&#xA;我们把acer 驱动加到黑名单中就好了&#xA;然后rfkill unblock all&#xA;将这一行写在/etc/rc.local这个文件的exit 0这一行之前。&#xA;将所有无线模块在开机的时候就将它的状态设置为unblocked&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>每日命令ls df</title>
      <link>https://helao.net/2012/197.html</link>
      <pubDate>2012-03-20 11:37:02 +0800</pubDate>
      <description>&lt;p&gt;　名称:df&#xA;　　使用方式: df [选项]&amp;hellip; [FILE]&amp;hellip;&#xA;　　&#xA;　　显示档案系统的状况，或是看所有档案系统的状况(预设值)&#xA;　　&#xA;　　&#xA;　　-a, --all 包含所有的具有 0 Blocks 的档案系统&#xA;　　--block-size={SIZE} 使用 {SIZE} 大小的 Blocks&#xA;　　-h, --human-readable 使用人类可读的格式(预设值是不加这个选项的&amp;hellip;)&#xA;　　-H, --si 很像 -h, 但是用 1000 为单位而不是用 1024&#xA;　　-i, --inodes 列出 inode 资讯，不列出已使用 block&#xA;　　-k, --kilobytes 就像是 --block-size=1024&#xA;　　-l, --local 限制列出的档案结构&#xA;　　-m, --megabytes 就像 --block-size=1048576&#xA;　　--no-sync 取得资讯前不 sync (预设值)&#xA;　　-P, --portability 使用 POSIX 输出格式&#xA;　　--sync 在取得资讯前 sync&#xA;　　-t, --type=TYPE 限制列出档案系统的 TYPE&#xA;　　-T, --print-type 显示档案系统的形式&#xA;　　-x, --exclude-type=TYPE 限制列出档案系统不要显示 TYPE&#xA;　　-v (忽略)&#xA;　　--help 显示这个帮手并且离开&#xA;　　--version 输出版本资讯并且离开&lt;/p&gt;&#xA;&#xA;&lt;p&gt;　名称 : ls&lt;/p&gt;&#xA;&#xA;&lt;p&gt;　　使用方式 : ls [-alrtAFR] [name&amp;hellip;]&#xA;　　&#xA;　　说明 : 显示指定工作目录下之内容（列出目前工作目录所含之档案及子目录)。&#xA;　　&#xA;　　参数 :&#xA;　　&#xA;　　-a 显示所有档案及目录 (ls内定将档案名或目录名称开头为&amp;rdquo;.&amp;ldquo;的视为隐藏档，不会列出)&#xA;　　-l 除档案名称外，亦将档案型态、权限、拥有者、档案大小等资讯详细列出&#xA;　　-r 将档案以相反次序显示(原定依英文字母次序)&#xA;　　-t 将档案依建立时间之先后次序列出&#xA;　　-A 同 -a ，但不列出 &amp;ldquo;.&amp;rdquo; (目前目录) 及 &amp;ldquo;..&amp;rdquo; (父目录)&#xA;　　-F 在列出的档案名称后加一符号；例如可执行档则加 &amp;ldquo;&lt;em&gt;&amp;rdquo;, 目录则加 &amp;ldquo;/&amp;rdquo;&#xA;　　-R 若目录下有档案，则以下之档案亦皆依序列出&#xA;　　&#xA;　　范例：&#xA;　　列出目前工作目录下所有名称是 s 开头的档案，愈新的排愈后面 :&#xA;　　 ls -ltr s&lt;/em&gt;&#xA;　　&#xA;　　将 /bin 目录以下所有目录及档案详细资料列出 :&#xA;　　 ls -lR /bin&#xA;　　&#xA;　　列出目前工作目录下所有档案及目录；目录于名称后加 &amp;ldquo;/&amp;rdquo;, 可执行档于名称后加 &amp;ldquo;*&amp;rdquo; :&#xA;　　 ls -AF&#xA;　　&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>开始学习jetty的源码，也适当参考tomcat的源码</title>
      <link>https://helao.net/2012/196.html</link>
      <pubDate>2012-03-20 09:27:21 +0800</pubDate>
      <description>&lt;p&gt;深入的学习java，门门通不如一门精。&#xA;同时也要开始cms的代码了，至少先把文章发布模块给完成，布局就采用bootstrap或者blucss等自己再详细看看吧，java高并发系统仍然是值得付出大量精力的目标&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>每日命令  ln,chmod</title>
      <link>https://helao.net/2012/195.html</link>
      <pubDate>2012-03-19 10:45:57 +0800</pubDate>
      <description>&lt;p&gt;　指令名称 : ln&#xA;　　&#xA;　　使用方式 : ln [options] source dist，其中 option 的格式为 :&#xA;　　&#xA;　　说明 : Linux/Unix 档案系统中，有所谓的连结(link)，我们可以将其视为档案的别名，而连结又可分为两种 : 硬连结(hard link)与软连结(symbolic link)，硬连结的意思是一个档案可以有多个名称，而软连结的方式则是产生一个特殊的档案，该档案的内容是指向另一个档案的位置。硬连结是存在同一个档案系统中，而软连结却可以跨越不同的档案系统。&#xA;　　ln source dist 是产生一个连结(dist)到 source，至于使用硬连结或软链结则由参数决定。&#xA;　　&#xA;　　不论是硬连结或软链结都不会将原本的档案复制一份，只会占用非常少量的磁碟空间。&#xA;　　&#xA;　　参数 :&#xA;　　&#xA;　　-f : 链结时先将与 dist 同档名的档案删除&#xA;        -d : 允许系统管理者硬链结自己的目录&#xA;        -i : 在删除与 dist 同档名的档案时先进行询问&#xA;        -n : 在进行软连结时，将 dist 视为一般的档案&#xA;        -s : 进行软链结(symbolic link)&#xA;        -v : 在连结之前显示其档名&#xA;        -b : 将在链结时会被覆写或删除的档案进行备份&#xA;        -S SUFFIX : 将备份的档案都加上 SUFFIX 的字尾&#xA;        -V METHOD : 指定备份的方式&#xA;        --help : 显示辅助说明--version : 显示版本&#xA;　　范例 :&#xA;　　将档案 yy 产生一个 symbolic link : zz&#xA;　　 ln -s yy zz&lt;br /&gt;&#xA;　　将档案 yy 产生一个 hard link : zz&#xA;　　 ln yy xx&#xA;　　&#xA;指令名称 : chmod&#xA;　　&#xA;　　使用权限 : 所有使用者&#xA;　　&#xA;　　使用方式 : chmod [-cfvR] [--help] [--version] mode file&amp;hellip;&#xA;　　&#xA;　　说明 : Linux/Unix 的档案调用权限分为三级 : 档案拥有者、群组、其他。利用 chmod 可以藉以控制档案如何被他人所调用。&#xA;　　&#xA;　　参数 :&#xA;　　&#xA;　　mode : 权限设定字串，格式如下 : [ugoa&amp;hellip;][[+-=][rwxX]&amp;hellip;][,&amp;hellip;]，其中&#xA;　　u 表示该档案的拥有者，g 表示与该档案的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。&#xA;　　+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限。&#xA;　　r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该档案是个子目录或者该档案已经被设定过为可执行。&#xA;　　-c : 若该档案权限确实已经更改，才显示其更改动作&#xA;　　-f : 若该档案权限无法被更改也不要显示错误讯息&#xA;　　-v : 显示权限变更的详细资料&#xA;　　-R : 对目前目录下的所有档案与子目录进行相同的权限变更(即以递回的方式逐个变更)&#xA;　　--help : 显示辅助说明&#xA;　　--version : 显示版本&#xA;　　&#xA;　　范例 :将档案 file1.txt 设为所有人皆可读取 :&#xA;　　 chmod ugo+r file1.txt&#xA;　　&#xA;　　将档案 file1.txt 设为所有人皆可读取 :&#xA;　　 chmod a+r file1.txt&#xA;　　&#xA;　　将档案 file1.txt 与 file2.txt 设为该档案拥有者，与其所属同一个群体者可写入，但其他以外的人则不可写入 :&#xA;　　 chmod ug+w,o-w file1.txt file2.txt&#xA;　　&#xA;　　将 ex1.py 设定为只有该档案拥有者可以执行 :&#xA;　　 chmod u+x ex1.py&#xA;　　&#xA;　　将目前目录下的所有档案与子目录皆设为任何人可读取 :&#xA;　　 chmod -R a+r *&#xA;　　&#xA;　　 此外chmod也可以用数字来表示权限如 chmod 777 file&#xA;　　语法为：chmod abc file&#xA;　　&#xA;　　其中a,b,c各为一个数字，分别表示User、Group、及Other的权限。&#xA;　　&#xA;　　r=4，w=2，x=1&#xA;　　若要rwx属性则4+2+1=7；&#xA;　　若要rw-属性则4+2=6；&#xA;　　若要r-x属性则4+1=7。&#xA;　　&#xA;　　范例：&#xA;　　 chmod a=rwx file&#xA;　　&#xA;　　和&#xA;　　 chmod 777 file&#xA;　　&#xA;　　效果相同&#xA;　　 chmod ug=rwx,o=x file&#xA;　　&#xA;　　和&#xA;　　 chmod 771 file&#xA;　　&#xA;　　效果相同&#xA;　　&#xA;　　若用chmod 4755 filename可使此程序具有root的权限&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>每日一命令   rm,cp</title>
      <link>https://helao.net/2012/194.html</link>
      <pubDate>2012-03-18 11:02:52 +0800</pubDate>
      <description>&lt;p&gt;rm 删除文档&#xA;   参数&#xA;　　-i 删除前逐一询问确认。&#xA;　　-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。&#xA;　　-r 将目录及以下之档案亦逐一删除。&#xA;　　范例：&#xA;　　删除所有C语言程序档；删除前逐一询问确认 :&#xA;　　 rm -i *.c&#xA;　　&#xA;　　将 Finished 子目录及子目录中所有档案删除 :&#xA;　　 rm -r Finished&#xA;cp 命令&#xA;    cp [options] source dest&#xA;　　cp [options] source&amp;hellip; directory&#xA;　　&#xA;　　说明：将一个档案拷贝至另一档案，或将数个档案拷贝至另一目录。&#xA;　　&#xA;　　参数：&#xA;　　&#xA;　　-a 尽可能将档案状态、权限等资料都照原状予以复制。&#xA;　　-r 若 source 中含有目录名，则将目录下之档案亦皆依序拷贝至目的地。&#xA;　　-f 若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>修复win7,linux 双系统启动</title>
      <link>https://helao.net/2012/193.html</link>
      <pubDate>2012-03-17 11:26:42 +0800</pubDate>
      <description>&lt;p&gt;win7下 安装linux后，linux是无法启动的，开机会启动grub resume：&#xA;这是因为 mbr启动grub后，默认引导 hd0,0,而这是ntfs分区，grub不识别，于是就出错了&#xA;首先 输入 set 查看默认的linux启动区&#xA;然后可以通过 ls  (hdx,x)/   来找到linux那个分区&#xA;然后修改为linux的那个分区即可&#xA;root=(hdx,x)&#xA;prefix=/boot/grub&#xA;set root=(hdx,x)&#xA;set prefix=(hdx,x)/boot/grub&#xA;insmod normal&#xA;normal&#xA;进入启动菜单 ，然后 按C进入命令行模式&#xA;继续输入： set root=hdx,x&#xA;          set prefix=(hdx,x)/boot/grub&#xA;          linux /vmlinuz root=/dev/sda7&#xA;          initrd /initrd.img&#xA;          boot&#xA;正常启动linux了&#xA;接下来就修复grub吧&#xA;sudo update-grub&#xA;sudo grub-install /dev/sda&#xA;重启，win7，linux都能启动了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>每日一命令  cat ,grep  &gt;  &gt;&gt;</title>
      <link>https://helao.net/2012/192.html</link>
      <pubDate>2012-03-16 01:00:34 +0800</pubDate>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;是重定向 ，会覆盖目标文件&#xA;&amp;gt; 向目标文件后追加内容&#xA;cat 用来在屏幕显示文件内容，当然也可以通过定向来输出到其他文件&#xA;    同时显示多个文件内容，也可以合并文件&#xA;    -n 显示行号， -b 显示行号，但空白行不显示行号， -s 遇到连续两行以上的空白行，以一个空白行代替&#xA;grep 用来搜索内容，格式：  reg   content&#xA;content 可以用路径代替，这样是搜索带有 reg关键词的文件&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;</description>
    </item>
    <item>
      <title>周计划 3.12-3.17</title>
      <link>https://helao.net/2012/191.html</link>
      <pubDate>2012-03-15 01:47:35 +0800</pubDate>
      <description>&lt;p&gt;重新学习了python的基础知识，能抓取baidu音乐盒的歌曲&#xA;看完了django的初步教程，感觉非常不错，应该继续用下去。 grails用来做类java的大规模开发很不错，django中小规模开发非常棒，大规模开发经验不够&#xA;学习linux的各种基础命令 如 cat ,grep ,这个要做到每日一命令&#xA;学习lua的语法，并完成lua的初步了解&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>linux 服务器管理常用命令</title>
      <link>https://helao.net/2012/190.html</link>
      <pubDate>2012-03-15 01:14:25 +0800</pubDate>
      <description>&lt;p&gt;iostat&lt;/p&gt;&#xA;&#xA;&lt;p&gt;iostat 命令用来显示存储子系统的详细信息，通常用它来监控磁盘 I/O 的情况。要特别注意 iostat 统计结果中的 %iowait 值，太大了表明你的系统存储子系统性能低下。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;meminfo 和 free&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Meminfo 可让你获取内存的详细信息，你可以使用 cat 和 grep 命令来显示 meminfo 信息：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1&#xA;cat /proc/meminfo&#xA;另外你可以使用 free 命令来显示动态的内存使用信息，free 只是给你大概的内存信息，而 meminfo 提供的信息更加详细。例如在 oschina 上的 free 命令执行结果：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;mpstat&lt;/p&gt;&#xA;&#xA;&lt;p&gt;mpstat mpstat是MultiProcessor Statistics的缩写，是实时系统监控工具。其报告与CPU的一些统计信息，这些信息存放在/proc/stat文件中。在多CPUs系统里，其不但能查看所有CPU的平均状况信息，而且能够查看特定CPU的信息。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;再来看看 oschina 上的 mpstat 命令执行结果：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;关于 mpstat 执行结果中的参数意思请参考此贴。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;netstat&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Netstat 和 ps 命令类似，是 Linux 管理员基本上每天都会用的工具，它显示了大量跟网络相关的信息，例如 socket 的使用、路由、接口、协议、网络等等，下面是一些常用的参数：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1&#xA;-a Show all socket information&#xA;2&#xA;-r Show routing information&#xA;3&#xA;-i Show network interface statistics&#xA;4&#xA;-s Show network protocol statistics&#xA;nmon&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nmon, 是 Nigel&amp;rsquo;s Monitor 的缩写，是一个使用很普遍的开源工具，用以监控 Linux 系统的性能。Nmon 监控多个子系统的性能数据，例如处理器的使用率、内存使用率、队列、磁盘I/O统计、网络I/O统计、内存页处理和进程信息。Nmon 也提供了一个图形化的工具：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;要运行 nmon，你可以在命令行中启动它，然后选择要监控的子系统，这些子系统都对应有一个快捷键，例如输入 c 可查看 CPU 信息，m用于查看内存，d用来查看磁盘信息等，你也可以使用 -f 命令将 nmon 的执行结果保存到一个 CSV 文件中，便于日后分析。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在每日的监控工作中，我发现 nmon 是我最常用的工具。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;pmap&lt;/p&gt;&#xA;&#xA;&lt;p&gt;pmap 命令用来报告每个进程占用内存的详细情况，可用来看是否有进程超支了，该命令需要进程 id 作为参数。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ps 和 pstree&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ps 和 pstree 命令是 Linux 系统管理员最好的朋友，都可以用来列表正在运行的所有进程。ps 告诉你每个进程占用的内存和 CPU 处理时间，而 pstree 显示的信息没那么详细，但它以树形结构显示进程之间的依赖关系，包括子进程信息。一旦发现某个进程有问题，你可以使用 kill 来杀掉它。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;sar&lt;/p&gt;&#xA;&#xA;&lt;p&gt;sar 程序是系统监控工具里的瑞士军刀。该程序包含三个工具：sar 用来显示数据，sa1 和 sa2 用来收集数据并保存。sar 可用来显示 CPU 使用率、内存页数据、网络 I/O 和传输统计、进程创建活动和磁盘设备的活动详情。sar 和 nmon 最大的不同就是 sar 跟适合用作长期的监控，而 nmon 可以让你快速的了解系统当前状态。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;strace&lt;/p&gt;&#xA;&#xA;&lt;p&gt;strace 经常被认为是程序员调试的工具，但不止如此。它可以记录进程进行系统调用的详情，因此它也是一个非常好的诊断工具，例如你可以使用它来找出某个程序正在打开某个配置文件。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Strace 也有一个缺陷，但它在跟踪某个进程时会让该进程的性能变得非常差，因此请谨慎使用。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;tcpdump&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Tcpdump 是一个简单、可靠的网络监控工具，用来做基本的协议分析，看看那些进程在使用网络以及如何使用网络。当然，如果你要获取跟详细的信息，你应该使用 Wireshark (下面我们会介绍).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;top&lt;/p&gt;&#xA;&#xA;&lt;p&gt;top 命令显示当前的活动进程，默认它是按消耗 CPU 的厉害程度进行排序，每5秒钟刷新一次列表，你也可以选择不同的排序方式，例如 m 是按内存占用方式进行排序的快捷键。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;uptime&lt;/p&gt;&#xA;&#xA;&lt;p&gt;uptime 命令告诉你这台服务器从开机启动到现在已经运行了多长时间了。同时也包含了从启动到现在服务器的平均负载情况，看看 oschina 的数据：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我已经忘了上次是为什么重启机器了，好像是换了个机柜。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;vmstat&lt;/p&gt;&#xA;&#xA;&lt;p&gt;你可以使用 vmstat 来监控虚拟内存，一般 Linux 上的开发者喜欢使用虚拟内存来获得最佳的存储性能。该命令报告关于内核线程、虚拟内存、磁盘、陷阱和 CPU 活动的统计信息。由 vmstat 命令生成的报告可以用于平衡系统负载活动。系统范围内的这些统计信息（所有的处理器中）都计算出以百分比表示的平均值，或者计算其总和。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在 oschina 上执行 vmstat 的结果：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Wireshark&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Wireshark, 前身是 Ethereal ，是一个网络协议检测程序，让您经由程序抓取运行的网站的相关资讯，包括每一封包流向及其内容、资讯可依操作系统语系看出,方便查看、监控TCP session动态等等.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这里罗列的是大多数最有价值的 Linux 监控程序，当然，你可能还会使用其他的工具，不妨跟大家分享下。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>学习方向</title>
      <link>https://helao.net/2012/189.html</link>
      <pubDate>2012-03-13 09:22:13 +0800</pubDate>
      <description>&lt;p&gt;确定以后的语言学习方向： java,python,lua,javascript,c，groovy 有这些应该就足够了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>贪吃蛇伪码</title>
      <link>https://helao.net/2012/188.html</link>
      <pubDate>2012-03-12 02:28:12 +0800</pubDate>
      <description>&lt;p&gt;初始化==》  确定背景的长宽，确定点的长宽，初始化游戏状态&#xA;选择开始游戏&#xA;选择难度&#xA;游戏初始化  ==》 确定难度的图形，生成数据&#xA;构建游戏开始界面 ==》 绘出图形即可&#xA;开始游戏&#xA;触发上下，左右等事件&#xA;每隔一秒蛇前进一步&#xA;需要判断是否撞墙、撞自己&#xA;撞了就over&#xA;没撞就自己前进，直到over&lt;/p&gt;&#xA;&#xA;&lt;p&gt;生成随机糕点，不能把糕点生成到蛇身上，糕点还可以作为道具进行处理，因此道具要有一个接口&lt;/p&gt;&#xA;&#xA;&lt;p&gt;蛇的身体要有点的概念，这样判断蛇是否撞墙要方便一些&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>sitemesh3 源码分析</title>
      <link>https://helao.net/2012/187.html</link>
      <pubDate>2012-03-01 03:34:18 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    sitemesh3是一个页面布局框架，可以是你的页面无缝的嵌入到一个整体页面中，从而是你的页面看起来风格是一致的。&#xA;我刚开始学习j2ee 时，用的jsp:include , 用iframe来保持页面风格，但是自己总感觉那玩意不好，感觉应该用个什么玩意来组合成一个整体页面比较好，这是参考大公司的页面得出来的，虽然当时已经有sitemesh了，但是我搞不清楚它是做什么用的，与其擦肩而过。&#xA;然后毕业后开始进了一家小公司，开始用tiles+ssh,于是乎繁琐的配置文件一度让我无可奈何。这短时间我已经知道了javaweb 开发是有好多约定的，应用的好是可以省略掉配置文件的，但是我不知道具体的约定有哪些，后来看到了nutz，被它的小巧所吸引，但是它大量采用了注解，依然让我感到困扰，我认为这些注解是可以消失的，我只能开始慢慢接受现状，争取多接触些项目能让我明白这其中的约定是什么。&#xA;再后来就到了现在的公司，这里用的是goovy动态语言，框架是grails，正好我对动态语言比较感兴趣，就打算在这里工作，在熟悉grails的过程我逐渐发现，这就是我要找的东西，基本没有配置文件，写一个controller，写一个view，连dao层也是通用的，太完美了。我喜欢，借这个机会我了解到了那些约定都是什么&#xA;正好在这个公司不是很忙，空闲时间我就在熟悉nutz，我感觉可以把这些约定应用在nutz上，然后nutz就无敌了，开发时简直太完美了，为了这个理想我将url和ioc的一些规则配置到了nutz上，然后还有布局没有搞定，sitemesh的资料太少，于是研究源码吧。言归正传，所有的一切从这里开始 ConfigurableSiteMeshFilter;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;&#xA;public void init(FilterConfig filterConfig) throws ServletException { &#xA;     this.filterConfig = filterConfig; &#xA;     configProperties = getConfigProperties(filterConfig); &#xA;     autoReload = getAutoReload();  &#xA;     logger.config(&#34;Auto reloading &#34; + (autoReload ? &#34;enabled&#34; : &#34;disabled&#34;)); &#xA;     synchronized (configLock) { &#xA;     deployNewFilter(setup()); } initialized = true; &#xA;}&#xA; public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {&#xA;     if (!initialized) {&#xA;        throw new ServletException(getClass().getName() + &#34;.init(FilterConfig) was not called&#34;); } &#xA;       reloadIfNecessary();&#xA;      filter.doFilter(servletRequest, servletResponse, filterChain); &#xA; }&#xA; &lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    sitemesh3是从该filter开始的，首先看init(),了解它初始化过程&#xA;我们看到configProperties = getConfigProperties(filterConfig);，是filter的配置信息，autoReload = getAutoReload(); &amp;nbsp;查看配置文件是否需要自动重加载，默认是开启的。从后边可以知道它是通过对比sitemesh3.xml的最后修改时间来确定是不是需要加载的&#xA;这些只是准备工作，关键点在 deployNewFilter(setup()); ,也就是setup方法中&#xA;setup会创建一个filter，当执行到doFilter（） ,内部实际执行的就是filter.doFilter(),到这里就可以肯定所有核心内容都在这个filter中，包括init和filter的过程，首先我们看init的过程，了解它都需要那些东西，然后再看doFilter中的内容，来决定我们怎么改进它。 &lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt; &#xA;protected Filter setup() throws ServletException {&#xA;    ObjectFactory objectFactory = getObjectFactory();&#xA;    SiteMeshFilterBuilder builder = new SiteMeshFilterBuilder();&#xA;    new PropertiesFilterConfigurator(objectFactory, configProperties).configureFilter(builder);&#xA;    new XmlFilterConfigurator(getObjectFactory(),&#xA;    loadConfigXml(filterConfig, getConfigFileName())).configureFilter(builder);&#xA;    applyCustomConfiguration(builder);&#xA;    return builder.create();&#xA;}&#xA;&lt;/pre&gt; &lt;p&gt;&#xA;一行一行的来讲ObjectFactory里面其实只有一行代码 return class.forName(className) ,就是为类生成对象，同时隔离到那些exception。&#xA;builder 这个类很重要，所有的配置信息都会存到里面，PropertiesFilterConfigurator 这行是将web.xml 中sitemeshfilter中的配置信息，存放到builder中&#xA;下面一行是将sitemesh3.xml中的配置信息，存放到builder中。&#xA;applyCustomConfiguration(builder);这行是为了通过java编码的方式来配置filter&#xA;配置信息有 exclude, decorate, minetype,content-processor,tag-rule-bundle&#xA;exclude 是不需要装饰，decorate是需要装饰的， minetype 是默认返回的页面类型， content-processor 是自定义的页面内容处理器，tag-rule-bundle 是自定义的标签，如等。&#xA;这里就可以看清楚sitemesh配置有三种方式 1,filter,2,sitemesh.xml, 3 java硬编码 ，混合使用的话，优先级从搞到低&#xA;下面我们去详细看看builder中有什么东西 &lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;&#xA; Filter create() {&#xA;        return new SiteMeshFilter(&#xA;                getSelector(),&#xA;                getContentProcessor(),&#xA;                getDecoratorSelector());&#xA;    } &#xA;&lt;/pre&gt;&lt;p&gt;&#xA; 看到没有一个热乎的filter出炉了， 用到了builder的三个属性， selector 选择器，contentProcessor 内容处理器,decoratorSelector 装饰选择器 &#xA;我们继续深入：selector 是关于mineType决定是否拦截 , contentProcessor 是解析标签的  ，decoratorSelector 是关于装饰页面和被装饰页面的关系&#xA;好了，初始化过程基本就看完了，接下来就到正餐时间了，从上面我们没有看到更多的默认配置信息， 下一步就是这里filter.doFilter() ，等把这个过程理完了，然后再把代码通读一遍就能明白了  SiteMeshFilter.class &#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;&#xA;    FilterConfig filterConfig = getFilterConfig();&#xA;    if (filterConfig == null) { // TODO: Is this really necessary? Can we survive without init() being called? &#xA;         throw new ServletException(getClass().getName() + &#34;.init() has not been called.&#34;); } &#xA;    HttpServletRequest request = (HttpServletRequest) servletRequest; &#xA;    HttpServletResponse response = (HttpServletResponse) servletResponse; &#xA;    ServletContext servletContext = filterConfig.getServletContext(); &#xA;    if (!selector.shouldBufferForRequest(request)) { // Optimization: If the content doesn&#39;t need to be buffered,&#xA;    // skip the rest of this filter. &#xA;       filterChain.doFilter(request, response); return; }&#xA;    if (containerTweaks.shouldAutoCreateSession()) { // Some containers (such as Tomcat 4) will not allow sessions&#xA;     // to be created in the decorator. (i.e after the // response has been committed). &#xA;        request.getSession(true); } &#xA;    try { // The main work. &#xA;         bufferAndPostProcess(filterChain, request, response, selector); } &#xA;    catch (IllegalStateException e) { // Some containers (such as WebLogic) throw an IllegalStateException when an error page is served. &#xA;    // It may be ok to ignore this. However, for safety it is propegated if possible. &#xA;       if (!containerTweaks.shouldIgnoreIllegalStateExceptionOnErrorPage()) { throw e; }&#xA;    } catch (RuntimeException e) { &#xA;        if (containerTweaks.shouldLogUnhandledExceptions()) { // Some containers (such as Tomcat 4) swallow RuntimeExceptions in filters.&#xA;       servletContext.log(&#34;Unhandled exception occurred whilst decorating page&#34;, e); }&#xA;       throw e; &#xA;    }&#xA;&lt;/pre&gt;&#xA; &lt;br /&gt;&#xA; &#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;code&gt; &lt;/code&gt;FilterConfig filterConfig = getFilterConfig(); 还记得这是什么时候注入的吗&#xA;!selector.shouldBufferForRequest(request)  初步判断： 是否已经呗sitemesh filter拦截过了， 是否不需要装饰&#xA;if (containerTweaks.shouldAutoCreateSession()) { 是否返回false, 是为适应tomcat4 写的&#xA;接下来看 关键部分  bufferAndPostProcess ，前面几行可以不用看 关键在于：&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;&#xA;     filterChain.doFilter(wrapRequest(request), responseBuffer); &#xA;     CharBuffer buffer = responseBuffer.getBuffer(); // If content was buffered, post-process it. boolean processed = false;&#xA;    if (buffer != null &amp;&amp; !responseBuffer.bufferingWasDisabled()) { &#xA;        processed = postProcess(responseBuffer.getContentType(), buffer, request, response, metaData); } &#xA;    if (!response.isCommitted()) {&#xA;         responseBuffer.preCommit(); } // If no decoratoes applied, and we have some buffered content, write the original. &#xA;    if (buffer != null &amp;&amp; !processed) { &#xA;        writeOriginal(response, buffer, responseBuffer); &#xA;    }&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    省略的几行是封装response，以便得到返回的html内容，还有就是控制response 的状态 如 if_modified_since 等&#xA;buffer是 返回的页面内容，已经被web容器解析过了。&#xA;在postProcess 开始进行装饰，如果没有成功就就buffer直接写入到response中&#xA;看postProcess 方法：&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;&#xA;    WebAppContext context = createContext(contentType, request, response, metaData);&#xA;    Content content = contentProcessor.build(buffer, context);&#xA;    if (content == null) { return false; }&#xA;    String[] decoratorPaths = decoratorSelector.selectDecoratorPaths(content, context);&#xA;    for (String decoratorPath : decoratorPaths) { &#xA;        content = context.decorate(decoratorPath, content); &#xA;   } &#xA;   if (content == null) { return false; } &#xA;   content.getData().writeValueTo(response.getWriter()); return true;&#xA;  &lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;首先用rule规则将内容解析一遍，再找到要装饰的页面，然后用dispatch去解析，取得内容后，用context将被装饰页面和装饰页面一起解析&#xA;接下来我们着重看看一下 contentProccesor.build() 和 context.decorate() 和 context.build() 即可&#xA;就先到这里吧，自己一边看一边写挺累的&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>随笔</title>
      <link>https://helao.net/2012/186.html</link>
      <pubDate>2012-02-27 01:15:26 +0800</pubDate>
      <description>&lt;p&gt;目标： 65公斤&#xA;原理：少吃、多运动&#xA;实行：饿了就多吃些粗粮比如红薯干、水果，多喝些水， 早起可以去锻炼身体，跑步、打球、仰卧起坐等&#xA;     食物一定要限量，吃饭要多菜少肉，水果每天4个不能多吃，一定要把肚子减下去。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>随笔</title>
      <link>https://helao.net/2012/185.html</link>
      <pubDate>2012-02-22 04:03:58 +0800</pubDate>
      <description>&lt;p&gt;从qq空间不小心看到初恋的照片，心里又开始激动起来，应该是心疼。从照片看出她并不是那么高兴，每年就见那么几次，任谁也不高兴，她选的路只能去祝福她。&#xA;刚下定决心把她从我的qq好友中删除了，我不想再心痛，只想简简单单的快乐，追求并不高希望我能如愿。&#xA;从别人对我的评价来看，我过于软弱，不能承担，所以过的很窝囊。我只是避免一些危险而已，也许从小在家呆的时间太长了，不会跟伙伴、朋友处关系了，心里更多的是冷静的思考，太早就没有了那种不顾一切冲动，所以交不上朋友了。看的越多想的越多，心里就越困惑，不知道该不该冲动还是明哲保身。也许我不明白人们的心思，所以思维受到了很大的羁绊。多交朋友吧，今年攒够10万块就行了，别无他求。&#xA;所谓的成长不过是多承担些痛苦，于是就有了吃的苦中苦，方为人上人。 纵观中国历史，轮回越来越快，道德下降的也越来越快。保留自己内心的那份纯真和快乐，去堕落吧&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>随笔</title>
      <link>https://helao.net/2012/184.html</link>
      <pubDate>2012-02-21 02:55:22 +0800</pubDate>
      <description>&lt;p&gt;今天熟悉了一下nutz、sitemesh,打算做一个cms先，然后就了解了一下这周的任务，开始看书了。晚上回去可以看会书，也要开始用mercurial了，早换早省心，还有ubuntu和vi等&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>2012到了，制定一些目标</title>
      <link>https://helao.net/2012/183.html</link>
      <pubDate>2012-02-17 03:11:45 +0800</pubDate>
      <description>&lt;p&gt;新的一年到了，为了鞭策自己不断前行，在此为自己制定一个目标，广泛使用java的流行框架，并从源码级进行分析，需要熟练掌握oracle和h2,方便自己开发和兴趣研究。&#xA;linux始终是开发者的首选平台，以后全面转到ubuntu下进行开发和研究。&#xA;社会不缺少创意，缺少的是执行，锻炼自己的执行力，首先就要蛋定。&#xA;添加一个创意专区，用来记录自己暂时无法实现的的或者已经实现的想法，等以后有时间的时候再进行回顾处理&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>U880 刷bin包教程 （2.3.7）（自己刚刷成功的，上来显摆一下）</title>
      <link>https://helao.net/2011/182.html</link>
      <pubDate>2011-12-15 04:58:52 +0800</pubDate>
      <description>&lt;p&gt;自己看教程刷的，走了一点弯路，记下来留待以后查看。&#xA;首先下载 镜像和单路刷机工具，哦还有驱动。这里已经打包好了，直接下载即可。&#xA;一 、装驱动，第一次刷机需要，以后就不需要了&#xA;首先关机，扣下手机电池，然后再安上，然后按住音量+ 和开机键，等待蓝屏出现，然后用usb线连接电脑和手机。&#xA;电脑出现新的硬件提示，然后选择手动安装，选择手动指定-选择通用总线 - 然后 选择浏览 -（找到下载包里的驱动文件夹下的 wtp.inf 文件），然后确定，等待完成。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;二 、 断开usb连线，扣电池，打开单路刷机程序，选择需要下载的 bin包，然后将手机连上usb到电脑，等待开始下载 能用，然后点击下载，等待下载成功，然后拔出usb，安上电池，开机，第一次等待时间比较长，然后就去体验吧&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>随笔</title>
      <link>https://helao.net/2011/181.html</link>
      <pubDate>2011-12-15 01:46:03 +0800</pubDate>
      <description>&lt;p&gt;开发环境和部署环境不同，自己修改别人的代码还要自己测试，自己还要保证不出bug，开发测试集于一身，还要能承担java在window和linux工作效果一样， 我觉得开那么点工资太少了，这至少是资深程序员做的事。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>随笔</title>
      <link>https://helao.net/2011/180.html</link>
      <pubDate>2011-12-13 04:48:11 +0800</pubDate>
      <description>&lt;p&gt;感觉很不适应外界，总感觉外面发生了什么变化，而自己却一点也不知道。 今天发现以前写的代码中发现了一个很严重的bug，幸亏没有引发灾难。  以后要继续细心，敲代码的感觉还是不错的，以后多用程序的思维去解决问题，我还是要继续专注技术层面。管理这东西，需要各种经历和天赋的。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>逐渐喜欢上了听着歌写代码的日子，自己的代码也要开始写了</title>
      <link>https://helao.net/2011/179.html</link>
      <pubDate>2011-12-01 12:34:28 +0800</pubDate>
      <description>&lt;p&gt;喜欢上了独自一人的自由，有回到了以前的日子，静下来，开开心心的享受这宁静的时光。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>看《大武生》 有感</title>
      <link>https://helao.net/2011/178.html</link>
      <pubDate>2011-11-30 03:23:43 +0800</pubDate>
      <description>&lt;p&gt;千万不要得罪女人，负责不管你多厉害，最后会死的很惨&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>资源</title>
      <link>https://helao.net/2011/177.html</link>
      <pubDate>2011-11-29 02:44:51 +0800</pubDate>
      <description>&lt;p&gt;国家的繁荣昌盛建立在资源之上，国家的欲发达每天消耗的资源就越多，对地球的伤害就越大。 地球是有限的，资源也是有限的，这就是美国不愿意开阔疆土，反而愿意战争的原因，他愿意用纸片去换取别国的资源，来使自己国家过的更好，可地球还能支撑多少年呢？ 可能不多了吧，难怪地球会暴动，会天灾，会战争，它也不想死啊。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;也许地球上的天灾或者战争马上就要爆发了，可又能做些什么呢。 想来想去还是我们2000年封建社会过的比较好。抓紧时间出国吧，以后中美战争爆发，我会对美国总统宣传三个代表和谐社会的&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>阿甘正传</title>
      <link>https://helao.net/2011/176.html</link>
      <pubDate>2011-11-22 09:44:07 +0800</pubDate>
      <description>&lt;p&gt;看了阿甘正传 心里有很多感悟。 人总要有个目标才能更好的活着，人总要运动起来，只要为了自己的理想去努力，总有一天会成功，只要有目标，只要不放弃，一切都会成功的&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>随笔</title>
      <link>https://helao.net/2011/175.html</link>
      <pubDate>2011-11-22 09:39:57 +0800</pubDate>
      <description>&lt;p&gt;左手真善美，右手伟光正&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>理科生的嘴很欠的</title>
      <link>https://helao.net/2011/174.html</link>
      <pubDate>2011-11-21 03:18:53 +0800</pubDate>
      <description>&lt;p&gt;要勇于承认自己的缺点，不要炫耀自己的优点，更不能借此去打击别人。 不要追求完美，完美的人是不存在，善于夸奖别人，可以严格要求自己，但不能把自己的要求加到别人身上。可以吹牛但不要得意忘形。如果别人有缺点可以委婉的告诉他，他一次不听劝就不要再说他，这种人不值得去浪费时间&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>随笔</title>
      <link>https://helao.net/2011/173.html</link>
      <pubDate>2011-11-21 11:23:58 +0800</pubDate>
      <description>&lt;p&gt;知识点： dateFormat yyyyMMdd hhmmss  中 hh 是12小时制， HH 是24小时制，以后要注意&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>甘肃校车惨案已死亡21人</title>
      <link>https://helao.net/2011/172.html</link>
      <pubDate>2011-11-18 10:54:41 +0800</pubDate>
      <description>&lt;p&gt;甘肃校车惨案已死亡21人&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>我想 我知 我有</title>
      <link>https://helao.net/2011/171.html</link>
      <pubDate>2011-11-07 09:50:43 +0800</pubDate>
      <description>&lt;p&gt;我非常喜欢的一句话是： 知我者谓我心忧，不知我者为我何愁。&#xA;其实我就是一理科生，那种脑袋里少根筋的人。所有的事情就像1+1那么简单，不会犹豫，因为事情所有的事情对我来说就像一个二选一的题目，排除掉不能选的那个答案，于是答案就出来了。从来不懂人情事故，不懂照顾别人的感受，所以经常会得罪人，也没有什么朋友。&#xA;我从上小学到上大学，成绩都很稳定，排在前列，但每逢大考必然失利，而且会在我最有把握的科目失利，别人都说这是心理素质差的表现，但是我学了好多课本，不知道怎么去提高心理素质，爸妈也从没有教过我。在他们眼里我学习那么好 是不用管的。我只有不断的学习才能使自己觉得空闲时不那么孤独，可这样我会更加的自闭。&#xA;上了大学我依然这样，只不过我学会了上网，每天沉浸在游戏和小说里，才能觉得这个世界是有别人的，是很大的。 才有那种意气风发、叱咤战场的感觉。 那毕竟是虚幻的，当从网络退出来又必然来面对这残酷的现实，我家里条件不是很好，我又十分的懦弱、内向，没有勇气去做兼职总以为这世界还和以前一样。&#xA;世界早就变了，只是我不肯是承认不肯去改变，我只是默默的坚守着自己心中的那份执着，不知道还有什么用。所有人都要为了点什么活着才行，那样才不会觉得活着没意思。我是应该坚守自己的内心还是应该顺应潮流改变自己，我觉得更应该坚守自己。纵观历史可以得知时势造英雄，气运是一个人不可缺少的一部分，只有默默的走下去就好，何必多言。&#xA;平时玩些自己感兴趣的，不要总是让那些无聊的东西占据你的内心就好。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>有时间看看 stringtoken 这个类是什么原理，貌似在提取有分隔符的字符串的值时非常方便</title>
      <link>https://helao.net/2011/170.html</link>
      <pubDate>2011-11-05 10:36:05 +0800</pubDate>
      <description></description>
    </item>
    <item>
      <title>又写了一个51youba的注册器，感觉很好。</title>
      <link>https://helao.net/2011/169.html</link>
      <pubDate>2011-11-01 12:45:12 +0800</pubDate>
      <description>&lt;p&gt;又写了一个51youba的注册器，感觉很好。再理解一下 代理的原理&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>dos 下编码的问题</title>
      <link>https://helao.net/2011/168.html</link>
      <pubDate>2011-10-31 11:07:07 +0800</pubDate>
      <description>&lt;p&gt;dos下默认的是gbk简体中文编码（936），所以你的程序中是utf-8的，那么就会无法显示编码，也无法通过dos输入中文，倒是有个命令可以将dos下改为utf-8 编码 ，chcp 65001; 这样就可以了，不过仍然会带来其他问题，你自己摸索吧，我的解决方法是能不用就不用，宁可自己写sql文件&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>mysql导入数据</title>
      <link>https://helao.net/2011/167.html</link>
      <pubDate>2011-10-24 04:17:15 +0800</pubDate>
      <description>&lt;p&gt;D:\Program Files\MySQL\MySQL Server 5.5\bin&amp;gt;mysql -uroot -p000000 --default-char&#xA;acter-set=utf8 teachdb &amp;lt; D:\grails-work\ntcts_doc\data\teach_data_2011\teachdb_1&#xA;022.sql&lt;br /&gt;&#xA;这样导数据非常快&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>关于验证码的破解和防破解</title>
      <link>https://helao.net/2011/166.html</link>
      <pubDate>2011-10-18 11:42:33 +0800</pubDate>
      <description>&lt;p&gt;这是项目中遇到的一个事，我打算为项目写一个自动注册用户的小程序，很快就写了一个直接连数据库的，我个人用着还行，但是别人用着很不方便。 于是想写一个基于http的，工欲善其事必先利其器，我找来http抓包工具， 很快写好了post和get方法，接下来可以正式注册了，开始发现注册页面居然有验证码， 去google了一下验证码的破解程序，没有发现基于java的，最后在javaeye发现了一个人写的小程序可以识别一些简单的数字和字母破解时间大概是6、7S的，复杂的就不能识别了，而且这个程序是基于 图像库的方式去识别每个字母或数字，库越大识别时间必然越大，对图像识别这块不是很熟，还是放弃这个方案。&#xA;想来想去没有找到更好的方案，不过发现了一个取巧的方法，如果注册验证码在使用后不被删除的话，就可以多次使用，于是你可以利用这一个验证码去做很多事。 如果验证码使用完就被删除的话（像我这个项目，这块还是我写的，我考虑的太周到了T_T），就不能这样做了。&#xA;我针对这个项目是没有更好的想法了&lt;br&gt;2011-10-20 09:45:40:&lt;br&gt;我要挑战自己 ，做一个图片识别,&lt;br&gt;2011-10-21 09:19:21:&lt;br&gt;找到一个图片识别的程序，识别我那个验证码的正确率为35% ,是可以接受的。 自己对验证码识别也有了一些思路，等做好这个再进行实验,&lt;br&gt;2011-10-25 09:45:08:&lt;br&gt;这个程序已经完成了，我再优化一下程序的结构，使程序能更方便的完成更多的事&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>晚上经常做噩梦，梦到鬼什么的，因为打不过他们所以经常被吓醒</title>
      <link>https://helao.net/2011/165.html</link>
      <pubDate>2011-10-17 10:02:17 +0800</pubDate>
      <description>&lt;p&gt;不知道有什么好办法可以防止做噩梦&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>关于通过无线连接共享上网方法的总结（尚未验证）</title>
      <link>https://helao.net/2011/164.html</link>
      <pubDate>2011-10-14 10:53:37 +0800</pubDate>
      <description>&lt;p&gt;桥接法：主机建立无线临时网络，然后把有线网卡和无线网卡进行桥接（同时选中，然后右键点桥接即可）。 这样其他机器连接到主机后，是和主机平等的，可以和主机一样进行认证连接上网， 也可以通过一台机器使用代理软件来达到共享上网 。 均未验证&lt;/p&gt;&#xA;&#xA;&lt;p&gt;共享连接法： win7和vista ： 建立无线临时网络，填好ssid，选开放式，下一步，然后选择共享internet连接即可。 其他机器直接在无线连接主机可以 上网&#xA;             xp :  建立无线临时网络，然后在有线网卡属性处，选择允许其他网卡共享上网，&#xA;                  这里我看到两种方案： 1， 主机有线ip在为10.1 ，无线网卡为 0.1，网关为10.1，其他机器连接主机无线时需要设置为 0.&lt;em&gt;，网关为0.1 ，这个比较靠谱&#xA;                                      &lt;del datetime=&#34;2011-10-17T01:18:47+00:00&#34;&gt; 2， 主机有线ip 为10.1 ， 无线网卡为0.1 网关不设， 其他机器连接主机无线时设置 为0.&lt;/em&gt; ，网关为10.1 ，应该ping不通网关才对，不靠谱&lt;/del&gt;&#xA;一会测试一下 ，看看结果就知道了&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在win7和vista下无线连接时 会自动进行dhcp，而xp下也会进行自动dhcp，当dhcp不能用时，请使用手动设置 。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;上面那种情况只能保证其他机器可以ping通主机的有线网卡， 但是仍然不能直接上网，仍需使用代理软件，还需要继续理解一下路由的工作机制&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>没有坚持写代码，愧对我的新电脑。借此机会缅怀一下我的宝贝</title>
      <link>https://helao.net/2011/163.html</link>
      <pubDate>2011-10-08 10:01:43 +0800</pubDate>
      <description>&lt;p&gt;4年来她没有给我惹过什么麻烦，4年如一日的对我那样好，从没有什么过分的要求，如今我却弃她而去，喜新厌旧，太可恶了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>每天都能写点东西，确实挺不错的。每天至少要写个小东西，或者100行代码以上</title>
      <link>https://helao.net/2011/162.html</link>
      <pubDate>2011-09-15 09:47:27 +0800</pubDate>
      <description>&lt;p&gt;所谓道，就是能不断前行的路，也就是所谓的道在脚下，只要你一直向前走，不停下，那么这就是你的道，就是条条大道通罗马，成就你的梦想，只要坚持就会胜利，方向真的不是大问题，只是时间长短的问题&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>该给自己充电了，去国图借书，不能浪费了这么好的资源</title>
      <link>https://helao.net/2011/161.html</link>
      <pubDate>2011-08-31 02:20:46 +0800</pubDate>
      <description>&lt;p&gt;该给自己充电了，一是为了提高自己现在生活，二是为了以后的大劫希望能挺过去吧。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>决定了，用python写一个baidu音乐播放器</title>
      <link>https://helao.net/2011/160.html</link>
      <pubDate>2011-08-19 02:04:22 +0800</pubDate>
      <description>&lt;p&gt;决定了，用python写一个baidu音乐播放器。 我不信感受不到python的终极思想&lt;br&gt;2011-11-01 12:56:18:&lt;br&gt;没有写播放器，不过对http协议也算比较熟悉了，写了两个注册器。接下来玩点狠得，写手机应用吧，还有什么没做呢，继续看java核心技术，然后看java编程思想，巩固知识。现在要做的就是看看nutz的最新版本，然后把nutz4ror升级，就ok了,&lt;br&gt;2012-03-30 15:19:31:&lt;br&gt;已经用python把百度音乐的榜单音乐抓到本地了，然后还需要一个壳，再考虑考虑缓存、管道、网关、代理的概念和实现思路,&lt;br&gt;2012-03-07 16:44:33:&lt;br&gt;嗯，可以开始了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>买了个手机真郁闷，非说手机类要有质量问题才给退货</title>
      <link>https://helao.net/2011/159.html</link>
      <pubDate>2011-07-11 02:43:13 +0800</pubDate>
      <description>&lt;p&gt;md，手机太烂了，不用不知道，一用吓一跳。我正在疯狂的用这个手机，争取找出点问题来给我退货。华为太烂了，可能是扩张前期有些不择手段。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>丰富自己的业余生活</title>
      <link>https://helao.net/2011/158.html</link>
      <pubDate>2011-07-04 01:13:51 +0800</pubDate>
      <description>&lt;p&gt;可以选择一个乐器来，主要是编程，每天看书玩游戏不能超过两个小时，要有两个小时的时间出去活动（乐器和锻炼）。编程的时间每天要3-4个小时即可，剩下的时候可以看书。看书不练是混蛋，哈哈&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>php实现 网络工具的几种方式</title>
      <link>https://helao.net/2011/157.html</link>
      <pubDate>2011-06-27 12:01:07 +0800</pubDate>
      <description>&lt;p&gt;1，采用curl， 支持ftp，http，https几种协议&#xA;2，network，fsockopen，支持应用层协议&#xA;3,socks , 基于sock编程，可以方便的实现这种协议。&#xA;4，fopen(url),文件类中的，试用于简单的url内容抓取&lt;/p&gt;&#xA;&#xA;&lt;p&gt;使用curl吧，curl也能在linux上使用，如果不能在需要是有那个socks了。&lt;br&gt;2011-10-12 13:38:58:&lt;br&gt;唉，最终还是买了个vpn。 太懒了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>想要个天文望远镜，这个月实施。</title>
      <link>https://helao.net/2011/156.html</link>
      <pubDate>2011-06-22 04:14:33 +0800</pubDate>
      <description>&lt;p&gt;没钱难倒英雄汉，一扣保险工资立马缩水了1/4。还剩下3000多点，我要存2000，还剩1000多，交了房租就没钱吃饭了。&#xA;每个月我拿出500元来消费，买书和其他自己想要的，用500来满足自己的愿望非常不错了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>打算写一个http和https代理服务器</title>
      <link>https://helao.net/2011/155.html</link>
      <pubDate>2011-06-22 04:07:42 +0800</pubDate>
      <description>&lt;p&gt;用php来写吧，其他的没条件代理国外网站。&#xA;先不考虑缓存的因素，首先评估php下能进行http通信的方法和途径，得出结论后再进一步考虑实现方法，建议提交考虑缓存问题&#xA;我的思路是这样的，首先用php做一个http和https通道，提供http_get/http_post和https_get/https_post 等方法就是http协议的几个方法&#xA;然后提供两个代理文件，一个代理内容（包括修改页面内的路径），另一个负责代理图片和js，css等，这里可以添加缓存。&#xA;就这样一个简单的代理就实现了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>自己的学习安排</title>
      <link>https://helao.net/2011/154.html</link>
      <pubDate>2011-06-22 02:45:14 +0800</pubDate>
      <description>&lt;p&gt;目前需要的是git/svn，版本管理&#xA;ant/maven, 项目构建管理&#xA;vim/emacs/eclipse ,开发平台，编辑器&#xA;php/groovy，grails/java/scala/lua/lisp/go/c++,c&#xA;ubuntu操作系统&lt;/p&gt;&#xA;&#xA;&lt;p&gt;需要做的有界面和多线程/多进程，网络&#xA;如有想法，记录下来随机选择一个语言来做（可结合语言特点来处理）。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>什么是爱情</title>
      <link>https://helao.net/2011/153.html</link>
      <pubDate>2011-06-20 11:50:25 +0800</pubDate>
      <description>&lt;p&gt;爱情是个千古难题，要想解答估计还要去看道德经等圣人之作。这里先放下不谈，只谈自己所见所闻。&#xA;1，我第一个女朋友，刚有女朋友的时候，说实话我还没有准备好，但我和她在一起确实很开心，我们虽然只能两个月见一次，但是我每晚都给她打电话的，她心疼我的钱，嘴上说别总打电话了，难道还怕我跑了不成，我本来没当真，白天每当想起她心里都会暖暖的。到了暑假在我强烈要求下她来到我学校和我一起住，我们晚上都能在一起了。张家口晚上很冷，有一天我就压着被子把她冻了一晚上，早上醒来我特别的心疼。那时候晚上我经常欺负她，有时候中午还要欺负她，那时候连电扇都没有挺可怜的。那段日子我们没有吃过什么好的，都是馒头和便宜的菜，就是她最后走的那天我和她吃了过桥米线，她把汤不小心洒到了脚上，我还大声的对她喊，那时候她特别的委屈。从刚开始我们在一起，她就对我说，我们要是以后谁有了更好的选择，我们谁也不要赖着对方。我就特别的对她不放心，每次她开玩笑说要离开我，我就会心很疼。后来她说我们是不会分的，当时她经常和一个男生聊天，我就很生气，她还说我们是不可能的，后来他们就在一起了，诅咒他们天天打架。&#xA;跟她分手以后，我每天都吃不下饭，一连一个月，整整瘦了30斤，那时候经常忍不住的和她打电话，发短信。后来才慢慢看开，然后就再也不联系她了，这是我的性格：要么是我的，要么跟我没关系。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1.9 下面半年浑浑噩噩的过着，强迫自己变得爱笑起来，每天出门对着镜子要笑一下，然后发现整个早上都很舒服。很可惜依然没有养成爱笑的习惯。笑起来依然很僵硬&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2.0 到那一年冬天，我已经不怎么联系她了，感觉想起她不再心疼了。开始忙于工作，直到放假回家。接下的故事发生在火车上。&#xA;     我和一男同学和两个女同学一起做火车回家，一起定的票，本来我看其中的一个很可爱，想交个朋友呢，结果火车上那个不可爱的说 可爱的那个有男朋友了，自己刚分手。 谁知道自己那时候怎么回事就跟她聊上了，可能感觉有些孤独想找个人做伴，只要有人能陪着自己，自己就会答应。本来自己那是不相信爱情，可惜自己没有坚持。&#xA;     然后我们就聊了起来，然后过年我们在一起，她说没意思谈恋爱，我就一天没理她打算放弃，结果她又开始联系我。我认为她是喜欢我的，结果她只能一阵一阵的，当我好时她就非要闹别扭，于是我就难过了要放弃，她反而来劝我。就这样在反复折腾中过了半年，终于我明白了，对别人再好是没用的，只有让自己好起来才是最重要的，是她们让我明白了钱很重要，实力很重要，要有魄力，要敢做敢为，要学会撒谎。再我学会撒谎之后，她就开始说我不关心她，闹吧，早晚会毁在她手里的。&#xA;3.0 看奋斗，蜗居，裸婚时代有感&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>windows下整合nginx（1.04）和php5.2（5.3）</title>
      <link>https://helao.net/2011/152.html</link>
      <pubDate>2011-06-17 05:12:08 +0800</pubDate>
      <description>&lt;p&gt;首先去nginx官网下载nginx最新版，解压。&#xA;下载window下的php5.2的zip包，不要下载exe的，否则你安不上，将php解压。&#xA;首先配置$nginx_home$/conf/nginx.conf,修改内容&#xA;&lt;pre class=&#34;prettyprint lang-js linenums&#34;&gt;&#xA;server {&#xA;        #端口不解释&#xA;        listen       80;&#xA;        server_name  localhost;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    #charset koi8-r;&#xA;&#xA;    #access_log  logs/host.access.log  main;&#xA;&#xA;    # 修改root为你的项目路径，或静态文件路径&#xA;    location / {&#xA;        root   D:/test-program/phpwww;&#xA;        index  index.html index.htm index.php;&#xA;    }&#xA;&#xA;    #error_page  404              /404.html;&#xA;&#xA;    # redirect server error pages to the static page /50x.html&#xA;    #&#xA;    error_page   500 502 503 504  /50x.html;&#xA;   #  50x.htm所在的路径，同理可以配置404，403等&#xA;    location = /50x.html {&#xA;        root   html;&#xA;    }&#xA;&#xA;    # proxy the PHP scripts to Apache listening on 127.0.0.1:80&#xA;    #&#xA;    #location ~ \.php$ {&#xA;    #    proxy_pass   http://127.0.0.1;&#xA;    #}&#xA;&#xA;    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000&#xA;    #php后缀的处理，将此段前面的#都去掉&#xA;    location ~ \.php$ {&#xA;        root           D:/test-program/phpwww; #这个一定是项目路径&#xA;        fastcgi_pass   127.0.0.1:9000;&#xA;        fastcgi_index  index.php;    #目录的默认页面&#xA;        fastcgi_param  SCRIPT_FILENAME  D:/test-program/phpwww$fastcgi_script_name;## 将此也改为项目路径&#xA;        include        fastcgi_params;&#xA;    }&#xA;&#xA;    # deny access to .htaccess files, if Apache&#39;s document root&#xA;    # concurs with nginx&#39;s one&#xA;    #&#xA;    location ~ /\.ht {&#xA;        deny  all;&#xA;    }&#xA;     ## 静态文件的处理&#xA;location = \.(css|jpg|gif|js|html|htm)$ {&#xA;        root           D:/test-program/phpwww;&#xA;    }&#xA;}&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;将$php-home$/php.ini-recommended改为 php.ini,修改内容如下&#xA;&lt;pre class=&#34;prettyprint lang-js linenums&#34;&gt;; CGI 设置&#xA;cgi.force_redirect = 1&#xA;cgi.fix_pathinfo = 1&#xA;cgi.rfc2616_headers = 1&lt;/p&gt;&#xA;&#xA;&lt;p&gt;error_reporting = E_ALL&#xA;display_errors = On&#xA;extension_dir = &amp;ldquo;C:\php5\ext&amp;rdquo;&#xA;; 找到以上两端，将其前面的；去掉，同时修改其值&lt;/p&gt;&#xA;&#xA;&lt;p&gt;; 动态扩展，可以根据需要去掉 extension 前面的注释 ;&#xA;; 如加载 PDO, MySQL&#xA;extension=php_pdo.dll&#xA;extension=php_pdo_mysql.dll&#xA;; 这些 extension扩展，看你需要那些，就去掉前面的；即可。如果不熟悉那么只要把除了mysql的其他数据库插件不使用外，其他所用的插件都放开。这样确保第一次容易使用，等以后熟悉了再精确修改&lt;/pre&gt;&#xA;下面写了两个批处理用来启动和关闭nginx。&#xA;&lt;pre class=&#34;prettyprint lang-js linenums&#34;&gt;# start&#xA;@echo off&#xA;echo start php fastcgi&amp;hellip;&#xA;RunHiddenConsole.exe ${php-home}/php-cgi.exe -b 127.0.0.1:9000 -c ${php-home}/php.ini&lt;/p&gt;&#xA;&#xA;&lt;p&gt;echo starting nginx&amp;hellip;&#xA;${nginx-home}/nginx.exe&#xA;#start&lt;/p&gt;&#xA;&#xA;&lt;p&gt;#stop&#xA;@echo off&#xA;echo stopping nginx&amp;hellip;&#xA;taskkill /F /IM nginx.exe &amp;gt; nul&#xA;echo stopping php fastcgi &amp;hellip;&#xA;taskkill /F /IM php-cgi.exe &amp;gt; nul&#xA;exit&#xA;#stop&lt;/pre&gt;&#xA;上面用到了一个RunHiddenConsole.exe小程序，用来隐藏dos窗口，只有几K，下载连接&#xA;到此就配置完了，是不是很简单，启动服务器，自己去试试吧，建议下个wordpress来试试。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>关于的一些感想</title>
      <link>https://helao.net/2011/151.html</link>
      <pubDate>2011-06-15 12:12:50 +0800</pubDate>
      <description>&lt;p&gt;首先是自由的，安全的，定制方便的，有丰富的应用。&#xA;所有的组件都可以插拔，包括核心插件。最简单的系统只具备shell命令。&#xA;系统 应分为系统启动代码，核心代码，核心插件，其他插件，各种应用。&#xA;启动代码和核心代码必须存在，核心插件可以内部定制，来达到适应不同机器的目的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;必须能兼容各种低配和高配的机器，必须得有server版。 可以内置各种插件，可以从系统级来支持各种应用&lt;/p&gt;&#xA;&#xA;&lt;p&gt;应该基于一个特定的硬件结构，目前可以基于x86。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Web 设计与开发终极资源大全（下） - Web前端 - ITeye资讯</title>
      <link>https://helao.net/2011/149.html</link>
      <pubDate>2011-06-15 10:06:59 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.iteye.com/news/13890-web-design-source&#34;&gt;Web 设计与开发终极资源大全（下） - Web前端 - ITeye资讯&lt;/a&gt;.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>使用Fusion Charts制作报表（dom4j生成XML） - 积累每一天,Java多一点 - ITeye技术网站</title>
      <link>https://helao.net/2011/148.html</link>
      <pubDate>2011-06-15 10:04:31 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;http://sarin.iteye.com/blog/711494&#34;&gt;使用Fusion Charts制作报表（dom4j生成XML） - 积累每一天,Java多一点 - ITeye技术网站&lt;/a&gt;.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>10个免费的图表生成代码 - 非技术 - ITeye资讯</title>
      <link>https://helao.net/2011/147.html</link>
      <pubDate>2011-06-15 10:03:23 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.iteye.com/news/2592&#34;&gt;10个免费的图表生成代码 - 非技术 - ITeye资讯&lt;/a&gt;.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>SVN，HG，GIT命令对照</title>
      <link>https://helao.net/2011/146.html</link>
      <pubDate>2011-06-10 03:39:37 +0800</pubDate>
      <description>&lt;p&gt;SVN，HG，GIT命令对照&lt;/p&gt;&#xA;&#xA;&lt;p&gt;SVN，HG，GIT命令对照 SVN，HG，GIT是三种常见的版本控制系统，本文简单列出一些相似的操作命令。当然，三种系统各有特点，严格的对应关系是没有的。 1，第一次下载，包括源码和版本库： svn checkout &lt;a href=&#34;http://path/to/repo&#34;&gt;http://path/to/repo&lt;/a&gt; repo_name hg clone &lt;a href=&#34;http://path/to/repo&#34;&gt;http://path/to/repo&lt;/a&gt; repo_name git glone &lt;a href=&#34;http://path/to/repo&#34;&gt;http://path/to/repo&lt;/a&gt; repo_name或者&lt;/p&gt;&#xA;&#xA;&lt;p&gt;SVN，HG，GIT命令对照 SVN，HG，GIT是三种常见的版本控制系统，本文简单列出一些相似的操作命令。当然，三种系统各有特点，严格的对应关系是没有的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1，第一次下载，包括源码和版本库：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svn checkout &lt;a href=&#34;http://path/to/repo&#34;&gt;http://path/to/repo&lt;/a&gt; repo_name&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg clone &lt;a href=&#34;http://path/to/repo &#34;&gt;http://path/to/repo &lt;/a&gt; repo_name&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git clone &lt;a href=&#34;http://path/to/repo&#34;&gt;http://path/to/repo&lt;/a&gt; repo_name或者git clone git://path/to/repo repo_name&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2，下载服务器上最新的更新：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svn update&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg pull &amp;amp;&amp;amp; hg update -C&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git pull&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3，检出某个修订版本&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svn checkout -r &amp;lt;rev&amp;gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg update -C -r &amp;lt;rev&amp;gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git reset –hard -r &amp;lt;rev&amp;gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4，新增被跟踪文件&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svn add /path/to/file&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg add /path/to/file&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git add /path/to/file&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4，移除被跟踪文件&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svn rm /path/to/file&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg remove /path/to/file&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git rm /path/to/file&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5，生成补丁&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svn diff  &amp;gt;patch_file&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg diff &amp;gt;patch_file&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git diff &amp;gt;patch_file&lt;/p&gt;&#xA;&#xA;&lt;p&gt;6，提交更改&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svn commit&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg commit&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git commit&lt;/p&gt;&#xA;&#xA;&lt;p&gt;6，查看当前状态&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svn info&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg status&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git status&lt;/p&gt;&#xA;&#xA;&lt;p&gt;7，查看修订记录&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svn log&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg log&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git log&lt;/p&gt;&#xA;&#xA;&lt;p&gt;8，启动服务器&lt;/p&gt;&#xA;&#xA;&lt;p&gt;svnserve -d&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hg serve -p 8002 &amp;amp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;git daemon –base-path=/path/to/repo –export-all &amp;amp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;通过&lt;a href=&#34;http://tech.16c.cn/svnsy/20100112/17492.html&#34;&gt;SVN，HG，GIT命令对照 - 联城技术网&lt;/a&gt;.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>关于社会人文的一些感想</title>
      <link>https://helao.net/2011/145.html</link>
      <pubDate>2011-06-10 10:59:36 +0800</pubDate>
      <description>&lt;p&gt;人民的守法程度永远建立在执法的力度和严谨之上。从来没有过路不拾遗、夜不闭户，人心是最难掌握的。比如周文王治下的 画地为牢，这个确实存在。这里是有原因的，因为周文王发明了后天64八卦，如果你从牢里跑了，他便成算出你的位置，调大军抓你回来，加重罪行。刚开始的时候同样没人信，抓了几回之后就不行了，并不是说当时的民风好。 当然周文王还算比较爱民。不过这都不是关键因素，一切的原因都在万物的气运上，气运好就能发财当大官，但是这个气运貌似又是和实力挂钩的，只要你又足够的实力，上天就都给你的气运。看来上天也喜欢找软柿子捏。从这里看学习天地命理，增强自己身体素质这是非常有必要的，必须要沟通天地，否则天地之灾不可避免，当你能沟通天地时就可以避免这些从而活的更长一些。只有不断的强大自己才是正途，任何想不劳而获的做法最终都会自食其果&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>jFreeChart使用总结 - MatthewChen Piscesky - ITeye技术网站</title>
      <link>https://helao.net/2011/144.html</link>
      <pubDate>2011-06-08 12:00:54 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;http://piscesky.iteye.com/blog/282103&#34;&gt;jFreeChart使用总结 - MatthewChen Piscesky - ITeye技术网站&lt;/a&gt;.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Java图表解决方案：Jfreechart - 小何贝贝的技术空间 - 51CTO技术博客</title>
      <link>https://helao.net/2011/142.html</link>
      <pubDate>2011-06-08 10:31:17 +0800</pubDate>
      <description>&lt;p&gt;转载 ：&lt;a href=&#34;http://babyhe.blog.51cto.com/1104064/381128&#34;&gt;Java图表解决方案：Jfreechart - 小何贝贝的技术空间 - 51CTO技术博客&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;span style=&#34;color: #555555; font-family: 宋体, &#39;Arial Narrow&#39;, arial, serif; line-height: 28px; font-size: 14px;&#34;&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;为了创建一个可以在web浏览器上查看到图表一般有两种做法：第一种就是使用applet利用java本身对图形的支持来显示一个图表；第二 种就是直接在web服务器端生成好图表图片文件后发送给浏览器。第一种方式显然对于客户端要求太高，随着现在主流浏览器放弃对JAVA的支持后，这种方式 只适合一些局域网的应用，而对于因特网的环境就显得不太适合。因此我们下面将介绍一个JAVA的图表引擎JFreeChart用来产生基于WEB的图表。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; JFreeChart 项目简介 JFreeChart是开放源代码站点SourceForge.net上的一个JAVA项目，它主要用来各种各样的图表，这些图表包括：饼图、柱状图(普 通柱状图以及堆栈柱状图)、线图、区域图、分布图、混合图、甘特图以及一些仪表盘等等。这些不同式样的图表基本上可以满足目前的要求。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;二、JFreeChart获取。&lt;/strong&gt; &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; JFreeChart 是JFreeChart公司在开源网站SourceForge.net上的一个项目，该公司的主要产品有如下： &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 1.JFreeReport ：报表解决工具 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 2.JFreeChart:Java 图形解决方案（Application/Applet/Servlet/Jsp） &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 3.JCommon ：JFreeReport和JFreeChart的公共类库 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 4.JFreeDesigner ：JFreeReport的报表设计工具 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 我们可以从jfree官方网站上获取最新版本和相关资料（但是jfree的document需要40美金才能获取）， &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 获取地址：&lt;a href=&#34;http://www.jfree.org/jfreechart/index.html（同时可以获得简明介绍） &#34;&gt;http://www.jfree.org/jfreechart/index.html（同时可以获得简明介绍） &lt;/a&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 我们以当前最新版本：jfreechart-1.0.1.zip为例子进行说明。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;三、JFreeChart配置安装&lt;/strong&gt; &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 1 、解压jfreechart-1.0.1.zip.zip到指定位置，其中source是jfreechart的源码，jfreechart-1.0.1-demo.jar   是例子程序，可以先运行一下看看各种效果，就知道他的nb之处了。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 2 、为了配置成功，我们需要关注的文件有如下三个： &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 设置classpath。加入下面三个jar包。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; jfreechart-1.0.1.jar 、jcommon-1.0.0.jar、gnujaxp.jar &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 加上第三个jar包有时web.xml会报错，把它去掉就好了。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 至此jfreechart的配置就完成了，下面就可以进行jfreechart的开发了。这里值得提出的是jfreechart的类&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 结构设计前后兼容性不是很好，不同版本的jfreechart中类库结构可能不一样，有时候可能需要查源码。如果是中文显示的时候可能依据观感需要改变源码的字体。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;四、JFreeChart功能介绍 &lt;/strong&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; JFreeChart 目前是最好的java图形解决方案，基本能够解决目前的图形方面的需求，主要包括如下几个方面：&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; pie   charts   (2D   and   3D) ：饼图（平面和立体） &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; bar   charts   (regular   and   stacked,   with   an   optional   3D   effect) ：柱状图 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; line   and   area   charts ：曲线图 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; scatter   plots   and   bubble   charts &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; time   series,   high/low/open/close   charts   and   candle   stick   charts ：时序图 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; combination   charts ：复合图 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; Pareto   charts &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; Gantt   charts ：甘特图 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; wind   plots,   meter   charts   and   symbol   charts &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; wafer   map   charts &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; ( 态图表,饼图(二维和三维)   ,   柱状图   ( 水平,垂直),线图,点图,时间变化图,甘特图,   股票行情图,混和图,   温度计图,   刻度图等常用商用图表) &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 图形可以导出成PNG和JPEG格式，同时还可以与PDF和EXCEL关联 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; JFreeChart 核心类库介绍： &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 研究jfreechart源码发现源码的主要由两个大的包组成：org.jfree.chart,org.jfree.data。其中前者主要与图形 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 本身有关，后者与图形显示的数据有关。具体研究如果大家有兴趣的话可以自己研究    。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 核心类主要有： &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; org.jfree.chart.JFreeChart ：图表对象，任何类型的图表的最终表现形式都是在该对象进行一些属性的定制。JFreeChart引擎本身提供了一个工厂类用于创建不同类型的图表对象 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; org.jfree.data.category.XXXDataSet: 数据集对象，用于提供显示图表所用的数据。根据不同类型的图表对应着很多类型的数据集对象类 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; org.jfree.chart.plot.XXXPlot ：图表区域对象，基本上这个对象决定着什么样式的图表，创建该对象的时候需要Axis、Renderer以及数据集对象的支持 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; org.jfree.chart.axis.XXXAxis ：用于处理图表的两个轴：纵轴和横轴 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; org.jfree.chart.render.XXXRender ：负责如何显示一个图表对象 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; org.jfree.chart.urls.XXXURLGenerator: 用于生成Web图表中每个项目的鼠标点击链接 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; XXXXXToolTipGenerator: 用于生成图象的帮助提示，不同类型图表对应不同类型的工具提示类 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 个人感觉JFreeChart可以满足大部分图片创建的需要，美中不足的是：对字体的设置做的不够好，特别是使用中文的时候字体很不清晰。因为这个原因建议你自己去修改他的源代码，最好使用properties文件去设置字体.还有就是文档要钱所以要多花点时间去看源代码。或多上社区. &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;五．开始开发 &lt;/strong&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt; 对JfreeChart有了初步了解并做好准备工作之后，开始作例子程序试验。在这里我只介绍饼图的做法，而这张图采用不同的方式进行输出，其他类型的图片可以参考jfreechart提供的例子，做法都差不多。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;span style=&#34;color: red; padding: 0px; margin: 0px;&#34;&gt;1） 直接生成图片&lt;/span&gt; &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PieChartPicture { &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;static&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;void&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; main(String[] args) &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;{ &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PieDataset dataset = getDataSet(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; JFreeChart chart = ChartFactory.createPieChart3D( &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 项目进度分布&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// chart title &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; dataset,&lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// data &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// include legend &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;false&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PiePlot3D  plot=(PiePlot3D)chart.getPlot(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// 图片中显示百分比:默认方式 &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//plot.setLabelGenerator(new           StandardPieSectionLabelGenerator(StandardPieToolTipGenerator.DEFAULT_TOOLTIP_FORMAT)); &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// 图片中显示百分比:自定义方式，{0} 表示选项， {1} 表示数值， {2} 表示所占比例 ,小数点后两位 &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; plot.setLabelGenerator(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; StandardPieSectionLabelGenerator(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;rdquo;{0}={1}({2})&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, NumberFormat.getNumberInstance(), &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; DecimalFormat(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;0.00%&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;))); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// 图例显示百分比:自定义方式， {0} 表示选项， {1} 表示数值， {2} 表示所占比例 &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; plot.setLegendLabelGenerator(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; StandardPieSectionLabelGenerator(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;rdquo;{0}={1}({2})&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;)); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// 设置背景色为白色 &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;chart.setBackgroundPaint(Color.white); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// 指定图片的透明度(0.0-1.0) &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; plot.setForegroundAlpha(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;.0f); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// 指定显示的饼图上圆形(false)还椭圆形(true) &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;plot.setCircular(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// 设置图标题的字体 &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;Font font = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; Font(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 黑体&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,Font.CENTER_BASELINE,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;TextTitle title = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; TextTitle(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 项目状态分布&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;title.setFont(font); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;chart.setTitle(title); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;FileOutputStream fos_jpg = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;try&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; fos_jpg=&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; FileOutputStream(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;D:\ 项目状态分布.jpg&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ChartUtilities.writeChartAsJPEG(fos_jpg,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,chart,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;640&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;480&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; fos_jpg.close(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;catch&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; (Exception e) { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; } &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;private&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;static&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PieDataset getDataSet() { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;DefaultPieDataset dataset = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; DefaultPieDataset(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;dataset.setValue(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 市场前期&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; Double(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;)); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;dataset.setValue(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 立项&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; Double(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;15&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;)); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;dataset.setValue(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 计划&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; Double(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;)); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;dataset.setValue(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 需求与设计&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; Double(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;)); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;dataset.setValue(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 执行控制&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; Double(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;35&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;)); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;dataset.setValue(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 收尾&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; Double(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;)); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;dataset.setValue(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 运维&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; Double(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;)); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;return&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; dataset; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;span style=&#34;color: red; padding: 0px; margin: 0px;&#34;&gt;2) 采用servlet和struts的action方式输出 &lt;/span&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;采用这种方式输出，不用生成图片。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;A ．servlet输出 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PieByServlet &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;extends&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; HttpServlet{ &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;void&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; service(ServletRequest req, ServletResponse res) &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;throws&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ServletException, IOException &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;{ &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; res.setContentType(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;image/jpeg&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PieDataset dataset = getDataSet(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; JFreeChart chart = ChartFactory.createPieChart3D( &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 水果饼图&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// chart title &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; dataset,&lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// data &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// include legend &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;false&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//设置图表属性 &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// 输出图片 &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ChartUtilities.writeChartAsJPEG(res.getOutputStream(),&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,chart,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;800&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;600&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;B ．struts的action方式输出 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;只将这条语句加上try catch即可，并返回null。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;try&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;{ &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;ChartUtilities.writeChartAsJPEG(response.getOutputStream(),&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,chart,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;800&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;600&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; } &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;catch&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; (Exception e) { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;return&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;; &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;其实采用这两种方式与生成图片的方式改动并不大 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;加上语句response.setContentType(&amp;ldquo;image/jpeg&amp;rdquo;); &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;ChartUtilities.writeChartAsJPEG(new FileOutputStream(&amp;ldquo;D:\ 项目状态分布.jpg&amp;rdquo;);,100,chart,640,480,null); &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;文件流改成response的输出流就可以了 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;hartUtilities.writeChartAsJPEG(response.getOutputStream(),100,chart,800,600,null); &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;span style=&#34;color: red; padding: 0px; margin: 0px;&#34;&gt;3）jsp＋servlet＋javabean方式&lt;/span&gt; &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;1. Create ChartViewer servlet &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ChartViewer &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;extends&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; HttpServlet { &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;void&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; init() &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;throws&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ServletException { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//Process the HTTP Get request &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;void&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; doGet(HttpServletRequest request, HttpServletResponse response) &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;throws&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ServletException, IOException { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// get the chart from session &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;HttpSession session = request.getSession(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;BufferedImage chartImage = (BufferedImage) session.getAttribute(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;chartImage&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// set the content type so the browser can see this as a picture &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;response.setContentType(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;image/png&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// send the picture &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;PngEncoder encoder = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PngEncoder(chartImage, &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;false&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;response.getOutputStream().write(encoder.pngEncode()); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//Process the HTTP Post request &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;void&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; doPost(HttpServletRequest request, HttpServletResponse response) &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;throws&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ServletException, IOException { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;doGet(request, response); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//Process the HTTP Put request &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;void&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; doPut(HttpServletRequest request, HttpServletResponse response) &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;throws&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ServletException, IOException { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//Clean up resources &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;void&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; destroy() { } &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;2. Create a servlet map in web.xml &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;?xml version=&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;1.0&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; encoding=&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;UTF-8&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;?&amp;gt; &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;web-app&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &amp;lt;servlet&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &amp;lt;servlet-name&amp;gt;ChartViewer&amp;lt;/servlet-name&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &amp;lt;servlet-&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;gt;myapp.webwork.servlets.ChartViewer&amp;lt;/servlet-&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;/servlet&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;servlet-mapping&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;servlet-name&amp;gt;ChartViewer&amp;lt;/servlet-name&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;url-pattern&amp;gt;/servlet/ChartViewer&amp;lt;/url-pattern&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;/servlet-mapping&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;/web-app&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;3. Create a chart in a java bean (Pie3DDemo.java) &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; Pie3DDemo { &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;private&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; DefaultPieDataset getDataset() { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// categories&amp;hellip; &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;String[] section = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; String[] { &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Jan&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Feb&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Mar&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Apr&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;May&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Jun&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Jul&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Aug&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Sep&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Oct&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Nov&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Dec&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; }; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// data&amp;hellip; &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;double&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;[] data = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;double&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;[section.length]; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;for&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; (&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;int&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; i = &lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;; i &amp;lt; data.length; i++) { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; data[i] = &lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; + (Math.random() * &lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// create the dataset&amp;hellip; &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;DefaultPieDataset dataset = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; DefaultPieDataset(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;for&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; (&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;int&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; i = &lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;; i &amp;lt; data.length; i++) { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; dataset.setValue(section[i], data[i]); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;return&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; dataset; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; String getChartViewer(HttpServletRequest request, HttpServletResponse response) { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; DefaultPieDataset dataset = getDataset(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// create the chart&amp;hellip; &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; JFreeChart chart = ChartFactory.createPie3DChart( &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Pie3D Chart Demo&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// chart title &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; dataset, &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// data &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// include legend &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;false&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// set the background color for the chart&amp;hellip; &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;chart.setBackgroundPaint(Color.cyan); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;PiePlot plot = (PiePlot) chart.getPlot(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;plot.setNoDataMessage(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;No data available&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// set drilldown capability&amp;hellip; &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; plot.setURLGenerator(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; StandardPieURLGenerator(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Bar3DDemo.jsp&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;section&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;)); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;plot.setLabelGenerator(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// OPTIONAL CUSTOMISATION COMPLETED. &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;ChartRenderingInfo info = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;HttpSession session = request.getSession(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;try&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//Create RenderingInfo object &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; response.setContentType(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;text/html&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; info = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ChartRenderingInfo(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; StandardEntityCollection()); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; BufferedImage chartImage = chart.createBufferedImage(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;640&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;400&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, info); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// putting chart as BufferedImage in session, &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// thus making it available for the image reading action Action. &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;session.setAttribute(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;chartImage&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, chartImage); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;PrintWriter writer = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PrintWriter(response.getWriter()); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;ChartUtilities.writeImageMap(writer, &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;imageMap&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, info); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;writer.flush(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;catch&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; (Exception e) { } &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;String pathInfo = &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;http://&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;pathInfo += request.getServerName(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;int&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; port = request.getServerPort(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;pathInfo += &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;:&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;+String.valueOf(port); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;pathInfo += request.getContextPath(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;String chartViewer = pathInfo + &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;rdquo;/servlet/ChartViewer&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;return&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; chartViewer; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;6. 页面 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;html&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;head&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;title&amp;gt;Pie Chart Demo&amp;lt;/title&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;/head&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;jsp:useBeanid=&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;myChart&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;scope=&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;session&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;myapp.webwork.beans.Pie3DDemo&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; /&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;body&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;h2&amp;gt;Pie Chart Demo&amp;lt;/h2&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;%String chartViewer = myChart.getChartViewer(request, response);%&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;img src=&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;&amp;lt;%=chartViewer%&amp;gt;&amp;ldquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; border=&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; usemap=&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;rdquo;#imageMap&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;/body&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;/html&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;span style=&#34;color: red; padding: 0px; margin: 0px;&#34;&gt;4）采用工具类ChartUtil和DisplayChart（jfreechart的servlet）输出&lt;/span&gt; &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;我用了上面的几个方法输出图片，发现页面里只能输出一个图片， &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;不过下面的方法可以输出多个图片,而且是几种方式中最简单的一个，推荐使用。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;这种方式和上面的三种比较类似，是将javabean里的生成图片的方法写的一个工具类ChartUtil里面。 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;1 ．添加工具类ChartUtil &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;public class ChartUtil { &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;//  产生时间序列图，返回图片名称 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;static&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; String generatePieChart(DefaultPieDataset dataset,String title,&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;int&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; width,&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;int&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; height,HttpSession session, PrintWriter pw) { &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;String filename = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;try&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;if&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; (session != &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;) &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;ChartDeleter deleter = (ChartDeleter)session.getAttribute(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;JFreeChart_Deleter&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; session.removeAttribute(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;JFreeChart_Deleter&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; session.setAttribute(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;JFreeChart_Deleter&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, deleter); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;JFreeChart chart = ChartFactory.createPieChart3D( &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;title, &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// chart title &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;dataset, &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// data &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;// include legend &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;false&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//  Write the chart image to the temporary directory &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;ChartRenderingInfo info = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ChartRenderingInfo(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; StandardEntityCollection()); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//If the last parameter is null, the chart is a &amp;rdquo;one time&amp;rdquo;-chart and will be deleted after the first serving. &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//If the last parameter is a session object, the chart remains until session time out. &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;filename = ServletUtilities.saveChartAsPNG(chart, width, height, info, session); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #008200; padding: 0px; margin: 0px;&#34;&gt;//  Write the image map to the PrintWriter &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ChartUtilities.writeImageMap(pw, filename, info,&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; pw.flush(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;catch&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; (Exception e) { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; System.out.println(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Exception - &amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; + e.toString()); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; e.printStackTrace(System.out); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; filename = &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;picture_error.png&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;; } &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;return&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; filename; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;2、在action里统计数据，设置好数据集dataset。传到页面 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;3、 在页面里取出 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;DefaultPieDataset piedataset=(DefaultPieDataset)request.getAttribute(&amp;ldquo;piedataset&amp;rdquo;); &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;// 用ChartUtil工具类产生图片 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;String p = ChartUtil.generatePieChart(piedataset,&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo; 项目收支线图&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;500&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;300&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;null&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PrintWriter(out)); &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;String p1 = request.getContextPath() + &lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;rdquo;/servlet/DisplayChart?filename=&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; + p; &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;通过以下方式输出 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;td&amp;gt;&amp;lt;img src=&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;&amp;lt;%= p1 %&amp;gt;&amp;ldquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; width=&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;500&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; height=&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;300&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; border=&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #c00000; padding: 0px; margin: 0px;&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; usemap=&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;rdquo;#&amp;lt;%= p %&amp;gt;&amp;ldquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;gt;&amp;lt;/td&amp;gt; &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;4、在web.xml中添加 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;servlet&amp;gt; &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &amp;lt;servlet-name&amp;gt;DisplayChart&amp;lt;/servlet-name&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &amp;lt;servlet-&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;gt;org.jfree.chart.servlet.DisplayChart&amp;lt;/servlet-&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;/servlet&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;servlet-mapping&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &amp;lt;servlet-name&amp;gt;DisplayChart&amp;lt;/servlet-name&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &amp;lt;url-pattern&amp;gt;/servlet/DisplayChart&amp;lt;/url-pattern&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;lt;/servlet-mapping&amp;gt; &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;span style=&#34;color: red; padding: 0px; margin: 0px;&#34;&gt;5） ApplicationFrame 方式 &lt;/span&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;dp-highlighter&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;bar&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;&lt;div class=&#34;tools&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;Java代码 &lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; title=&#34;复制代码&#34; href=&#34;http://ltc603.javaeye.com/blog/30207#&#34;&gt;&lt;img style=&#34;vertical-align: top; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://ltc603.javaeye.com/images/icon_copy.gif&#34; alt=&#34;复制代码&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol class=&#34;dp-j&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;class&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PieChartDemo1 &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;extends&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ApplicationFrame { &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PieChartDemo1(String title) { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;super&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;(title); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;setContentPane(createDemoPanel()); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;private&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;static&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; JFreeChart createChart(PieDataset dataset) { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;JFreeChart chart = ChartFactory.createPieChart( &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;hellip;&amp;hellip;. &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;return&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; chart; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;static&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; JPanel createDemoPanel() { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;JFreeChart chart = createChart(createDataset()); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;return&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; ChartPanel(chart); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;public&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;static&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;void&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; main(String[] args) { &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;PieChartDemo1 demo = &lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;new&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt; PieChartDemo1(&lt;/span&gt;&lt;span class=&#34;string&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #0000ff; padding: 0px; margin: 0px;&#34;&gt;&amp;ldquo;Pie Chart Demo 1&amp;rdquo;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;demo.pack(); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;RefineryUtilities.centerFrameOnScreen(demo); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;demo.setVisible(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: #7f0055; padding: 0px; margin: 0px;&#34;&gt;true&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;); &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;    &lt;li style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: none; list-style-position: initial; list-style-image: initial; padding: 0px;&#34;&gt;&lt;span style=&#34;padding: 0px; margin: 0px;&#34;&gt;} &lt;/span&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;六. 可参考资料与网址 &lt;/strong&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;官方网站 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;[url]&lt;a href=&#34;http://www.jfree.org/jfreechart/index.html&#34;&gt;http://www.jfree.org/jfreechart/index.html&lt;/a&gt; [/url] &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;官方论坛 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;a style=&#34;color: #2d3236; text-decoration: none; padding: 0px; margin: 0px;&#34; href=&#34;http://www.jfree.org/phpBB2/index.php&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;color: #e9650e; padding: 0px; margin: 0px;&#34;&gt;&lt;a href=&#34;http://www.jfree.org/phpBB2/index.php&#34;&gt;http://www.jfree.org/phpBB2/index.php&lt;/a&gt;&lt;/span&gt;&lt;/a&gt; &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;API 文档 &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;[url]&lt;a href=&#34;http://www.jfree.org/jfreechart/api/gjdoc/index.html&#34;&gt;http://www.jfree.org/jfreechart/api/gjdoc/index.html&lt;/a&gt; [/url] &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;中文API &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;[url]&lt;a href=&#34;http://blog.sina.com.cn/u/405da78d010000ap&#34;&gt;http://blog.sina.com.cn/u/405da78d010000ap&lt;/a&gt; [/url] &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;图片：&lt;/p&gt;&#xA;&lt;p style=&#34;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; margin: 0px;&#34;&gt;&lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/PieChartDemo1-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/PieChart3DDemo1-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/PriceVolumeDemo1-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/PopulationChartDemo1-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/DifferenceChartDemo2-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/DualAxisDemo1-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/ScatterPlotDemo1-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/XYBarChartDemo1-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/HistogramDemo1-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/DeviationRendererDemo2-254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/XYSplineRendererDemo1a_254.png&#34; alt=&#34;&#34; /&gt; &lt;img style=&#34;vertical-align: top; width: auto; height: auto; padding: 0px; margin: 0px; border: initial none initial;&#34; src=&#34;http://www.jfree.org/jfreechart/images/DialPlotDemo2a_254.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>该收心了</title>
      <link>https://helao.net/2011/141.html</link>
      <pubDate>2011-06-07 03:06:01 +0800</pubDate>
      <description>&lt;p&gt;玩了两个星期了都，该好好干点事了。从今晚开始，朝自己的目标努力。&lt;br&gt;2011-06-08 10:27:08:&lt;br&gt;唉，执行力太差了，不完成工作不许玩魔兽，每天只允许玩一次魔兽，50分钟&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Node.js简单介绍并实现一个简单的Web MVC框架</title>
      <link>https://helao.net/2011/140.html</link>
      <pubDate>2011-05-31 03:03:24 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;http://cnodejs.org/blog/?p=342&#34;&gt;Node.js简单介绍并实现一个简单的Web MVC框架&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;span style=&#34;font-family: Georgia, Times, &#39;Times New Roman&#39;, serif; line-height: 25px;&#34;&gt;&#xA;&lt;h3 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 13px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dfdfdf; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 21px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;Node.js是什么&lt;/h3&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;Node让你可以用javascript编写服务器端程序，让javascript脱离web浏览器的限制，像C#、JAVA、Python等语言一样在服务器端运行，这也让一些熟悉Javascript的前端开发人员进军到服务器端开发提供了一个便利的途径。 Node是基于Google的V8引擎封装的，并提供了一些编写服务器程序的常用接口，例如文件流的处理。Node的目的是提供一种简单的途径来编写高性能的网络程序。&#xA;(注：1、本文基于Node.js V0.3.6； 2、本文假设你了解JavaScript； 3、本文假设你了解MVC框架；4、本文示例源代码：&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://files.cnblogs.com/QLeelulu/learnNode.zip&#34;&gt;learnNode.zip&lt;/a&gt;)&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;h3 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 13px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dfdfdf; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 21px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;Node.js的性能&lt;/h3&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;hello world 测试：&#xA;&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280205575971.jpg&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280205599517.jpg&#34; border=&#34;0&#34; alt=&#34;clip_image002&#34; width=&#34;531&#34; height=&#34;407&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;300并发请求，返回不同大小的内容：&#xA;&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206002713.jpg&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206022322.jpg&#34; border=&#34;0&#34; alt=&#34;clip_image004&#34; width=&#34;519&#34; height=&#34;414&#34; /&gt;&lt;/a&gt;&#xA;为什么node有如此高的性能？看node的特性。&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;h3 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 13px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dfdfdf; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 21px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;Node.js的特性&lt;/h3&gt;&#xA;&lt;blockquote style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 25px; padding-right: 25px; padding-bottom: 0px; padding-left: 25px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 15px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: initial; text-decoration: none; font-style: normal; quotes: none; overflow-x: hidden; overflow-y: hidden; color: #666666; border-left-width: 5px; border-left-color: #dddddd; background-position: initial initial; background-repeat: initial initial;&#34;&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 15px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;&lt;strong style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 15px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;1. 单线程&lt;/strong&gt;&#xA;&lt;strong style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 15px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;2. 非阻塞IO&lt;/strong&gt;&#xA;&lt;strong style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 15px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;3. Google V8&lt;/strong&gt;&#xA;&lt;strong style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 15px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;4. 事件驱动&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;更详细的了解node请看淘宝UED博客上的关于node.js的一个幻灯片：&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://www.slideshare.net/lijing00333/node-js&#34;&gt;&lt;a href=&#34;http://www.slideshare.net/lijing00333/node-js&#34;&gt;http://www.slideshare.net/lijing00333/node-js&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;h3 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 13px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dfdfdf; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 21px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;你好，世界&lt;/h3&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;这，当然是俗套的Hello World啦（hello_world.js）：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; http &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;http&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;http.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;createServer&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    res.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;writeHead&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #cc0000; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;Content-Type&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;text/plain&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    res.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;Hello World&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000099; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;\n&lt;/span&gt;&amp;lsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;listen&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #cc0000; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;8124&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;127.0.0.1&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;Server running at &lt;a href=&#34;http://127.0.0.1:8124/&#39;&#34;&gt;http://127.0.0.1:8124/&#39;&lt;/a&gt;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;require类似于C#的using、Python的import，用于导入模块（module）。node使用的是CommonJS的模块系统。http.createServer 的参数为一个函数，每当有新的请求进来的时候，就会触发这个函数。最后就是绑定要监听的端口。&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;h2 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 14px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 23px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dddddd; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 23px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;怎么运行？&lt;/h2&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;当然，是先安装node.js啦。到&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://nodejs.org/&#34;&gt;&lt;a href=&#34;http://nodejs.org/&#34;&gt;http://nodejs.org/&lt;/a&gt;&lt;/a&gt;下载并编译，支持Linux、Mac，也支持windows下的Cygwin。具体的安装说明见：&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://howtonode.org/how-to-install-nodejs&#34;&gt;&lt;a href=&#34;http://howtonode.org/how-to-install-nodejs&#34;&gt;http://howtonode.org/how-to-install-nodejs&lt;/a&gt;&lt;/a&gt; 装好node后，就可以运行我们的hello world了：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;$ node hello_world.js&#xA;Server running at &lt;a href=&#34;http://127.0.0.1:&#34;&gt;http://127.0.0.1:&lt;/a&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;8124&lt;/span&gt;/&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206035486.jpg&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206042586.jpg&#34; border=&#34;0&#34; alt=&#34;clip_image006&#34; width=&#34;265&#34; height=&#34;89&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;h3 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 13px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dfdfdf; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 21px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;编程习惯的改变？&lt;/h3&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;我们来写一个读取文件内容的脚本：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//output_me.js&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; fs &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;fs&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; fileContent &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;nothing&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;fs.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;readFile&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;strong&gt;filename&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;utf-8&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; file&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;    fileContent &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; file&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;end readfile &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000099; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;\n&lt;/span&gt;&amp;lsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;doSomethingWithFile: &amp;lsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt; fileContent &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000099; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;\n&lt;/span&gt;&amp;lsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;这个脚本读取当前文件的内容并输出。&lt;/strong&gt;filename是node的一个全局变量，值为当前文件的绝对路径。我们执行这个脚本看一下：&#xA;&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206057636.jpg&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206056830.jpg&#34; border=&#34;0&#34; alt=&#34;clip_image008&#34; width=&#34;254&#34; height=&#34;98&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;有没发现结果不对呢？打印的fileContent并不是读取到的文件内容，而是初始化的时候赋值的nothing，并且‘end readfile’最后才打印出来。前面我们提到node的一个特性就是非阻塞IO，而readFile就是异步非阻塞读取文件内容的，所以后面的代码并不会等到文件内容读取完了再执行。请谨记node的异步非阻塞IO特性。所以我们需要将上面的代码修改为如下就能正常工作了：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//output_me.js&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; fs &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;fs&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; fileContent &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;nothing&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;fs.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;readFile&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;__filename&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;utf-8&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; file&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;    fileContent &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; file&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//对于file的处理放到回调函数这里处理&lt;/span&gt;&#xA;    console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;doSomethingWithFile: &amp;lsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt; fileContent &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000099; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;\n&lt;/span&gt;&amp;lsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;我们先去喝杯茶&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000099; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;\n&lt;/span&gt;&amp;lsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h3 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 13px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dfdfdf; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 21px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;&lt;strong style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;写个Web MVC框架试试&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;下面我们用node来写一个小玩具：一个Web MVC框架。这个小玩具我称它为n2Mvc，它的代码结构看起来大概如下：&#xA;&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206066372.jpg&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206072883.jpg&#34; border=&#34;0&#34; alt=&#34;clip_image010&#34; width=&#34;171&#34; height=&#34;434&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;和hello world一样，我们需要一个http的服务器来处理所有进来的请求：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; http &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;http&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;querystring &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;querystring&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;exports.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;runServer&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;port&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    port &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; port &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #cc0000; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;8080&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; server &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; http.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;createServer&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; _postData &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//on用于添加一个监听函数到一个特定的事件&lt;/span&gt;&#xA;        req.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;on&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;data&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;chunk&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            _postData &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+=&lt;/span&gt; chunk&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&#xA;        .&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;on&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;end&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            req.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;post&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; querystring.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;parse&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;_postData&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            handlerRequest&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;listen&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;port&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;Server running at &lt;a href=&#34;http://127.0.0.1:&#39;&#34;&gt;http://127.0.0.1:&#39;&lt;/a&gt;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt; port &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rsquo;/&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;这里定义了一个runServer的方法来启动我们的n2Mvc的服务器。有没注意到runServer前面有个exports？这个exports相当于C#中的publish，在用require导入这个模块的时候，runServer可以被访问到。我们写一个脚本来演示下node的模块导入系统：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//moduleExample.js&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; myPrivate &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;艳照，藏着&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;exports.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;myPublish&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;冠西的相机&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;myPublish2&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;this也可以哦&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;moduleExample.js loaded &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000099; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;\n&lt;/span&gt;&amp;lsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;执行结果：&#xA;&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206089079.jpg&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206099211.jpg&#34; border=&#34;0&#34; alt=&#34;clip_image002[9]&#34; width=&#34;376&#34; height=&#34;225&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;从结果中我们可以看出exports和this下的变量在外部导入模块后，可以被外部访问到，而var定义的变量只能在脚本内部访问。 从结果我们还可以看出，第二次require导入moduleExample模块的时候，并没有打印“moduleExample.js loaded”，因为require导入模块的时候，会先从require.cache 中检查模块是否已经加载，如果没有加载，才会从硬盘中查找模块脚本并加载。 require支持相对路径查找模块，例如上面代码中require(‘./moduleExample’)中的“./”就代表在当前目录下查找。如果不是相当路径，例如 require(‘http’)，node则会到require.paths中去查找，例如我的系统require.paths为：&#xA;&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206105689.jpg&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206117457.jpg&#34; border=&#34;0&#34; alt=&#34;clip_image004[7]&#34; width=&#34;304&#34; height=&#34;104&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;当require(‘http’)的时候，node的查找路径为：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;1&lt;/span&gt;、/home/qleelulu/.node_modules/http&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;2&lt;/span&gt;、/home/qleelulu/.node_modules/http.js&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;3&lt;/span&gt;、/home/qleelulu/.node_modules/http.node&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;4&lt;/span&gt;、/home/qleelulu/.node_modules/http/index.js&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;5&lt;/span&gt;、/home/qleelulu/.node_modules/http/index.node&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;6&lt;/span&gt;、/home/qleelulu/.node_libraries/http&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;7&lt;/span&gt;、/home/qleelulu/.node_libraries/http.js&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;8&lt;/span&gt;、参考前面&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;再看回前面的代码，http.createServer中的回调函数中的request注册了两个事件，前面提到过node的一个特点是事件驱动的，所以这种事件绑定你会到处看到（想想jQuery的事件绑定？例如$(‘a’).click(fn)）。关于node的事件我们在后面再细说。request对象的data事件会在接收客户端post上来的数据时候触发，而end事件则会在最后触发。所以我们在data事件里面处理接收到的数据（例如post过来的form表单数据），在end事件里面通过handlerRequest 函数来统一处理所有的请求并分发给相应的controller action处理。 handlerRequest的代码如下：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; route &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rsquo;./route&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; handlerRequest &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//通过route来获取controller和action信息&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; actionInfo &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; route.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;getActionInfo&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; req.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//如果route中有匹配的action，则分发给对应的action&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;actionInfo.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//假设controller都放到当前目录的controllers目录里面，还记得require是怎么搜索module的么？&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; controller &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rsquo;./controllers/&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt;actionInfo.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;controller&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;// ./controllers/blog&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;controller&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;actionInfo.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; ct &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;new&lt;/span&gt; controllerContext&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//动态调用，动态语言就是方便啊&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//通过apply将controller的上下文对象传递给action&lt;/span&gt;&#xA;            controller&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;actionInfo.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;apply&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;ct&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; actionInfo.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            handler500&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;Error: controller &amp;ldquo;&amp;rsquo;&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt; actionInfo.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;controller&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rsquo;&amp;rdquo; without action &amp;ldquo;&amp;rsquo;&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt; actionInfo.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;action&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rsquo;&amp;ldquo;&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//如果route没有匹配到，则当作静态文件处理&lt;/span&gt;&#xA;        staticFileServer&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;这里导入来一个route模块，route根据请求的url等信息去获取获取controller和action的信息，如果获取到，则通过动态调用调用action方法，如果没有匹配的action信息，则作为静态文件处理。 下面是route模块的代码：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; parseURL &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;url&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;parse&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//根据http请求的method来分别保存route规则&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; routes &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;get&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; post&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; head&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; put&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;delete&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;/**&#xA;* 注册route规则&#xA;* 示例：&#xA;* route.map({&#xA;*     method:&amp;lsquo;post&amp;rsquo;,&#xA;*     url: /\/blog\/post\/(\d+)\/?$/i,&#xA;*     controller: &amp;lsquo;blog&amp;rsquo;,&#xA;*     action: &amp;lsquo;showBlogPost&amp;rsquo;&#xA;* })&#xA;*/&lt;/span&gt;&#xA;exports.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;map&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;dict&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;dict &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; dict.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; dict.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;controller&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; method &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; dict.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;method&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;?&lt;/span&gt; dict.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;method&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;toLowerCase&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;get&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        routes&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;method&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;push&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            u&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; dict.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//url匹配正则&lt;/span&gt;&#xA;            c&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; dict.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;controller&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;            a&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; dict.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;action&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;index&amp;rsquo;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;exports.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;getActionInfo&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; method&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; r &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;controller&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; action&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; args&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;        method &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; method &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;?&lt;/span&gt; method.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;toLowerCase&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;get&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;// url: /blog/index?page=1 ,则pathname为: /blog/index&lt;/span&gt;&#xA;        pathname &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; parseURL&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;pathname&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; m_routes &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; routes&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;method&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; i &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;in&lt;/span&gt; m_routes&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//正则匹配&lt;/span&gt;&#xA;        r.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;args&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; m_routes&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;u&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;exec&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;pathname&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;r.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            r.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;controller&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; m_routes&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            r.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;action&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; m_routes&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            r.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;args&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;shift&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//第一个值为匹配到的整个url，去掉&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//如果匹配到route，r大概是 {controller:&amp;lsquo;blog&amp;rsquo;, action:&amp;lsquo;index&amp;rsquo;, args:[&amp;lsquo;1&amp;rsquo;]}&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;return&lt;/span&gt; r&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;map方法用于注册路由规则，我们新建一个config.js的文件，来配置route规则：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//config.js&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; route &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rsquo;./route&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;route.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    method&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;get&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;    url&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009966; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;/\/blog\/?$/i&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;    controller&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;blog&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;    action&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;index&amp;rsquo;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;如果请求的url有匹配的route规则，则会返回controller和action信息。例如上面的route配置，当访问 /blog 这个url的时候，则会调用 ./controllers/blog.js 模块里面的index函数。 当调用action的时候，会传递controllerContext给acation：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; ct &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;new&lt;/span&gt; controllerContext&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//动态调用，动态语言就是方便啊&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//通过apply将controller的上下文对象传递给action&lt;/span&gt;&#xA;            controller&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;actionInfo.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;apply&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;ct&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; actionInfo.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;这里会通过apply将controllerContext作为action的this，并传递args作为action的参数来调用action。 ontrollerContext封装了一些action会用到的方法：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//controller的上下文对象&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; controllerContext &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;req&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;res&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;handler404&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; handler404&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;handler500&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; handler500&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;controllerContext.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;prototype&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;render&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;viewName&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; context&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;viewEngine.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;req&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;res&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; viewName&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; context&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;controllerContext.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;prototype&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;renderJson&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;json&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;viewEngine.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;renderJson&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;req&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;res&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; json&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;在action中处理完逻辑获取获取到用户需要的数据后，就要呈现给用户。这就需要viewEngine来处理了。ViewEngine的代码如下：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; viewEngine &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    render&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; viewName&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; context&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; filename &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; path.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;join&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;__dirname&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;views&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; viewName&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;try&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; output &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; Shotenjin.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;renderView&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;filename&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; context&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;catch&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            handler500&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;        res.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;writeHead&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #cc0000; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;Content-Type&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;text/html&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        res.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;output&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;    renderJson&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; json&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//TODO:&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;这里viewEngine主要负责模板解析。node有很多的可用的模块，模板解析模块也有一大堆，不过这里我们是要“玩”，所以模板解析系统我们这里使用&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://www.kuwata-lab.com/tenjin/jstenjin-users-guide.html&#34; target=&#34;_blank&#34;&gt;jstenjin&lt;/a&gt;来稍作修改：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//shotenjin.js 增加的代码&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//模板缓存，缓存解析后的模板&lt;/span&gt;&#xA;Shotenjin.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;templateCatch&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//读取模板内容&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//在模板中引用模板使用： {# ../layout.html #}&lt;/span&gt;&#xA;Shotenjin.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;getTemplateStr&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;filename&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//console.log(&amp;lsquo;get template:&amp;rsquo; + filename);&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; t &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//这里使用的是同步读取&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;path.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;existsSync&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;filename&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        t &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; fs.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;readFileSync&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;filename&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;utf-8&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;View: &amp;lsquo;&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt; filename &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rsquo; not exists&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;    t &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; t.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;replace&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009966; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;/{#[\s]&lt;em&gt;([.\/\w-]+)[\s]&lt;/em&gt;#}/ig&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;m&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; g1&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; fp &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; path.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;join&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;filename&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; g1.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;trim&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;return&lt;/span&gt; Shotenjin.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;getTemplateStr&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;fp&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;return&lt;/span&gt; t&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;Shotenjin.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;renderView&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;viewPath&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; context&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; template &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; Shotenjin.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;templateCatch&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;viewPath&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;!&lt;/span&gt;template&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; template_str &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; Shotenjin.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;getTemplateStr&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;viewPath&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; template &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;new&lt;/span&gt; Shotenjin.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;Template&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        template.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;convert&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;template_str&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//添加到缓存中&lt;/span&gt;&#xA;        Shotenjin.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;templateCatch&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;viewPath&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; template&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; output &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; template.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;context&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;return&lt;/span&gt; output&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;global.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;Shotenjin&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; Shotenjin&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;增加的代码主要是读取模板的内容，并解析模板中类似 {# ../layout.html #} 的标签，递归读取所有的模板内容，然后调用jstenjin的方法来解析模板。 这里读取文件内容使用的是fs.readFileSync，这是同步阻塞读取文件内容的，和我们平时使用的大多编程语言一样，而fs.readFile的非阻塞异步读。 这里的shotenjin.js原来是给客户端web浏览器javascript解析模板用的，现在拿到node.js来用，完全不用修改就正常工作。Google V8真威武。 现在基本的东西都完成了，但是对于静态文件，例如js、css等我们需要一个静态文件服务器：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; staticFileServer &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; filePath&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;!&lt;/span&gt;filePath&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        filePath &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; path.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;join&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;__dirname&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; config.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;staticFileDir&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; url.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;parse&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;pathname&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;    path.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;exists&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;filePath&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;exists&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;!&lt;/span&gt;exists&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            handler404&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;        fs.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;readFile&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;filePath&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;binary&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; file&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;                handler500&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; res&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; err&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;                &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; ext &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; path.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;extname&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;filePath&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            ext &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; ext &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;?&lt;/span&gt; ext.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;slice&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #cc0000; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;html&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            res.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;writeHead&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #cc0000; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;Content-Type&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; contentTypes&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;[&lt;/span&gt;ext&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;text/html&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            res.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;binary&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            res.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; contentTypes &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;  &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;aiff&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;audio/x-aiff&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;  &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;arj&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;application/x-arj-compressed&amp;rdquo;&lt;/span&gt;&#xA;  &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;//省略&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;简单来说就是读取文件内容并写入到response中返回给客户端。 现在该有的都有了，我们写一个action：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;// ./controllers/blog.js&lt;/span&gt;&#xA;exports.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;blog/index.html&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;msg&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;Hello World&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;blog/index.html的内容为：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;html&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;{# ../../header.html #}&#xA;        &amp;lt;h3 class=&amp;ldquo;title&amp;rdquo;&amp;gt;n2Mvc Demo&amp;lt;/h3&amp;gt;&#xA;        &amp;lt;h1&amp;gt;#{msg}&amp;lt;/h1&amp;gt;&#xA;{# ../../footer.html #}&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;接着，就是写一个脚本来启动我们的n2Mvc了：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;// run.js&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; n2MvcServer &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rsquo;./server&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;n2MvcServer.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;runServer&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;ok，运行我们的启动脚本： 在浏览器访问看看：&#xA;&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206139541.jpg&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206143053.jpg&#34; border=&#34;0&#34; alt=&#34;clip_image006[7]&#34; width=&#34;512&#34; height=&#34;349&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;嗯嗯，一切正常。 好，接下来我们再写一个获取新浪微博最新微博的页面。首先，我们在config.js中增加一个route配置：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;route.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    method&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;get&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;    url&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009966; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;/\/tweets\/?$/i&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;    controller&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;blog&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;    action&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;tweets&amp;rsquo;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;然后开始写我们的cnotroller action：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; http &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;http&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt;&#xA;    events &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;events&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; tsina_client &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; http.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;createClient&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #cc0000; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;api.t.sina.com.cn&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; tweets_emitter &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;new&lt;/span&gt; events.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;EventEmitter&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #006600; font-style: italic; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;// action: tweets&lt;/span&gt;&#xA;exports.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;tweets&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;blogType&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; _t &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; listener &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; tweets_emitter.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;once&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;tweets&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        _t.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;blog/tweets.html&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    get_tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt; get_tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; request &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; tsina_client.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;request&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;GET&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rdquo;/statuses/public_timeline.json?source=3243248798&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;host&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;api.t.sina.com.cn&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    request.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;addListener&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;response&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;response&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; body &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;rdquo;&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        response.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;addListener&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;data&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;data&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            body &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;+=&lt;/span&gt; data&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;        response.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;addListener&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;end&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; tweets &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; JSON.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;parse&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;body&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000066; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;tweets.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #cc0000; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;                console.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;get tweets &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #000099; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;\n&lt;/span&gt;&amp;lsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;                tweets_emitter.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;emit&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;tweets&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;            &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&#xA;        &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    request.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;这里使用http.createClient来发送请求获取新浪微博的最新微博，然后注册相应事件的监听。这里详细说下node的事件系统：EventEmitter。 EventEmitter可以通过require(‘events’). EventEmitter来访问，创建一个 EventEmitter的实例emitter后，就可以通过这个emitter来注册、删除、发出事件了。 例如上面的代码中，先创建来一个EventEmitter的实例：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; tweets_emitter &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;new&lt;/span&gt; events.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;EventEmitter&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;然后用once注册一个一次性的事件监听：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;var&lt;/span&gt; listener &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;=&lt;/span&gt; tweets_emitter.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;once&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;tweets&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #003366; font-weight: bold; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;&#xA;        _t.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;lsquo;blog/tweets_data.html&amp;rsquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;{&lt;/span&gt;tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;:&lt;/span&gt; tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&#xA;    &lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;once注册的事件在事件被触发一次后，就会自动移除。 最后，通过emit来发出事件：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;javascript&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;tweets_emitter.&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #660066; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;emit&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #3366cc; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&amp;ldquo;tweets&amp;rdquo;&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;,&lt;/span&gt; tweets&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #009900; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; color: #339933; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;这样，整个事件的流程都清晰了。 下面写一下显示tweets的模板：&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;div class=&#34;wp_syntax&#34; style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; color: #110000; overflow-x: auto; overflow-y: hidden; width: 600px; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: 1px solid silver;&#34;&gt;&#xA;&lt;div class=&#34;code&#34; style=&#34;padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; margin: 0px; border: initial none initial;&#34;&gt;&#xA;&lt;pre class=&#34;html&#34; style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 12px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #efefef; text-decoration: none; overflow-x: visible; overflow-y: visible; font: normal normal normal 13px/25px Arial, Verdana, sans-serif; line-height: 1.333; color: #555555; width: auto; float: none; clear: none; white-space: pre; font-family: monospace; background-position: initial initial; background-repeat: initial initial; padding: 25px; margin: 0px; border: 1px solid #dfdfdf;&#34;&gt;&amp;lt;ul&amp;gt;&#xA;  &amp;lt;?js for(var i in tweets){ ?&amp;gt;&#xA;  &amp;lt;?js var tweet = tweets[i], user = tweets[i].user; ?&amp;gt;&#xA;    &amp;lt;li&amp;gt;&#xA;        &amp;lt;div class=&amp;ldquo;usericon&amp;rdquo;&amp;gt;&#xA;                &amp;lt;a class=&amp;ldquo;user_head&amp;rdquo; href=&amp;ldquo;###&amp;rdquo;&amp;gt;&#xA;                    &amp;lt;img src=&amp;ldquo;#{user.profile_image_url}&amp;rdquo; /&amp;gt;&#xA;                &amp;lt;/a&amp;gt;&#xA;        &amp;lt;/div&amp;gt;&#xA;        &amp;lt;div class=&amp;ldquo;mainContent&amp;rdquo;&amp;gt;&#xA;            &amp;lt;div class=&amp;ldquo;userName&amp;rdquo;&amp;gt;&#xA;                &amp;lt;a href=&amp;ldquo;###&amp;rdquo;&amp;gt;&#xA;                    #{user.screen_name}&#xA;                &amp;lt;/a&amp;gt;&#xA;            &amp;lt;/div&amp;gt;&#xA;            &amp;lt;div class=&amp;ldquo;msg&amp;rdquo;&amp;gt;&#xA;                &amp;lt;div class=&amp;ldquo;tweet&amp;rdquo;&amp;gt;&#xA;                    &amp;lt;div class=&amp;ldquo;tweet_text&amp;rdquo;&amp;gt;&#xA;                        #{tweet.text}&#xA;                    &amp;lt;/div&amp;gt;&#xA;                    &amp;lt;?js if(tweet.thumbnail_pic){ ?&amp;gt;&#xA;                    &amp;lt;div&amp;gt;&#xA;                        &amp;lt;a target=&amp;rdquo;_blank&amp;rdquo; href=&amp;ldquo;javascript:void(0);&amp;rdquo; class=&amp;ldquo;thumbnail_pic&amp;rdquo; &amp;gt;&#xA;                            &amp;lt;img class=&amp;ldquo;pic&amp;rdquo; src=&amp;ldquo;#{tweet.thumbnail_pic}&amp;rdquo; /&amp;gt;&#xA;                        &amp;lt;/a&amp;gt;&#xA;                    &amp;lt;/div&amp;gt;&#xA;                    &amp;lt;?js } ?&amp;gt;&#xA;                &amp;lt;/div&amp;gt;&#xA;            &amp;lt;/div&amp;gt;&#xA;        &amp;lt;/div&amp;gt;&#xA;        &amp;lt;br class=&amp;ldquo;clear&amp;rdquo; /&amp;gt;&#xA;    &amp;lt;/li&amp;gt;&#xA;  &amp;lt;?js } ?&amp;gt;&#xA;&amp;lt;/ul&amp;gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;万事大吉，运行并访问：&lt;/div&gt;&#xA;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206157886.jpg&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://images.cnblogs.com/cnblogs_com/QLeelulu/201101/201101280206178924.jpg&#34; border=&#34;0&#34; alt=&#34;clip_image008[6]&#34; width=&#34;380&#34; height=&#34;397&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;h3 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 13px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dfdfdf; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 21px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;附一个简单的和Django的对比测试&lt;/h3&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;&lt;img style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: #f9f9f9; text-decoration: none; height: auto; max-width: 590px; background-position: initial initial; background-repeat: initial initial; padding: 4px; margin: 0px; border: 1px solid #dddddd;&#34; src=&#34;http://pic002.cnblogs.com/images/2011/26621/2011012811490365.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;h3 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 13px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dfdfdf; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 21px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;后记&lt;/h3&gt;&#xA;&lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; border: initial none initial;&#34;&gt;本文写的mvc框架完全是为了尝试node.js，其实node已经有很多的 &lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://github.com/ry/node/wiki/modules&#34; target=&#34;_blank&#34;&gt;Modules&lt;/a&gt;可以用，也有比较成熟的web框架&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://github.com/visionmedia/express/tree/master&#34; target=&#34;_blank&#34;&gt;Express&lt;/a&gt;。如果你要实现一个模块之前，可以先到node的modules页面查找下有没有你需要的模块先。 本文示例源代码：&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://files.cnblogs.com/QLeelulu/learnNode.zip&#34;&gt;learnNode.zip&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;h3 style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 25px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 13px; vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 21px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: solid; border-width: initial; border-color: #dfdfdf; text-decoration: none; font-style: normal; font-weight: bold; font-family: Arial, Verdana, sans-serif; color: #444444; border-left-width: 5px; line-height: 21px; background-position: initial initial; background-repeat: initial initial;&#34;&gt;一些资源：&lt;/h3&gt;&#xA;&lt;/div&gt;&#xA;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;node.js的文档：&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://nodejs.org/api.html&#34;&gt;&lt;a href=&#34;http://nodejs.org/api.html&#34;&gt;http://nodejs.org/api.html&lt;/a&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;How To Node:  &lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://howtonode.org/&#34;&gt;&lt;a href=&#34;http://howtonode.org&#34;&gt;http://howtonode.org&lt;/a&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;div style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; text-decoration: none; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: initial none initial;&#34;&gt;learning-serverside-javascript-with-node-js: &lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://net.tutsplus.com/tutorials/javascript-ajax/learning-serverside-javascript-with-node-js/&#34;&gt;&lt;a href=&#34;http://net.tutsplus.com/tutorials/javascript-ajax/learning-serverside-javascript-with-node-js/&#34;&gt;http://net.tutsplus.com/tutorials/javascript-ajax/learning-serverside-javascript-with-node-js/&lt;/a&gt;&lt;/a&gt; (中文翻译版：&lt;a style=&#34;vertical-align: baseline; outline-style: none; outline-width: initial; outline-color: initial; font-size: 16px; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; border-top-style: none; border-right-style: none; border-bottom-style: dotted; border-left-style: none; border-width: initial; border-color: initial; text-decoration: none; cursor: pointer; color: #999999; border-bottom-width: 1px; border-bottom-color: #666666; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px;&#34; href=&#34;http://www.osseye.com/?p=456&#34;&gt;&lt;a href=&#34;http://www.osseye.com/?p=456&#34;&gt;http://www.osseye.com/?p=456&lt;/a&gt;&lt;/a&gt; )&lt;/div&gt;&#xA;&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>谈谈linux下的版本问题</title>
      <link>https://helao.net/2011/139.html</link>
      <pubDate>2011-05-26 04:45:44 +0800</pubDate>
      <description>&lt;p&gt;linux世界版本多的不可胜数，也造成了linux上的软件五花八门，其实人们需要的只是一个平台，上面有他们需要的软件，不是要种类多，但是要齐全，功能满足日常应用就好。现状是技术人员转到linux上就找不到相应的软件，学习曲线太陡。&#xA;说说我装ubuntu的例子，我的台式机组装的，装ubuntu10。10怎么也装不上，我只能装了9.04，上面的软件又也不好找，宽带连接都没法用，无奈只好切回了xp。我想绝大部分人都是这样想的，人们现在如果一定要用linux的话，最好去用ylmf os 4,这是基于linux内核的，ylmf以前是搞xp，所以他们知道人们日常应用，我觉得linux的推广肯定还是要落到他们身上，指着大公司来推广linux没戏，这就是普通群众的观点。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;linux看来我肯定会下功夫去学，我做为开发人员这是必须的，我为自己没能尽早的使用linux感到后悔。等我的新本下来之后我就装一个ubuntu吧，这个旧的就先用xp，等以后可能要给家人用的。linux的版本问题是个大问题，跨度太大，虽然目前声势很大，这就是个气泡，说不定什么时候就 砰的一下没了。就像android和apple的区别，力挺apple。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>CMD命令行下修改网络IP设置的方法_DOS/BAT_脚本之家</title>
      <link>https://helao.net/2011/138.html</link>
      <pubDate>2011-05-24 08:59:28 +0800</pubDate>
      <description>&lt;pre name=&#34;code&#34; class=&#34;vb&#34;&gt;&#xA;@echo off &#xA;netsh interface ip set address name=&#34;本地连接&#34; static 192.168.1.55 255.255.255.0 192.168.1.1 auto &gt;nul &#xA;netsh interface ip add dns &#34;本地连接&#34; 202.98.96.68 index=1 &gt;nul &#xA;netsh interface ip add dns &#34;本地连接&#34; 61.139.2.69 index=2 &gt;nul &#xA;netsh interface ip set address name=&#34;本地连接2&#34; static 192.168.1.55 255.255.255.0 192.168.1.1 auto &gt;nul &#xA;netsh interface ip add dns &#34;本地连接2&#34; 202.98.96.68 index=1 &gt;nul &#xA;netsh interface ip add dns &#34;本地连接2&#34; 61.139.2.69 index=2 &gt;nul &#xA;netsh interface ip set address name=&#34;本地连接3&#34; static 192.168.1.55 255.255.255.0 192.168.1.1 auto &gt;nul &#xA;netsh interface ip add dns &#34;本地连接3&#34; 202.98.96.68 index=1 &gt;nul &#xA;netsh interface ip add dns &#34;本地连接3&#34; 61.139.2.69 index=2 &gt;nul &#xA;echo IP地址已经设定修改完毕，按任意键关闭此窗口 &#xA;pause &gt;nul &#xA;&lt;/pre&gt;&#xA;&#xA;&lt;pre name=&#34;code&#34; class=&#34;vb&#34;&gt;&#xA;互助改 ip地址&#xA;@echo off &#xA;cls &#xA;color 0A &#xA;echo IP地址更改小工具 &#xA;set IP=192.168.1.1 &#xA;set MASK=255.255.255.0 &#xA;set GATEWAY=192.168.1.0 &#xA;set NAME=&#34;本地连接&#34; &#xA;&#xA;&#xA;echo. &#xA;echo 自动更改IP 请按 1 &#xA;echo. &#xA;echo 手动更改IP 请按 2 &#xA;&#xA;set /p KEY= [您的选择是：] &#xA;if %KEY% == 1 goto ONE &#xA;if %KEY% == 2 goto TWO &#xA;&#xA;:TWO &#xA;ECHO 您选择了手工修改设置。 &#xA;ECHO. &#xA;echo 默认IP地址是%IP%，回车输入默认地址 &#xA;set /p IP= [请输入IP地址:] &#xA;echo. &#xA;echo 默认MASK是%MASK%，回车输入默认值 &#xA;set /p MASK= [请输入 子网掩码 地址:] &#xA;echo. &#xA;echo 默认GATEWAY是%GATEWAY%，回车输入默认值 &#xA;set /p GATEWAY= [请输入 网关 地址:] &#xA;echo. &#xA;&#xA;:ONE &#xA;echo 正在自动更改IP...... &#xA;netsh interface ip set address %NAME% static %IP% %MASK% %GATEWAY% &#xA;echo IP地址/子网掩码/网关设置完成 &#xA;pause &#xA;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>抓取javaeye的帖子，存到数据库</title>
      <link>https://helao.net/2011/137.html</link>
      <pubDate>2011-05-23 09:46:51 +0800</pubDate>
      <description>&lt;p&gt;用了jsoup和nutzDao来实现&lt;/p&gt;&#xA;&#xA;&lt;p&gt;上代码&#xA;&lt;pre class=&#34;java&#34; name=&#34;code&#34;&gt;static NutDao dao = new NutDao();&#xA;    static {&#xA;    Properties pp = System.getProperties();&#xA;    pp.put(&amp;ldquo;driverClassName&amp;rdquo;, &amp;ldquo;com.mysql.jdbc.Driver&amp;rdquo;);&#xA;    pp.put(&amp;ldquo;url&amp;rdquo;, &amp;ldquo;jdbc:mysql://localhost:3306/wordpress?useUnicode=true&amp;amp;characterEncoding=utf-8&amp;rdquo;);&#xA;    pp.put(&amp;ldquo;username&amp;rdquo;, &amp;ldquo;root&amp;rdquo;);&#xA;    pp.put(&amp;ldquo;password&amp;rdquo;, &amp;ldquo;000000&amp;rdquo;);&#xA;    DataSource ds = null;&#xA;    try {&#xA;        ds = BasicDataSourceFactory.createDataSource(System.getProperties());&#xA;        dao.setDataSource(ds);&#xA;    } catch (Exception e) {&#xA;        e.printStackTrace();&#xA;    }&#xA;    }&#xA;    public static void main(String[] args) throws MalformedURLException, IOException, InterruptedException {&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;//createSqlFile();&#xA;//  System.out.println(&amp;quot;你好${1}&amp;quot;.replace(&amp;quot;${1}&amp;quot;, &amp;quot;world&amp;quot;));&#xA;}&#xA;&#xA;public static  void createSqlFile() throws IOException{&#xA;    BufferedReader reader = new BufferedReader(new FileReader(new File(&amp;quot;javaeyepost.txt&amp;quot;)));&#xA;    String line = &amp;quot;&amp;quot;;&#xA;    boolean b = false;&#xA;    String title = null;&#xA;    String content = null;&#xA;    String date = null;&#xA;    int index = 25;&#xA;    while((line=reader.readLine())!= null){&#xA;        if(b){&#xA;            break;&#xA;        }&#xA;        if(line.length()&amp;amp;gt;0){&#xA;            if(line.equals(&amp;quot;post****over&amp;quot;)){&#xA;&#xA;            }else if(line.startsWith(&amp;quot;title: &amp;quot;)){&#xA;                title = line.substring(7);&#xA;            }else if(line.startsWith(&amp;quot;date: &amp;quot;)){&#xA;                System.out.println(line);&#xA;                date = line.substring(6)+&amp;quot; 00:00:00&amp;quot;;&#xA;            }else if(line.startsWith(&amp;quot;content: &amp;quot;)){&#xA;                StringBuffer sb = new StringBuffer();&#xA;                sb.append(line.substring(9));&#xA;                while((line=reader.readLine())!= null){&#xA;                    if(line.equals(&amp;quot;post*****over&amp;quot;)){&#xA;                        content = sb.toString();&#xA;                        String encode = URLEncoder.encode(title);&#xA;                        encode = encode.length()&amp;amp;gt;200? encode.substring(0,200):encode;&#xA;                        dao.insert(&amp;quot;wp_posts&amp;quot;, Chain.make(&amp;quot;post_author&amp;quot;, 1).add(&amp;quot;post_date&amp;quot;, date)&#xA;                                .add(&amp;quot;post_date_gmt&amp;quot;, date).add(&amp;quot;post_content&amp;quot;, content).add(&amp;quot;post_title&amp;quot;, title)&#xA;                                .add(&amp;quot;post_status&amp;quot;, &amp;quot;publish&amp;quot;).add(&amp;quot;comment_status&amp;quot;, &amp;quot;open&amp;quot;).add(&amp;quot;ping_status&amp;quot;, &amp;quot;open&amp;quot;)&#xA;                                .add(&amp;quot;post_name&amp;quot;, encode).add(&amp;quot;post_modified&amp;quot;, date).add(&amp;quot;post_modified_gmt&amp;quot;, date)&#xA;                                .add(&amp;quot;post_parent&amp;quot;, 0).add(&amp;quot;guid&amp;quot;, &amp;quot;http://localhost:89/?p=&amp;quot;+ index++).add(&amp;quot;menu_order&amp;quot;, 0)&#xA;                                .add(&amp;quot;post_type&amp;quot;, &amp;quot;post&amp;quot;).add(&amp;quot;comment_count&amp;quot;, 0).add(&amp;quot;post_excerpt&amp;quot;, &amp;quot;&amp;quot;).add(&amp;quot;post_password&amp;quot;, &amp;quot;&amp;quot;)&#xA;                                .add(&amp;quot;to_ping&amp;quot;, &amp;quot;&amp;quot;).add(&amp;quot;pinged&amp;quot;, &amp;quot;&amp;quot;).add(&amp;quot;post_content_filtered&amp;quot;, &amp;quot;&amp;quot;).add(&amp;quot;post_mime_type&amp;quot;, &amp;quot;&amp;quot;));&#xA;                    //  System.out.println(&amp;quot;*************************************&amp;quot;);&#xA;                        //b = true;&#xA;                        break;&#xA;                    }else{&#xA;                        sb.append(line);&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;&#xA;}&#xA;&#xA;// 需要注意的细节， 帖子类别可能不存在，要抓取下面的分页信息才行&#xA;public static void fetchPost() throws UnsupportedEncodingException, IOException, InterruptedException{&#xA;    //Document document = Jsoup.parse(new URL(&amp;quot;http://feiyan35488.iteye.com/?show_full=false&amp;quot;), 5000);&#xA;    FileOutputStream fos = new FileOutputStream(&amp;quot;javaeyepost.txt&amp;quot;);&#xA;    HttpConnection con = (HttpConnection) HttpConnection.connect(&amp;quot;http://feiyan35488.iteye.com/?page=9&amp;amp;amp;&amp;amp;amp;show_full=true&amp;quot;);&#xA;    con.userAgent(&amp;quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/534.12 (KHTML, like Gecko) Chrome/9.0.576.0 Safari/534.12&amp;quot;);&#xA;    Document document = con.get();&#xA;    Elements es = document.getElementsByClass(&amp;quot;blog_main&amp;quot;);&#xA;    System.out.println(&amp;quot;共有帖子 ：&amp;quot;+es.size());&#xA;    for(Element e : es){&#xA;        fos.write((&amp;quot;title：&amp;quot;+e.child(0).child(2).child(0).html()+&amp;quot;\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;        if(e.child(0).children().size()&amp;amp;gt;3)&#xA;          fos.write((&amp;quot;classify: &amp;quot;+e.child(0).child(3).child(0).html()+&amp;quot;\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;        fos.write((&amp;quot;date: &amp;quot;+e.child(0).child(0).child(0).html()+&amp;quot;-&amp;quot;+e.child(0).child(0).child(2).html()+&amp;quot;-&amp;quot;+e.child(0).child(0).child(4).html()+&amp;quot;\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;        fos.write((&amp;quot;content: &amp;quot;+e.child(1).html()+&amp;quot;\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;        fos.write((&amp;quot;post*****over\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;        //System.out.println(&amp;quot;标题：&amp;quot;+e.child(0).child(2).child(0).html());&#xA;    }&#xA;&#xA;    for(int i=2;i&amp;amp;lt;10;i++){&#xA;        Thread.sleep(5000);&#xA;        con.url(&amp;quot;http://feiyan35488.iteye.com/?page=&amp;quot;+i+&amp;quot;&amp;amp;amp;&amp;amp;amp;show_full=true&amp;quot;);&#xA;        document = con.get();&#xA;        Elements es1 = document.getElementsByClass(&amp;quot;blog_main&amp;quot;);&#xA;        System.out.println(&amp;quot;共有帖子 ：&amp;quot;+es1.size());&#xA;        for(Element e : es1){&#xA;            fos.write((&amp;quot;title：&amp;quot;+e.child(0).child(2).child(0).html()+&amp;quot;\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;            fos.write((&amp;quot;classify: &amp;quot;+e.child(0).child(3).child(0).html()+&amp;quot;\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;            fos.write((&amp;quot;date: &amp;quot;+e.child(0).child(0).child(0).html()+&amp;quot;-&amp;quot;+e.child(0).child(0).child(2).html()+&amp;quot;-&amp;quot;+e.child(0).child(0).child(4).html()+&amp;quot;\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;            fos.write((&amp;quot;content: &amp;quot;+e.child(1).html()+&amp;quot;\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;            fos.write((&amp;quot;post*****over\n&amp;quot;).getBytes(&amp;quot;utf-8&amp;quot;));&#xA;            //System.out.println(&amp;quot;标题：&amp;quot;+e.child(0).child(2).child(0).html());&#xA;        }&#xA;    }&#xA;}&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;两个方法，一 抓取帖子存到文件中，二，从文件中读取保存到数据库中&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>论坛开放</title>
      <link>https://helao.net/2011/136.html</link>
      <pubDate>2011-05-20 07:54:28 +0800</pubDate>
      <description>&lt;p&gt;我开论坛了，以后可以在里面就会放着我的生活信息，和各种技术资料&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>ubuntu 入门----开发环境搭建</title>
      <link>https://helao.net/2011/135.html</link>
      <pubDate>2011-05-18 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;linux是编程高手最终的归宿，是他们施展才华的舞台。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先ubuntu 自带了 gcc, python,perl(可能没有)，vi编辑器&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先安装java   sudo apt-get install openjdk-6&lt;/p&gt;&#xA;&#xA;&lt;p&gt;安装 tomcat  sudo apt-get install tomcat6&lt;/p&gt;&#xA;&#xA;&lt;p&gt;运行 /etc/init.d/tomcat6 start stop restart&lt;/p&gt;&#xA;&#xA;&lt;p&gt;安装mysql ， sudo apt-get install mysql-server&lt;/p&gt;&#xA;&#xA;&lt;p&gt;鱼腥 /etc/init.d/mysql start stop restart&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>ubuntu 离线升级办法</title>
      <link>https://helao.net/2011/134.html</link>
      <pubDate>2011-05-18 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: Georgia, &#39;Bitstream Charter&#39;, serif; font-size: 16px; color: #333333; line-height: 24px;&#34;&gt; &lt;h1 class=&#34;entry-title&#34; style=&#34;background-color: transparent; vertical-align: baseline; clear: both; font-weight: bold; font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Nimbus Sans L&#39;, sans-serif; color: #000000; line-height: 1.3em; font-size: 21px; padding: 0px; margin: 0px;&#34;&gt;Ubuntu升级手动下载包法&lt;/h1&gt;   &lt;div class=&#34;entry-meta&#34; style=&#34;background-color: transparent; vertical-align: baseline; font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Nimbus Sans L&#39;, sans-serif; color: #888888; font-size: 12px; padding: 0px; margin: 0px;&#34;&gt;    &lt;span class=&#34;meta-prep meta-prep-author&#34; style=&#34;background-color: transparent; vertical-align: baseline; padding: 0px; margin: 0px;&#34;&gt;日期：&lt;/span&gt;   &lt;a style=&#34;background-color: transparent; vertical-align: baseline; color: #888888; padding: 0px; margin: 0px;&#34; title=&#34;00:03&#34; rel=&#34;bookmark&#34; href=&#34;http://qixinglu.com/archives/ubuntu_upgrade_manually_download_packages&#34;&gt;&lt;span class=&#34;entry-date&#34; style=&#34;background-color: transparent; vertical-align: baseline; padding: 0px; margin: 0px;&#34;&gt;2011-05-06&lt;/span&gt;&lt;/a&gt;&amp;nbsp;   &lt;span class=&#34;meta-sep&#34; style=&#34;background-color: transparent; vertical-align: baseline; padding: 0px; margin: 0px;&#34;&gt;作者：&lt;/span&gt;   &lt;span class=&#34;author vcard&#34; style=&#34;background-color: transparent; vertical-align: baseline; padding: 0px; margin: 0px;&#34;&gt;&lt;a class=&#34;url fn n&#34; style=&#34;background-color: transparent; vertical-align: baseline; color: #888888; padding: 0px; margin: 0px;&#34; title=&#34;查看 muzuiget 的所有文章&#34; href=&#34;http://qixinglu.com/archives/author/admin/&#34;&gt;muzuiget&lt;/a&gt;&lt;/span&gt;   &lt;/div&gt;   &lt;div class=&#34;entry-content&#34; style=&#34;background-color: transparent; padding-top: 12px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; vertical-align: baseline; clear: both; margin: 0px;&#34;&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;我已经把家里的台式电脑升级到11.04了，通过升级管理器升级的，从10.04两次升级成功。&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;升级管理器（或者apt-get）的单线程下载速度真是慢得要死，所以一般我更新大量软件包都会通过&lt;a style=&#34;background-color: transparent; vertical-align: baseline; color: #0066cc; padding: 0px; margin: 0px;&#34; href=&#34;http://qixinglu.com/archives/use_aria2c_to_speed_up_apt-get_download_script&#34;&gt;用aria2c加速apt-get下载的脚本&lt;/a&gt;这篇文章的脚本来更新的。&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;但是升级管理器是没有导出下载列表功能，不能手动下载，极度不爽。研究了一下，可以这样做。&lt;/p&gt;    &lt;h3 style=&#34;background-color: transparent; margin-top: 0px; margin-right: 0px; margin-bottom: 20px; margin-left: 0px; vertical-align: baseline; clear: both; font-weight: bold !important; color: #000000; line-height: 1.5em; padding: 0px;&#34;&gt;方法&lt;/h3&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;升级管理器首先会把你的apt仓库切换成11.04的，然后update包信息，如下图。&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;&lt;img style=&#34;background-color: transparent; vertical-align: baseline; height: auto; width: auto; padding: 0px; margin: 0px;&#34; src=&#34;https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?url=http%3A%2F%2Fdl.dropbox.com%2Fu%2F2992664%2Fblog%2F2011%2Fubuntu_upgrade_manually_download_packages.png&amp;amp;container=focus&amp;amp;gadget=a&amp;amp;no_expand=1&amp;amp;resize_h=0&amp;amp;rewriteMime=image%2F*&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;完成这一步后，计算下载量，会弹出确认对话框&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;&lt;img style=&#34;background-color: transparent; vertical-align: baseline; height: auto; width: auto; padding: 0px; margin: 0px;&#34; src=&#34;https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?url=http%3A%2F%2Fdl.dropbox.com%2Fu%2F2992664%2Fblog%2F2011%2Fubuntu_upgrade_manually_download_packages_1.png&amp;amp;container=focus&amp;amp;gadget=a&amp;amp;no_expand=1&amp;amp;resize_h=0&amp;amp;rewriteMime=image%2F*&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;这时候，不要点“开始更新”，而是打开终端，输入&lt;/p&gt;    &lt;div class=&#34;wp_syntax&#34; style=&#34;background-color: #f9f9f9; margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; color: #110000; width: 640px; padding: 0px; border: 1px solid silver;&#34;&gt;     &lt;div class=&#34;code&#34; style=&#34;background-color: transparent; padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; margin: 0px;&#34;&gt;      &lt;pre class=&#34;bash&#34;&gt;&lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #c20cb9; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;apt-get&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #660033; padding: 0px; margin: 0px;&#34;&gt;-y&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #660033; padding: 0px; margin: 0px;&#34;&gt;--print-uris&lt;/span&gt; dist-upgrade &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #000000; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #c20cb9; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;grep&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #660033; padding: 0px; margin: 0px;&#34;&gt;-E&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #660033; padding: 0px; margin: 0px;&#34;&gt;-o&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #ff0000; padding: 0px; margin: 0px;&#34;&gt;&amp;quot;http://[^\&#39;]+&amp;quot;&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #000000; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;&amp;gt;&lt;/span&gt; upgrade.txt&lt;/pre&gt;     &lt;/div&gt;    &lt;/div&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;因为这是的apt仓库已经是11.04了，而upgrade.txt就是要更新的包的下载地址了，随你用什么下载工具把这些包下载回来。我就用firefox的downthemall扩展了，因为包实在太多，我需要图形界面显示进度。&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;&lt;img style=&#34;background-color: transparent; vertical-align: baseline; height: auto; width: auto; padding: 0px; margin: 0px;&#34; src=&#34;https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?url=http%3A%2F%2Fdl.dropbox.com%2Fu%2F2992664%2Fblog%2F2011%2Fubuntu_upgrade_manually_download_packages_2.png&amp;amp;container=focus&amp;amp;gadget=a&amp;amp;no_expand=1&amp;amp;resize_h=0&amp;amp;rewriteMime=image%2F*&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;一共要更新1886个包，多线下载速度快上N倍，不过还是要花上了1个多小时下载，下载好后，假设都下载到~/upgrade_debs文件夹，继续终端&lt;/p&gt;    &lt;div class=&#34;wp_syntax&#34; style=&#34;background-color: #f9f9f9; margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; vertical-align: baseline; color: #110000; width: 640px; padding: 0px; border: 1px solid silver;&#34;&gt;     &lt;div class=&#34;code&#34; style=&#34;background-color: transparent; padding-top: 2px; padding-right: 4px; padding-bottom: 2px; padding-left: 4px; vertical-align: top; margin: 0px;&#34;&gt;      &lt;pre class=&#34;bash&#34;&gt;&lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #7a0874; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #000000; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;/&lt;/span&gt;var&lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #000000; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;/&lt;/span&gt;cache&lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #000000; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;/&lt;/span&gt;apt&lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #000000; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;/&lt;/span&gt;archives&lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #000000; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #c20cb9; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #c20cb9; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;ln&lt;/span&gt; &lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #660033; padding: 0px; margin: 0px;&#34;&gt;-s&lt;/span&gt; ~&lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #000000; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;/&lt;/span&gt;upgrade_debs&lt;span style=&#34;background-color: transparent; vertical-align: baseline; color: #000000; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;/*&lt;/span&gt;.deb .&lt;/pre&gt;     &lt;/div&gt;    &lt;/div&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;然后点击第二张图里的“开始升级”，这样就跳过升级管理器的慢吞吞的下载过程，直接到安装包操作了，然后重启，搞定。&lt;/p&gt;    &lt;h3 style=&#34;background-color: transparent; margin-top: 0px; margin-right: 0px; margin-bottom: 20px; margin-left: 0px; vertical-align: baseline; clear: both; font-weight: bold !important; color: #000000; line-height: 1.5em; padding: 0px;&#34;&gt;补充&lt;/h3&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;升级程序切换到apt仓库到11.04时，会清空缓存文件夹（10.10原有的文件被移动到临时文件夹）；如果在第二张图点击取消，apt又会被回滚回10.10仓库，缓存文件夹又被清空（11.04的文件会回移走，10.10的文件从临时文件夹移动回来）。所以一定要在第二张图那个对话框时软链deb文件到缓存文件夹里去，因为这个时候才是11.04仓库的缓存文件夹。&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;或许你会说直接替换source.list到11.04更新不就行了吗？当然这也行，但是版本升级，安装软件包后，要做些清理工作，比如删除新版本不再使用的包，配置数据转换等，升级管理器就有这一步了，还是这样靠谱点。我在10.04升级到10.10到安装软件包过程中居然遇到天杀的断电，重启后无法进入系统，不过经过进入恢复模式，居然给我折腾回来，进入桌面还是得人肉修复各种升级问题，十分麻烦，但是我觉得重新装一次重新配置更麻烦，能升级就不重装了。&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;下载的包还可以复制到笔记本的ubuntu里去，免得二次下载浪费带宽。&lt;/p&gt;    &lt;p style=&#34;background-color: transparent; margin-top: 13px !important; margin-right: 0px; margin-bottom: 13px !important; margin-left: 0px; vertical-align: baseline; padding: 0px;&#34;&gt;升级后发现grub2居然有宽屏分辨率了，虽然不是显示器标准分辨率，聊胜于无。&lt;/p&gt;   &lt;/div&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>html 生成 pdf 实现思路和代码，基于itext</title>
      <link>https://helao.net/2011/133.html</link>
      <pubDate>2011-05-11 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;border-collapse: separate; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-indent: 0px; white-space: normal; font-family: Simsun; color: #000000; font-size: medium;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: 12px; font-family: Verdana,Arial,Helvetica,sans-serif;&#34;&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;java中生成pdf最快的非itext莫属，itext常用的版本有2.0.8 ,2.1.7 ,以及5.x.x ,中间貌似有断层，而且5改动非常大，包结构都改变了。&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;我从google查到的html 生成pdf方案，最好的莫过于 flyingsaucer + itext, 目前flygingsaucer-r8(googlecode中有，源码在github)适配的itext版本为2.0.8, 不能使用itext 2.1.7,有些api改变了，运行时会报错。&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;flying 最好的地方莫过于支持css2.1,及css3少量，flying 实现了一个css解析器，可能为了减少解析的难度，它要求html必须为xhtml格式，而不支持普通的html，你可以使用jtidy将html专程xhtml（有兴趣请自己去查）。&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;itext默认是不支持中文的，虽然它里面有cjk字体类（中国，日本，韩国）。&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;这里解决中文有两个方法：1，直接引用中文字体文件&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;  font.addFont(Html2Pdfs.class.getResource(&amp;quot;SIMSUN.TTC&amp;quot;).toString().substring(6), BaseFont.IDENTITY_H,BaseFont.NOT_EMBEDDED);&lt;/pre&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;2： 使用 itextAria.jar来支持中文&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;font.addFont(&amp;quot;STSong-Light&amp;quot;, &amp;quot;UniGB-UCS2-H&amp;quot;, BaseFont.NOT_EMBEDDED);&lt;/pre&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;解决了itext支持中文的问题，flying同样在支持中文上有问题，flying只支持字体文件 ttc或ttf等。我改了flying的源码重新打包了，使其能支持itextaria。jar，避免依赖中文字体文件。&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;其实在生成pdf的时候我比较了两种方法的执行时间，感觉用字体文件生成速度稳定一些，在500ms左右，而itextaria第一次执行则超过了1s，以后会降到400ms左右。而 itext直接生成则在10ms级。&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;性能方面大家要多加考虑，这绝对不能应用到高并发的情况。要不然你就等着重启机器吧 &lt;img src=&#34;/images/smiles/icon_biggrin.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;解决了中文就该说说生成pdf常见的问题，如分页，如页眉，页脚，超链，图片，margin不过我懒得写了，附件中有个pdf里面都有解决方法。&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;直接贴代码吧&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;StringBuilder sb = new StringBuilder();   &#xA;    BufferedReader reader = new BufferedReader(new FileReader(new File(&amp;quot;abc.html&amp;quot;))); &#xA;    String line = null; &#xA;    while((line = reader.readLine()) != null){      &#xA;    sb.append(line).append(&amp;quot;\r\n&amp;quot;);   &#xA;    }ITextRenderer render = new ITextRenderer();        &#xA;       ITextFontResolver font = render.getFontResolver();   &#xA;    try {       &#xA;    font.addFont(&amp;quot;STSong-Light&amp;quot;, &amp;quot;UniGB-UCS2-H&amp;quot;, BaseFont.NOT_EMBEDDED);    &#xA;     //   font.addFont(Html2Pdfs.class.getResource(&amp;quot;SIMSUN.TTC&amp;quot;).toString().substring(6), BaseFont.IDENTITY_H, BaseFont.NOT_EMBEDDED);    &#xA;    } catch (DocumentException e) {     &#xA;    e.printStackTrace();    &#xA;    } catch (IOException e) {       &#xA;    e.printStackTrace();        &#xA;}       &#xA;       OutputStream os = new FileOutputStream(pdf);     &#xA;         render.setDocumentFromString(sb.toString());   &#xA;    render.layout();        &#xA;         render.createPDF(os);  &#xA;    os.close();&lt;/pre&gt;&#xA; &amp;nbsp; &lt;p style=&#34;margin: 0px;&#34;&gt;很简单吧，不过生成速度非常慢，我测试过纯itext的生成速度非常快，那么应该是解析css慢。没办法谁叫只有这一家支持css呢，要不就只能去用itext了。&lt;/p&gt; &lt;/span&gt; &lt;/span&gt; &lt;br class=&#34;Apple-interchange-newline&#34; /&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>构建高性能网站，针对前台工程师--总结篇</title>
      <link>https://helao.net/2011/132.html</link>
      <pubDate>2011-04-21 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;首先从一次完整的的请求说起：（以此为例get,www,baidu.com）&lt;/p&gt; &lt;p&gt;1，webbrower 发出request，&lt;/p&gt; &lt;p&gt;2，然后解析www.baidu.com为ip,找到ip的服务器，&lt;/p&gt; &lt;p&gt;3，服务器处理请求资源并返回请求的内容，&lt;/p&gt; &lt;p&gt;4，browser接受请求内容过程，（返回内容是按顺序读取的）&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4.1遇到外联css，就会并发去读取css内容（），&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4.2遇到图片时，回去并发读取图片，目前浏览器的并发数为2，&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4.3遇到js时则会阻塞其他请求。&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4.4加载完css后，browse开始渲染页面，&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4.5直到加载完页面中的文本资源，这时dom的结构已经确定，会出发 document.ready方法&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4.6 browse继续加载 图片和js，完成后。页面就全部加载完成，这时会出发 window.onload()方法&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;来分析一下里面具体的时间开销：&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;1，从1--4.4 用户才开始看到页面上有内容，在这以前页面就是空白的&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;2，解析域名也是有一定时间开销的，如果是大机房的可以通过路由配置 dns 缓存，依赖于外部机房环境，可控性比较小。 &amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;3，这是服务器处理的时间，优化程序代码可以减少这里的时间&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4，&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4.1浏览器在接收完css之前，一般是不去渲染dom的，以避免无所谓的刷新和闪烁。所以直到4.4用户才真正在页面上看到内容。&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4.2 浏览器的单域名并发访问数&amp;nbsp;为2，多域名下并发数没限制，可以通过定义域名别名改善&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4.3 浏览器加载js时会阻塞其他请求，直到加载完成。改善的话可以把js放到页面下面去加载。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;从上面的流程可以分析出以下建议：&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;1，减少连接数（原因：并发限制，dns开销）&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;2，将css放到 head中。（1,首先这符合w3c规范，2,应为css加载完后，遇到dom对象时就会直接显示，可以更快的显示页面。）&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;3，将js放到页面底部，（加载js时会阻塞其他请求，这段时间页面没有反映，如果js中没有write的话应该放到底部，页面渲染完后再加载js）&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4，减少下载内容（网络是有速度限制的，内容越少当然加载越快）&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;针对上面4条建议给出具体做法：&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;1，使用 css sprite将小图片合并，合并css、js。使用浏览器缓存： cache-control、expires。不使用etag&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;2、3不用说了，上面已经解释清楚了。&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;4，采用gzip压缩，可以使用 jsmin 将js精简，使用工具将css，html精简，尽可能缩减图片。&lt;/p&gt; &lt;p&gt;按照 性能黄金法则 说明： 文本内容只占所有时间的10%-20%, 这样做以后 至少能将时间缩小40%-50%。能明显改善用户体验。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;这只是一些建议参考，具体的需要你针对自己的网站进行分析，分析工具可以使用firedebug,yslow，（这两个可以集成）&lt;/p&gt; &lt;p&gt;yslow会直接给出你建议。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>html2pdf 实现思路和代码</title>
      <link>https://helao.net/2011/131.html</link>
      <pubDate>2011-04-20 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;主要代码参考了 这篇帖子&lt;a href=&#34;http://www.iteye.com/topic/509417&#34;&gt;http://www.iteye.com/topic/509417&lt;/a&gt; ，写的非常不错。尤其看他的的解决问题的思路特别受启发，我在看这篇帖子之前也看到了&lt;span style=&#34;font-family: arial,sans-serif;&#34;&gt;&lt;span style=&#34;color: #666666; font-size: x-small;&#34;&gt;flying-saucer ，并且下载了jar包做了例子，但是没有成功我就匆忙放弃了，又踏上了寻找的路途。 以后要记得看 要找的项目的介绍，如果合适，就去看文档，文档里面一般是非常全面的。&lt;/span&gt; &lt;/span&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先itext就不用说了，自己去google。 直接上saucer的介绍：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&#xA;&lt;pre class=&#34;java&#34;&gt;Flying Saucer takes XML or XHTML and applies CSS 2.1-compliant stylesheets to it,&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt; in order to render to PDF (via iText), images, and on-screen using Swing or SWT.&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt; The library implements (basically) the entirety of CSS 2.1 and aims to be fully compliant with the W3C specification;&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt; it includes a small handful of CSS 3 features.&lt;/pre&gt;&#xA;意思： saucer支持 xml和xhtml css2.1，并且可以生成pdf，图片，这个貌似是 java可视化界面。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这个库实现了 全部css2.1并致力于 符合w3c标准，同时包含一些css3的属性，如 @page,可以用来定制 pdf的宽高和margin。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;又从下面看到，它没有支持传统的html，只支持xhmtl和css； 它支持xhtml+css要弱于 xml+css。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;看来还可以生成image，这也是个不错的东东。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;我第一次实验saucer时 就用了 html，悲剧啊 &lt;img src=&#34;/images/smiles/icon_cry.gif&#34; alt=&#34;&#34; /&gt; 。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;还有它对中文支持情况，如果你打算在html中使用中文，就必须在 css中全局定义 字体。并在 代码中 添加该字体文件。否则是不能显示中文的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;上代码&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&#xA;&lt;pre class=&#34;java&#34;&gt;public static void main(String[] args) throws Exception {&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt; String inputFile = &amp;ldquo;index11.html&amp;rdquo;;&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt;System.out.println(new File(inputFile).getAbsolutePath());&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt;   String url = new File(inputFile).toURI().toURL().toString();&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt;     String outputFile = &amp;ldquo;firstdoc.pdf&amp;rdquo;;&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt;      OutputStream os = new FileOutputStream(outputFile);&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt;          ITextRenderer renderer = new ITextRenderer();&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt;  renderer.setDocument(url);              // 解决中文支持问题&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt;    ITextFontResolver fontResolver = renderer.getFontResolver();&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt;       fontResolver.addFont(&amp;rdquo;&lt;span style=&#34;background-color: #ffffff;&#34;&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;C:/Windows/Fonts/SIMSUN.TTC&lt;/span&gt;&lt;/span&gt;&amp;rdquo;, BaseFont.IDENTITY_H, BaseFont.NOT_EMBEDDED);&lt;/pre&gt;&#xA;&lt;pre class=&#34;java&#34;&gt;  // 你可以把该文件放到项目中，这样打包后就不用依赖机器环境了&lt;span style=&#34;white-space: pre;&#34;&gt;         &lt;/span&gt;// 我这里指定为sinsun 是因为我在css中指定 了字体为 宋体          // 解决图片的相对路径问题    (这里我发现不用指定 ，图片显示也会正常，只是图片必须要指定为相对路径)         // renderer.getSharedContext().setBaseURL(&amp;ldquo;file:/D:/grails-work/html2pdf/&amp;ldquo;);                         renderer.layout();              renderer.createPDF(os);                         os.close();     }&lt;/pre&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;rar中有html和css图片，还有生成的pdf，也有需要的jar，可以自行测试。仅在此记录一下，我也正在看 文档，有了新的想法，再加&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>groovy 高效编程，</title>
      <link>https://helao.net/2011/130.html</link>
      <pubDate>2011-04-15 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;这是 groovy下的一些小方法，非常实用 ，从java转行过来的 一定要看啊&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;each&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;遍历list&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; color: #4b4b4b; line-height: 19px;&#34;&gt;   &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;b&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;c&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.each&amp;nbsp;{&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;println&amp;nbsp;elem&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;br /&gt;b&lt;br /&gt;c&lt;br /&gt;&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;遍历map&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;map&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[name:&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;山风小子&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;address:&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;Shanghai&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;map.each&amp;nbsp;{&amp;nbsp;key,&amp;nbsp;value&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;println&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;$key&amp;nbsp;:&amp;nbsp;$value&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;name&amp;nbsp;:&amp;nbsp;山风小子&lt;br /&gt;address&amp;nbsp;:&amp;nbsp;Shanghai&lt;br /&gt;&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;eachWithIndex&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;带index的each&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;b&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;c&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.eachWithIndex&amp;nbsp;{&amp;nbsp;elem,&amp;nbsp;i&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;println&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;$i&amp;nbsp;:&amp;nbsp;$elem&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;0&amp;nbsp;:&amp;nbsp;a&lt;br /&gt;1&amp;nbsp;:&amp;nbsp;b&lt;br /&gt;2&amp;nbsp;:&amp;nbsp;c&lt;br /&gt;&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;any&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;只要存在一个满足条件（此例中的条件为elem.length() &amp;lt; 3）的element就返回true，否则返回false&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;ab&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;abc&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.any&amp;nbsp;{&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;elem.length()&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;3&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;true&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;every&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;所有的element都满足条件才返回true，否则返回false&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;ab&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;abc&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.every&amp;nbsp;{&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;elem.length()&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;3&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;false&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;grep&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;符合条件的element会被提取出来，形成一个list&lt;br /&gt;条件以closure的形式传入&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;ab&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;abc&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.grep&amp;nbsp;{&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;elem.length()&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;3&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[&amp;quot;a&amp;quot;,&amp;nbsp;&amp;quot;ab&amp;quot;]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;条件以regex的形式传入，符合regex的element被提取出来形成一个list&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;ab&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;abc&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.grep(&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;~/&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;..&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;/&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;)&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[&amp;quot;ab&amp;quot;]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;条件以collection的形式传入，在collection中的element被提取出来形成一个list，可以看作求两个collection的交集&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;ab&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;abc&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.grep([&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;cde&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;ab&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;])&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[&amp;quot;a&amp;quot;,&amp;nbsp;&amp;quot;ab&amp;quot;]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;join&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;用指定的字符连接collection中的element&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;2007&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;8&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;26&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.join(&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;)&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;2007-8-26&lt;br /&gt;&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;sort&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;根据指定条件进行排序&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;2007&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;8&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;26&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.sort&amp;nbsp;{&amp;nbsp;e1,&amp;nbsp;e2&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;return&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;e1&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;e2&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[8,&amp;nbsp;26,&amp;nbsp;2007]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;find&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;查找collection中满足条件的‘第一个’element&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;2007&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;8&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;26&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.find&amp;nbsp;{&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;30&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;8&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;findAll&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;查找collection中满足条件的‘所有’element&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;2007&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;8&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;26&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.findAll&amp;nbsp;{&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;30&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[8,&amp;nbsp;26]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;collect&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;对collection的element进行处理，并将处理结果放到一个新的collection中&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;b&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;c&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.collect&amp;nbsp;{&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;2&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[&amp;quot;aa&amp;quot;,&amp;nbsp;&amp;quot;bb&amp;quot;,&amp;nbsp;&amp;quot;cc&amp;quot;]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;对map进行处理&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;map&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[name:&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;山风小子&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;address:&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;Shanghai&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;map.collect&amp;nbsp;{&amp;nbsp;entry&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;${entry.key}&amp;nbsp;:&amp;nbsp;${entry.value}&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[name&amp;nbsp;:&amp;nbsp;山风小子,&amp;nbsp;address&amp;nbsp;:&amp;nbsp;Shanghai]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;groupBy&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;对collection中的element按给定条件进行分组&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;b&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;abc&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;ab&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;c&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;bc&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.groupBy&amp;nbsp;{&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;elem.length()&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[1:[&amp;quot;a&amp;quot;,&amp;nbsp;&amp;quot;b&amp;quot;,&amp;nbsp;&amp;quot;c&amp;quot;],&amp;nbsp;2:[&amp;quot;ab&amp;quot;,&amp;nbsp;&amp;quot;bc&amp;quot;],&amp;nbsp;3:[&amp;quot;abc&amp;quot;]]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;inject&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;一个累积的过程，传入inject方法的&#39;I&#39;作为sum的初始值，在遍历collection的过程中，将处理结果(&lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;$sum&amp;nbsp;$elem&amp;nbsp;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;)保存到sum中&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;love&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;you&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.inject(&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;I&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;)&amp;nbsp;{&amp;nbsp;sum,&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;$sum&amp;nbsp;$elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;I&amp;nbsp;love&amp;nbsp;&amp;nbsp;you&amp;nbsp;&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;reverse&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;将collection中各element的次序颠倒一下&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;b&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;c&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.reverse()&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[&amp;quot;c&amp;quot;,&amp;nbsp;&amp;quot;b&amp;quot;,&amp;nbsp;&amp;quot;a&amp;quot;]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;颠倒字符串&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;abc&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;list.reverse()&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;cba&lt;br /&gt;&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;tokenize&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;指定分隔符，取得token集&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a1/b2/c3/d4&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;.tokenize(&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;/&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;)&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[&amp;quot;a1&amp;quot;,&amp;nbsp;&amp;quot;b2&amp;quot;,&amp;nbsp;&amp;quot;c3&amp;quot;,&amp;nbsp;&amp;quot;d4&amp;quot;]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;unique&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;去除collection中重复的element&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;b&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;b&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;c&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.unique()&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;[&amp;quot;a&amp;quot;,&amp;nbsp;&amp;quot;b&amp;quot;,&amp;nbsp;&amp;quot;c&amp;quot;]&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;max&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;求最大值&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;2&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;3&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.max()&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;3&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;按指定的比较内容（此例的比较内容为长度length），在collection中选出最大的element&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;ab&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;abc&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.max&amp;nbsp;{&amp;nbsp;elem&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;-&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;elem.length()&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;min&lt;/strong&gt;与max类似，求最小值，再次就不演示用法了，用法与max相同，将上述代码中的max改为min即可&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;count&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;计数&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;ab&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.count(&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;)&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;2&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;对字符串&amp;quot;aaba&amp;quot;中的a进行计数&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;aaba&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;list.count(&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;)&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;3&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;&lt;span style=&#34;color: #990000;&#34;&gt;&lt;strong&gt;sum&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;求和&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;2&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;3&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.sum()&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;6&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;求字符串的‘和’，其实就是连接字符串&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #000000;&#34;&gt;def&amp;nbsp;list&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;=&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;[&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;a&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;b&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;,&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;c&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;]&lt;br /&gt;list.sum()&lt;/span&gt;   &lt;/div&gt; 运行结果：&lt;br /&gt;  &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; font-size: 13px; width: 1315px; border: 1px solid #cccccc;&#34;&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;abc&lt;br /&gt;&lt;/span&gt;  &lt;/div&gt; &lt;br /&gt;最后，我想提醒各位一点：有时您可以将string看作list，对string使用适用于list的‘匕首方法’。&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>git github 介绍</title>
      <link>https://helao.net/2011/129.html</link>
      <pubDate>2011-04-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;这里不介绍详细的命令，请google之。&lt;/p&gt; &lt;p&gt;本着够用的原则，只介绍完成一个简单项目所需要的命令和过程。&lt;/p&gt; &lt;p&gt;首先应该github 下建立一个project，如 githubtest&lt;/p&gt; &lt;p&gt;本地请安装 git，&lt;/p&gt; &lt;p&gt;命令行下：&amp;nbsp;&lt;/p&gt; &lt;p&gt;cd 项目文件夹下&lt;/p&gt; &lt;p&gt;git init&lt;/p&gt; &lt;p&gt;touch readme &amp;nbsp;(只是更改readme 文件的 时间) ，你也可以自己创建文件&lt;/p&gt; &lt;p&gt;git add readme&lt;/p&gt; &lt;p&gt;git commit -m &amp;quot;first commit&amp;quot;&lt;/p&gt; &lt;p&gt;// &amp;nbsp;将前面两个命令合并： git commit -a -m &amp;quot;first commit&amp;quot;&lt;/p&gt; &lt;p&gt;如果仅是本地运行的 话 这样就足够了，&lt;/p&gt; &lt;p&gt;下面介绍提交到 github中&lt;/p&gt; &lt;p&gt;git &amp;nbsp;remote add origin git@github.com:wangcheng/githubtest.git&lt;/p&gt; &lt;p&gt;git push origin master&lt;/p&gt; &lt;p&gt;// ok 已经提交了&lt;/p&gt; &lt;p&gt;创建分支 ，&lt;/p&gt; &lt;p&gt;git branch git-branch &amp;nbsp;// 创建branch&lt;/p&gt; &lt;p&gt;git branch &amp;nbsp;// 显示所有的branch&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;git checkout git-branch&lt;/p&gt; &lt;p&gt;touch test.py&lt;/p&gt; &lt;p&gt;git add test.py&lt;/p&gt; &lt;p&gt;git commit -m &amp;quot;add new feature&amp;quot;&lt;/p&gt; &lt;p&gt;git remote add git-branch git@github.com/wangcheng/githubtest.git&lt;/p&gt; &lt;p&gt;git push origin git-branch&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;git chechout master&lt;/p&gt; &lt;p&gt;git merge git-branch&lt;/p&gt; &lt;p&gt;git push&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>shell 很强大，应该认真的研究一下（包括cmd）</title>
      <link>https://helao.net/2011/128.html</link>
      <pubDate>2011-04-13 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;例子： 将某文件夹下的 所有.JPG后缀 改为 .jpg ，&lt;/p&gt; &lt;p&gt;一条命令搞定： ren *.JPG *.jpg&lt;/p&gt; &lt;p&gt;比写程序快多了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>hsqldb 使用心得</title>
      <link>https://helao.net/2011/127.html</link>
      <pubDate>2011-04-13 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;hsqldb 分为 &amp;nbsp;server，in-process ,memory ,模式 貌似还有servlet, web server模式&lt;/p&gt; &lt;p&gt;in-process,memory 是不用起服务的，直接 class.forName(&amp;quot;hsqlDb.Driver&amp;quot;) 然后getConnect即可，&lt;/p&gt; &lt;p&gt;hsqldb会自动启动服务器，in-process url：&lt;span style=&#34;font-family: Arial, sans-serif, Helvetica, Tahoma; line-height: 18px;&#34;&gt;jdbc:hsqldb:file:myDbName,dbName 可以指定为路径&lt;/span&gt;&lt;/p&gt; &lt;p&gt;这里提醒大家一下，当你访问的数据库不存在时，hsqldb会自动去创建一个，然后把链接返回给你&lt;/p&gt; &lt;p&gt;memory下， memory url: jdbc:hsqldb:mem:mydbname ,&lt;/p&gt; &lt;p&gt;server 需要启动服务器了，java cp hsqldb.jar org.hsqldb.Server 就可以,url : jdbc:hsqldb:hsql://ip/dbname&lt;/p&gt; &lt;p&gt;web server 跟这个类似 就是可以提供http 链接，不推荐&lt;/p&gt; &lt;p&gt;servlet 部署到 app server中 可以随 server启动而启动，&lt;/p&gt; &lt;p&gt;server 只能支持10个db，其他的貌似只能支持一个db.&lt;/p&gt; &lt;p&gt;memory 和 in-process 这两个无法对外提供服务，意味着外部也不能查看 数据，开发时不推荐， 部署时可以这样。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>jira 破解版 ，适用于 3.6企业版。 最好在本地运行，不怕死的可以放到外网</title>
      <link>https://helao.net/2011/126.html</link>
      <pubDate>2011-04-11 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;span&gt;JIRA是一个优秀的问题(or bugs,task,improvement,new feature )跟踪及管理软件。&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;它由Atlassian开发，采用J2EE技术.它正被广泛的开源软件组织，以及全球著名的软件公司使用，它堪称是J2EE的Bugzilla。&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;JIRA提供了全面的功能，界面十分友好，可用性以及可扩展性方面都十分出色，如果购买商业版许可，还可以得到JIRA的源码（在开发许可协议下可以定制自己的JIRA系统）。&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;organisation&amp;nbsp;&amp;nbsp;*****@Cracked By martin.xus@gmail.com &lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;Date Purchased&amp;nbsp;&amp;nbsp;28/四月/06 &lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;License Type&amp;nbsp;&amp;nbsp;JIRA Enterprise: Commercial Server &lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;License ID&amp;nbsp;&amp;nbsp;BABQW &lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;Support Period&amp;nbsp;&amp;nbsp;Your commercial JIRA support and updates are available until 03/九月/43. &lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;JIRA 3.6 下载:&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;a style=&#34;text-decoration:none;color:#000000;border-bottom-width:1px;border-bottom-style:dotted;border-bottom-color:#333333;padding:0px;margin:0px;&#34; href=&#34;http://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-enterprise-3.6-standalone.zip&#34; target=&#34;_blank&#34;&gt;http://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-enterprise-3.6-standalone.zip&lt;/a&gt;&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;地址已更新:&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;下载(请将rar中的文件释放下来,直接覆盖掉web-inf下面的包即可，适用版本3.6):&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;a style=&#34;text-decoration:none;color:#000000;border-bottom-width:1px;border-bottom-style:dotted;border-bottom-color:#333333;padding:0px;margin:0px;&#34; href=&#34;http://www.blogjava.net/Files/martinx/atlassian-extras-0.7.19.rar&#34; target=&#34;_blank&#34;&gt;http://www.blogjava.net/Files/martinx/atlassian-extras-0.7.19.rar&lt;/a&gt;&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;破解jira的License。只是把classes反编译过来，修改一下。效果如下，License的类型为JIRA Enterprise: Commercial Server。&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;br /&gt;&#xA;//要让程序能找到这个包。atlassian-extras-0.7.19.jar&lt;br style=&#34;padding:0px;margin:0px;&#34; /&gt;&#xA;&lt;/span&gt; &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;package com.jira.util;&#xA;&#xA;import com.atlassian.license.LicensePair;&#xA;import java.io.*;&#xA;import java.security.KeyFactory;&#xA;import java.security.Signature;&#xA;import java.security.spec.PKCS8EncodedKeySpec;&#xA;&#xA;public class Cript {&#xA;    public static void main(String args[]) throws IOException {&#xA;        try {&#xA;            long l = 267L;&#xA;            long l1 = System.currentTimeMillis();&#xA;            long l2 = System.currentTimeMillis();&#xA;            String s = &#34;&#34;;&#xA;            System.out.println(&#34;Keygen for JIRA Enterprise Edition.&#34;);&#xA;            System.out.print(&#34;created by mydaj[ROR].&#34;);&#xA;            do {&#xA;                System.out.print(&#34;\nEnter your organization name: &#34;);&#xA;                for (int i = System.in.read(); i != 10 &amp;amp;&amp;amp; i != 13; i = System.in&#xA;                        .read())&#xA;                    s = s + (char) i;&#xA;            } while (s == &#34;&#34;);&#xA;            try {&#xA;                PKCS8EncodedKeySpec pkcs8encodedkeyspec = new PKCS8EncodedKeySpec(&#xA;                        EncodedPrvKey);&#xA;                KeyFactory keyfactory = KeyFactory.getInstance(&#34;DSA&#34;, &#34;SUN&#34;);&#xA;                java.security.PrivateKey privatekey = keyfactory&#xA;                        .generatePrivate(pkcs8encodedkeyspec);&#xA;                String s1 = Long.toString(l, 10);&#xA;                s1 = s1 + &#34;^^&#34;;&#xA;                s1 = s1 + Long.toString(l1, 10);&#xA;                s1 = s1 + &#34;^^&#34;;&#xA;                s1 = s1 + Long.toString(l2, 10);&#xA;                s1 = s1 + &#34;^^&#34;;&#xA;                s1 = s1 + s;&#xA;                byte abyte0[] = s1.getBytes();&#xA;                Signature signature = Signature.getInstance(&#34;SHA1withDSA&#34;);&#xA;                signature.initSign(privatekey);&#xA;                signature.update(abyte0);&#xA;                byte abyte1[] = signature.sign();&#xA;                LicensePair licensepair = null;&#xA;                try {&#xA;                    licensepair = new LicensePair(abyte0, abyte1);&#xA;                } catch (Exception exception1) {&#xA;                    exception1.printStackTrace();&#xA;                }&#xA;                System.out.println(s1);&#xA;                System.out.println(&#34;Your license key is: &#34;);&#xA;                System.out.println(licensepair.toString());&#xA;            } catch (Exception exception) {&#xA;                exception.printStackTrace();&#xA;            }&#xA;        } catch (IOException ioexception) {&#xA;        }&#xA;    }&#xA;&#xA;    static byte EncodedPrvKey[] = { 48, -126, 1, 75, 2, 1, 0, 48, -126, 1, 44,&#xA;            6, 7, 42, -122, 72, -50, 56, 4, 1, 48, -126, 1, 31, 2, -127, -127,&#xA;            0, -3, 127, 83, -127, 29, 117, 18, 41, 82, -33, 74, -100, 46, -20,&#xA;            -28, -25, -10, 17, -73, 82, 60, -17, 68, 0, -61, 30, 63, -128, -74,&#xA;            81, 38, 105, 69, 93, 64, 34, 81, -5, 89, 61, -115, 88, -6, -65,&#xA;            -59, -11, -70, 48, -10, -53, -101, 85, 108, -41, -127, 59, -128,&#xA;            29, 52, 111, -14, 102, 96, -73, 107, -103, 80, -91, -92, -97, -97,&#xA;            -24, 4, 123, 16, 34, -62, 79, -69, -87, -41, -2, -73, -58, 27, -8,&#xA;            59, 87, -25, -58, -88, -90, 21, 15, 4, -5, -125, -10, -45, -59, 30,&#xA;            -61, 2, 53, 84, 19, 90, 22, -111, 50, -10, 117, -13, -82, 43, 97,&#xA;            -41, 42, -17, -14, 34, 3, 25, -99, -47, 72, 1, -57, 2, 21, 0, -105,&#xA;            96, 80, -113, 21, 35, 11, -52, -78, -110, -71, -126, -94, -21,&#xA;            -124, 11, -16, 88, 28, -11, 2, -127, -127, 0, -9, -31, -96, -123,&#xA;            -42, -101, 61, -34, -53, -68, -85, 92, 54, -72, 87, -71, 121, -108,&#xA;            -81, -69, -6, 58, -22, -126, -7, 87, 76, 11, 61, 7, -126, 103, 81,&#xA;            89, 87, -114, -70, -44, 89, 79, -26, 113, 7, 16, -127, -128, -76,&#xA;            73, 22, 113, 35, -24, 76, 40, 22, 19, -73, -49, 9, 50, -116, -56,&#xA;            -90, -31, 60, 22, 122, -117, 84, 124, -115, 40, -32, -93, -82, 30,&#xA;            43, -77, -90, 117, -111, 110, -93, 127, 11, -6, 33, 53, 98, -15,&#xA;            -5, 98, 122, 1, 36, 59, -52, -92, -15, -66, -88, 81, -112, -119,&#xA;            -88, -125, -33, -31, 90, -27, -97, 6, -110, -117, 102, 94, -128,&#xA;            123, 85, 37, 100, 1, 76, 59, -2, -49, 73, 42, 4, 22, 2, 20, 42, 50,&#xA;            -88, 30, 125, -37, 118, -50, 20, -82, -63, 0, 8, -36, 106, -9,&#xA;            -110, 124, 107, 68 };&#xA;}&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    送你们一个key：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    name: tiantian&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    key:pqMomDgDQWXQuwINtKvsXuvOHNqorbvDSxBpkRwhJgmnhcX&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    mj2L0LAgbiEKysVnOTZs7odjy2Kka71ExsjBqL1aRXwN6Iw&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    pPRSwmqRnpQPmPQoPpstrNMqpPMpnqQMNtttVvxUsXWostU&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    UnpmoqutqusrtuUUnpmoqutqusrtuUUqfXkqfXk&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>gorm 介绍</title>
      <link>https://helao.net/2011/125.html</link>
      <pubDate>2011-04-06 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;grails 中的gorm框架是基于 hibernage，就是在hibernate基础上进行了一层薄薄的封装。&lt;/p&gt; &lt;p&gt;下面主要讲讲 几种关系&lt;/p&gt; &lt;p&gt;&amp;nbsp;1，1对1&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;在 class A {&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;B b&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;class B{}&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;默认会级联 &amp;nbsp;插入和更新&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;当B 指定 static belongsTo 时，表示指定owner， 这样在删除A时 会将B级联删除&lt;/p&gt; &lt;p&gt;2，一对多&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;class &amp;nbsp;A{&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;static hasMany = [bs:B]&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;}&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;class B{&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;}&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;3，多对多&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;class A{&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;static hasMany = [bs:B]&lt;/p&gt; &lt;p&gt;}&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;class B{&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;static hasMany = [as:A]&lt;/p&gt; &lt;p&gt;}&lt;/p&gt; &lt;p&gt;必须要指定belongsTo 才可以，这样就能进行 级联插入和更新&lt;/p&gt; &lt;p&gt;多对多 删除时 ，会自动将关联表删除，而不会将 对应表中的数据删除，这需要手动处理&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;还有一些 单向关联和双向关联的概念，明天再仔细整理一下再看&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>项目进度和bug跟踪 ，自己用的，不许偷看</title>
      <link>https://helao.net/2011/124.html</link>
      <pubDate>2011-03-29 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;项目前期需要搭建开发环境，并使用自动化编译 ，部署，测试，打包 工具，&lt;/p&gt; &lt;p&gt;这里主要进行单元测试和功能测试&lt;/p&gt; &lt;p&gt;完成后需要进行性能测试，并进行优化处理&lt;/p&gt; &lt;p&gt;当项目上线了就需要进行bug跟踪管理，推荐的使用 bug管理系统jira来管理， 考虑到要方便使用 就也可以自己写一个哈哈&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;当前项目的任务有： 页面的重新设计，（目标兼容ie6 包括 360 ）&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;后台管理的人性化&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;产品管理的 友好处理&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>开始学grails ，练手应用 ： bug跟踪， 博客，和个人信息管理</title>
      <link>https://helao.net/2011/123.html</link>
      <pubDate>2011-03-29 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;先写写思路，等代码出来再上代码。&lt;/p&gt; &lt;p&gt;bug跟踪：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 以项目为主线来做， 项目下有团队，团队有 项目经理，项目负责人，队员N个。&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;&amp;nbsp;&amp;nbsp;用例：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;1，创建项目： 创建项目，并指定项目经理，项目负责人，成员等，分配项目资源，制定项目执行时间&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2，bug提交和处理：bug可以匿名提交，需要项目经理来审核然后将bug分配给队员去处理， 队员处理后更改bug状态。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3，成员用户中心后： 显示自己需要修改的bug，已经修改的bug，并能更改需要修改的bug的状态&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4，项目经理管理中心： 需要审核的bug， 需要修改的bug，已经修改的bug&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5，项目负责人管理中心： 当前项目的bug总数，需要修改的总数，已经修改的总数，待审核的总数&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; 基本表结构： 项目表： 编号，名称，介绍&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;项目经理： 编号，用户id ，项目&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;项目负责人； 编号，用户id，项目&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;队员表 &amp;nbsp; &amp;nbsp; ：编号，用户id，项目&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;用户表： &amp;nbsp; &amp;nbsp; 编号，名称，介绍&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;bug： 编号，名称，介绍，状态，负责人，提交人，项目&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;这个项目只完成了 1 。 现在自己在用 jira，感觉自己做的很差劲&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>正在转向linux， 这是linux记事本vi的命令：</title>
      <link>https://helao.net/2011/121.html</link>
      <pubDate>2011-03-22 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;&#34;&gt;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;vi filename: 打开或新建文件，并将光标置于第一行首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;vi +n filename: 打开文件，并将光标置于第n行首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;vi + filename: 打开文件，并将光标置于最后一行首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;vi +/pattern filename: 打开文件，并将光标置于第一个与pattern匹配的串处&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;vi -r filename: 在上次正用vi编辑时发生系统崩溃，恢复filename vi filename....filename: 打开多个文件，依次进行编辑&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;移动光标类命令&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;h: 光标左移一个字符&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;l: 光标右移一个字符&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;space: 光标右移一个字符&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;Backspace: 光标左移一个字符&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;k或Ctrl+p: 光标上移一行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;j或Ctrl+n: 光标下移一行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;Enter: 光标下移一行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;w或W : 光标右移一个字至字首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;b或B : 光标左移一个字至字首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;e或E : 光标右移一个字至字尾&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;): 光标移至句尾&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;(: 光标移至句首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;}: 光标移至段落开头&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;{: 光标移至段落结尾&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;nG: 光标移至第n行首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;n+: 光标下移n行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;n-: 光标上移n行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;n$: 光标移至第n行尾&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;H: 光标移至屏幕顶行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;M: 光标移至屏幕中间行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;L: 光标移至屏幕最后行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;0: 光标移至当前行首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;$: 光标移至当前行尾&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;屏幕翻滚类命令&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;Ctrl+u: 向文件首翻半屏&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;Ctrl+d: 向文件尾翻半屏&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;Ctrl+f: 向文件尾翻一屏&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;Ctrl＋b: 向文件首翻一屏&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;nz: 将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;插入文本类命令&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;i: 在光标前&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;I: 在当前行首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;a: 光标后&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;A: 在当前行尾&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;o: 在当前行之下新开一行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;O: 在当前行之上新开一行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;r: 替换当前字符&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;R: 替换当前字符及其后的字符，直至按ESC键&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;s: 从当前光标位置处开始，以输入的文本替代指定数目的字符&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;S: 删除指定数目的行，并以所输入文本代替之&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;ncw或nCW: 修改指定数目的字&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;nCC: 修改指定数目的行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;删除命令&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;ndw或ndW: 删除光标处开始及其后的n-1个字&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;do: 删至行首&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;d$: 删至行尾&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;ndd: 删除当前行及其后n-1行&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;x或X: 删除一个字符，x删除光标后的，而X删除光标前的&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;Ctrl+u: 删除输入方式下所输入的文本&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;搜索及替换命令&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;/pattern: 从光标开始处向文件尾搜索pattern ?pattern: 从光标开始处向文件首搜索pattern n: 在同一方向重复上一次搜索命令&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;N: 在反方向上重复上一次搜索命令&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:s/p1/p2/g: 将当前行中所有p1均用p2替代&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:n1,n2s/p1/p2/g: 将第n1至n2行中所有p1均用p2替代&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:g/p1/s//p2/g: 将文件中所有p1均用p2替换&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;选项设置&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;all: 列出所有选项设置情况&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;term: 设置终端类型&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;ignorance: 在搜索中忽略大小写&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;list: 显示制表位(Ctrl+I)和行尾标志($) number: 显示行号&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;report: 显示由面向行的命令修改过的数目&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;terse: 显示简短的警告信息&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;warn: 在转到别的文件时若没保存当前文件则显示NO write信息&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;nomagic: 允许在搜索模式中，使用前面不带“\”的特殊字符&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;nowrapscan: 禁止vi在搜索到达文件两端时，又从另一端开始&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;mesg: 允许vi显示其他用户用write写到自己终端上的信息&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;最后行方式命令&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:n1,n2 co n3: 将n1行到n2行之间的内容拷贝到第n3行下&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:n1,n2 m n3:将n1行到n2行之间的内容移至到第n3行下&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:n1,n2 d: 将 n1行到n2行之间的内容删除&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:w: 保存当前文件&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:e filename: 打开文件filename进行编辑&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:x: 保存当前文件并退出&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:q: 退出vi :q!: 不保存文件并退出vi :!command: 执行shell命令command :n1,n2 w!command: 将文件中n1行至n2行的内容作为command的输入并执行之， 若不指定n1，n2，则表示将整个文件内容作为command的输入&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;:r!command: 将命令command的输出结果放到当前行&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;寄存器操作&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;quot;?nyy: 将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;quot;?nyw: 将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;quot;?nyl: 将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;quot;?p: 取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;ndd: 将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>ThreadLocal 学习</title>
      <link>https://helao.net/2011/120.html</link>
      <pubDate>2011-03-21 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt;ThreadLocal 是线程内部变量，以空间换时间的做法，将变量绑定到thread内部，这样能是变量成为 线程安全的，从而减小并发编程的复杂度，而sysn 这个典型的已时间换取空间，这个最大的不是性能问题而是 逻辑安全问题，并发编程最考验编程功底了，非牛人慎用。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ThreadLocal&amp;lt;&amp;gt; 在jdk5中已经支持泛型了&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 方法： get() ; 当为空时 会调用 initial（）方法，这个方法默认返回null，需要初始值的话应该继承该类，覆盖这个方法。另一种方法是 继承，自己判断null，并进行初始值&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; set(), 写入值。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 就这几个方法。&lt;/p&gt; &lt;p&gt;案例： spring security 对 将securityContext 绑定到当前线程中，这样在其他地方引用时就可以通过静态方法来用了，&lt;/p&gt; &lt;p&gt;实现了线程安全。 SecurityUserHolder.currentuser() 就是通过这种方法得到的。&lt;/p&gt; &lt;p&gt;还有 hibernateUtil 中的 getCurrentSession() 也是通过这种原理得到的&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;例&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xA;&lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;&#xA; class &amp;nbsp;&amp;nbsp;&amp;nbsp; HibernateUtil(){&#xA; private static final ThreadLocal session = new ThreadLocal();&lt;/p&gt;&#xA;&#xA;&lt;p&gt;public static Session getCurrentSession(){&#xA; Session ss = (Session) session.get();&#xA; if(ss==null){&#xA; ss = SessionFactory.createSession();&#xA; session.set(ss);&#xA;}&#xA; return ss;&#xA; }&#xA;&lt;/pre&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>胡思乱想中</title>
      <link>https://helao.net/2011/119.html</link>
      <pubDate>2011-03-17 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;有款游戏，需要语音识别感觉非常好。&lt;/p&gt; &lt;p&gt;根据pojo生成db，并且同步db，或者根据db生成pojo，这些hibernate都做过了，去翻它的源码，变成自己的东西&lt;/p&gt; &lt;p&gt;我还想做 个网站抓取程序，博客网站同步程序，账本应用，笔记应用，全能搜索，pdf导入导出。&lt;/p&gt; &lt;p&gt;这些东西感觉自己有能力做，真正做的时候却没有一点思路，这是浮躁吗？ 眼高手低？ 也许我太高估自己了，以为自己是百年一遇的天才，其实自己挺笨的，只有比别人研究的时间多才能去超过别人，自己没有那天赋，不用学就会。&lt;/p&gt; &lt;p&gt;默默的前行，一步一个脚印， java，js，perl，php,python,c/c++,汇编，又或go？ 是朝着一个目标前进，还是全面开花变成通才。其实如果自己不聪明就可以朝着通才去努力，这样才不会被淘汰，因为你去钻研一个目标只会浪费时间（这是不自信吗？）别人可以用你1/10的时间来完成的事，所以受限于你的才智天赋，你不应该把有限的时间浪费到一门语言上，这在有限的时间并不会给你带来多大的回报，so全面开花也许是天资受限的人的一条出路。&lt;/p&gt; &lt;p&gt;俗话说坚持才会胜利，在信息爆炸的今天，这句话又有多大的可信度呢，目前确实有很多这样的例子，可是同样有百倍这样失败的例子被人们所忽略。齐头并进也许才是最好的出路，这从投资学上来说也是最保守增收的方法。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>httpsession 详细内容整理</title>
      <link>https://helao.net/2011/118.html</link>
      <pubDate>2011-03-13 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;最近在做登录和权限控制模块，用到了session，发现session的好多方法都不熟悉，而且以前也听说过JsessionId 之类session窃取的事，对这些一直都是一知半解。今天索性google了很多资料，先上sun的官网去看session的文档了解一些方法，又找了别人关于session的看法。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;总结如下：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1，session是什么？  what&lt;/p&gt;&#xA;&#xA;&lt;p&gt;session经常译为会话，以打电话为例，从开始拨号到挂断电话就是你会话的生存周期。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2，session 做什么用的  why？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先举个例子：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;咖啡店举行 消费满5杯咖啡赠送一杯的活动，可每个人一次消费5杯的时候非常少。这时候有3种办法：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1，店员看到每个顾客时都能记住其消费了多少杯，从而给其优惠，这是协议本身具有状态&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2，给每个顾客一个卡片，上面记录顾客的每次消费，这是客户端保存状态&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3，给每个顾客一个卡片，卡片上只有一个编号，顾客每次的消费记录在店里，这就是 服务端有状态&lt;/p&gt;&#xA;&#xA;&lt;p&gt;而http本身是无状态的，所以我们只能使用2，3中方法，来保存一些信息。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;实际采用的是第3种方法，服务器段保存一次会话所有的信息，并生成一个唯一的id，这个id没有规律而且不会重复，将这个id传回到客户段，保存到cookie中。每次访问服务器时，客户端都会偷偷将这个id传到服务器，服务器根据id查到这次会话保存的内容。就能实现会话中共享一些数据。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3，session怎样创建和销毁 ？ how&lt;/p&gt;&#xA;&#xA;&lt;p&gt;session是保存在内存中的，所以会有一些性能上的影响。因此本着这个原则，session是只有在使用到的时候才会被创建，如果始终没有用到session，这个session是永远不会被创建的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如： 访问servlet ，只要你代码中没有 request.getSession()或request.getSession(true);这两行是等价的，那session是不会创建。又 当你访问静态页面时，根本不会生成servlet，所以也不会创建session。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;下面解释一些疑惑： session是第一次请求时创建的？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;大家都知道 jsp是被编译成servlet才执行的，问题就在jsp编译的过程。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;jsp中有个&amp;lt;%@ page session=&amp;ldquo;true/false&amp;rdquo;%&amp;gt; 这个开关表示是否创建session，当你不写这行时，它会默认给你加上这句。所以会造成上面的疑惑。当然还有一些标签中可能有getSession()操作，会产生一些不必要的session。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;session只能在服务端销毁，有三种途径： 1，到达session的最大请求间隔时间时，2，session。invalidate()&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3,服务器进程当掉。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这里也有一些疑惑： 浏览器关闭时，session就会注销。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;首先浏览器关闭时，浏览器并没有给服务器发送任何消息，所以服务器不会知道浏览器何时关闭了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;上面我们知道取得session 是因为浏览器cookie中有sessionid，而普通cookie通常会是会话cookie，也就是说浏览器关闭时，这个cookie会被注销，所以当你再访问服务器时就没有sessionid了，所以造成session关闭了的假象，如果昵称通过特殊方法将sessionid传递给服务器，你会发现session还在。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如果想让cookie保存时间长一些，就需要手动指定cookie的过期时间&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4，实际项目中的难点：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1，浏览器禁用cookie&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这就没办法保存sessionid了，可以采用url重写，转发，加隐藏字段等方法来将sessionid传给服务器。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;如：  baidu.com:jsessionid=adfasdfasdfasdfasdfafdadf?asdfasdf&lt;/p&gt;&#xA;&#xA;&lt;p&gt;baidu.com?jsessionid=asdfasdfasdfadsfad&amp;amp;&amp;amp;adfdf&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这根据服务器的不同实现，第一种可以将普通参数区分开。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2，多人共用session的问题&lt;/p&gt;&#xA;&#xA;&lt;p&gt;例： a 访问 baidu.com ,但他没有帐号，于是他将连接 baidu.com/login.jsp?jsessionid=adsfasdfad（这个a的sessionid） 发给B, B登录后，a就相当于用b的帐号登录了。你们可以在在本地试试。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;解决方法： 当发现通过sessionid从url指定时， 创建一个新的session，将旧session的信息复制到 新sessoin中，然后将新session注销。就能防止上面那种情况了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3，一个帐号多地方登录&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如： 你用abc帐号登录了baidu.com,有打开了一个浏览器，又用abc帐号登录了一次。当不设计敏感操作时，这无所谓，而当你做一些敏感操作时就必须禁止这样情况，防止同时操作，造成重复操作，或者数据损坏。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;解决方法： 监听session，将username和sessionid对应起来，当username再次登录时，注销掉以前的session，保存现在的session，这也是一种比较不错的方案。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>simpletiles0.1 --tiles 2.2.2 去除slf4j 依赖，添加common-logging依赖，并将重新封包</title>
      <link>https://helao.net/2011/117.html</link>
      <pubDate>2011-03-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;将tiles2.2.2 去除了slf4j 的依赖，添加了common-logging支持，并将tiles-api,tiles-core,tiles-servlet,tiles-jsp,tiles-template打包成一个jar，总大小是300多K，这样在项目时引用就方便多了，只需要一个jar。&lt;/p&gt; &lt;p&gt;暂时还不知道tiles-el及其他包的作用，以后有时间研究下源码再重新打一次包&lt;/p&gt; &lt;p&gt;先把这个包发上来，simpletiles.jar, 添加后依赖serlvet环境和common-logging.jar ，，包含了tiles常用的功能，如jsp支持，模板。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>话说 fat32 和ntfs下 单文件夹下 可生成文件的数量限制</title>
      <link>https://helao.net/2011/116.html</link>
      <pubDate>2011-03-11 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;昨天在项目中遇到一个问题，这是在对网站静态化时出的问题，系统报了 File not found , 上层error 是， file or directory&lt;/p&gt; &lt;p&gt;can&#39;t not create&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;我很奇怪，反复测试了两遍一直是这个问题，突然想到是不是文件夹下的文件数量限制有问题。&lt;/p&gt; &lt;p&gt;我立刻写了一个小程序进行测试，果然在fat32下，创建到 16000个文件时 就抛出了异常。&lt;/p&gt; &lt;p&gt;这跟文件名的长短有关系，短文件名大概能创建到30000多个。&lt;/p&gt; &lt;p&gt;我又好奇的测试了一下ntfs下的情况，&lt;/p&gt; &lt;p&gt;下面 公布测试结果：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fat32 /ntfs &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 文件名长度 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;创建文件数&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fat32 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 33000 &lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fat32 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 16 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;20000&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;fat32 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;32 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 16000&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; nfts &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 5 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;gt;400,000 &amp;nbsp; &amp;nbsp; (等不下去了)&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; nfts &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;32 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;gt;247654 (等不下去了)&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;结论: 看来写程序还要注意os和硬件的影响&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>ant 配置，停止 tomcat， 打包war 启动tomcat</title>
      <link>https://helao.net/2011/115.html</link>
      <pubDate>2011-03-11 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt;&lt;img src=&#34;http://blog.csdn.net/images/authorship.gif&#34; border=&#34;0&#34; alt=&#34;原创&#34; width=&#34;15&#34; height=&#34;15&#34; /&gt; &amp;nbsp; ant 配置 停止 tomcat, 打包程序成 war 文件夹，启动 tomcat 一体 &lt;a class=&#34;fav_csdnstylebykimi&#34; title=&#34;收藏到我的网摘中，并分享给我的朋友&#34;&gt;收藏&lt;/a&gt; &lt;/p&gt; &lt;h1 class=&#34;title_txt&#34;&gt; &lt;cite class=&#34;fav_csdnstylebykimi&#34;&gt; &lt;/cite&gt; &lt;/h1&gt; &lt;p&gt;转载请保留： &lt;a href=&#34;http://blog.csdn.net/laorer&#34;&gt;http://blog.csdn.net/laorer&lt;/a&gt; , 谢谢!&lt;/p&gt; &lt;p&gt;没什么好说的，就是一个文件，把几个功能集成在一起， 其他的好说，就是停止和启动&amp;nbsp; tomcat 时遇到了问题，不过已经解决， 代码里有些多余的，你可以自己去掉他&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34;&gt;    &lt;a href=&#34;http://blog.csdn.net/laorer/archive/2009/05/21/4207423.aspx#&#34;&gt;view plain&lt;/a&gt;    &lt;a href=&#34;http://blog.csdn.net/laorer/archive/2009/05/21/4207423.aspx#&#34;&gt;copy to clipboard&lt;/a&gt;    &lt;a href=&#34;http://blog.csdn.net/laorer/archive/2009/05/21/4207423.aspx#&#34;&gt;print&lt;/a&gt;    &lt;a href=&#34;http://blog.csdn.net/laorer/archive/2009/05/21/4207423.aspx#&#34;&gt;?&lt;/a&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-xml&#34;&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;project&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;default&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;deploy&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;property&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;file&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;./build.properties&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;init&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;property&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;value&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;off&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;property&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;optimize&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;value&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;on&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;property&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;deprecation&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;value&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;on&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;classpath&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;path&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;id&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;classpath&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${jdk.lib.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;include&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&lt;strong&gt;/*.jar&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${tomcat.lib.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;include&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&lt;/strong&gt;/*.jar&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${lib.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;include&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&lt;strong&gt;/*.jar&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;lt;pathelement&amp;nbsp;location=&amp;quot;lib/&amp;quot;/&amp;gt;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;Help&amp;nbsp;on&amp;nbsp;usage&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;usage&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;init&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${release.name}&amp;nbsp;Build&amp;nbsp;file&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;-------------------------------------------------------------&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;nbsp;available&amp;nbsp;targets&amp;nbsp;are:&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;nbsp;jar&amp;nbsp;--&amp;gt;&amp;nbsp;generates&amp;nbsp;the&amp;nbsp;${release.name}.jar&amp;nbsp;file&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;nbsp;build&amp;nbsp;--&amp;gt;&amp;nbsp;compiles&amp;nbsp;the&amp;nbsp;source&amp;nbsp;code&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;nbsp;javadoc&amp;nbsp;--&amp;gt;&amp;nbsp;generates&amp;nbsp;the&amp;nbsp;API&amp;nbsp;documentation&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;nbsp;clean&amp;nbsp;--&amp;gt;&amp;nbsp;cleans&amp;nbsp;up&amp;nbsp;the&amp;nbsp;directory&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;nbsp;See&amp;nbsp;the&amp;nbsp;comments&amp;nbsp;inside&amp;nbsp;the&amp;nbsp;build.xml&amp;nbsp;file&amp;nbsp;for&amp;nbsp;more&amp;nbsp;details.&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;-------------------------------------------------------------&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;echo&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;message&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;lt;!--&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;target:&amp;nbsp;delete&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;--&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;delete&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;delete&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${deploy.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;delete&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;quiet&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;delete&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;../sf&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;quiet&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;准备源文件--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;prepare-src&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;init&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;delete&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;quiet&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;create&amp;nbsp;directories&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;mkdir&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;mkdir&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.src.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;mkdir&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${classes.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;mkdir&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;mkdir&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.dir}/WEB-INF&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;mkdir&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.lib.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;mkdir&amp;nbsp;dir=&amp;quot;${deploy.dir}&amp;quot;&amp;nbsp;/&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;mkdir&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.web.classes.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;copy&amp;nbsp;src&amp;nbsp;files&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;copy&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;todir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.src.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${src.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;编译源文件--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;build&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;prepare-src,&amp;nbsp;copyWeb&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;javac&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;srcdir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.src.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;destdir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${classes.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;debug&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${debug}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;optimize&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${optimize}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;classpath&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;refid&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;classpath&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;javac&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;copy&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;todir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.web.classes.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.src.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;include&amp;nbsp;name=&amp;quot;&lt;/strong&gt;/*.xml&amp;quot;/&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;exclude&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&lt;strong&gt;/*.java&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;!--&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;target:&amp;nbsp;copy&amp;nbsp;web&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;--&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;copyWeb&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;copy&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;todir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${web.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;include&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&lt;/strong&gt;/&lt;em&gt;.&lt;/em&gt;&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;jar&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;build&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;jar&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;destfile&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.lib.dir}/${release.name}.jar&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;basedir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${classes.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;jar&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;打war包--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;war&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&amp;nbsp;jar,copyWeb&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;war&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;warfile&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.dir}/${release.name}.war&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;webxml&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.webinf.dir}/web.xml&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;lib&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.lib.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;classes&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;&amp;nbsp;=&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.web.classes.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${package.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;exclude&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;&lt;strong&gt;/*.jar&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;war&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;war&amp;nbsp;打包时，指明了&amp;nbsp;lib 的话， 需要去掉&amp;nbsp;&amp;nbsp;jar&amp;nbsp;文件， 否则会 把&amp;nbsp;jar&amp;nbsp;打两份进&amp;nbsp;war&amp;nbsp;文件--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;lt;!--&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;stopTomcat&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;exec&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;executable&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${tomcat.bin.dir}/shutdown.bat&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;os&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;Windows&amp;nbsp;2000&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;startTomcat&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;&amp;nbsp;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;stopTomcat&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;exec&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;executable&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${tomcat.bin.dir}/startup.bat&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;os&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;Windows&amp;nbsp;2000&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;--&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;start-tomcat&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;delete&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${deploy.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;exec&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;executable&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${tomcat.bin.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;arg&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;value&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;/c&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;arg&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;value&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;startup.bat&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;exec&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;stop-tomcat&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;exec&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;executable&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;cmd&amp;nbsp;&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${tomcat.bin.dir}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;spawn&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;arg&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;value&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;/c&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;arg&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;value&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;shutdown.bat&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;exec&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;发布到本的resin和tomcat--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;publish&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;war,clean&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;delete&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${tomcat.apps.dir}/${release.name}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;copy&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;todir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${tomcat.apps.dir}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;fileset&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;file&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.dir}/${release.name}.war&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;!&lt;span class=&#34;attribute&#34;&gt;--&lt;/span&gt; &lt;span&gt;&amp;nbsp;=================================&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;target:&amp;nbsp;&lt;span class=&#34;attribute&#34;&gt;deploy&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=================================&amp;nbsp;--&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;deploy&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;stop-tomcat,&amp;nbsp;publish,start-tomcat&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;description&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;!--&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;SyncMain&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;java&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;classname&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;com.ce.synchronization.main.SyncMain&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;failonerror&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;fork&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;yes&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;classpath&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;refid&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;classpath&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;--&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;产生javadoc&amp;nbsp;api&amp;nbsp;文档--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;javadoc&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;build&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;mkdir&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.javadocs}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;javadoc&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;packagenames&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${packages}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;sourcepath&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.src}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;destdir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.javadocs}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;author&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;version&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;use&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;splitindex&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;windowtitle&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${Name}&amp;nbsp;API&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;doctitle&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${Name}&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;classpath&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;refid&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;classpath&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;javadoc&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;清除临时文件--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comments&#34;&gt;&amp;lt;!--&amp;nbsp;===================================================================&amp;nbsp;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;name&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;clean&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;depends&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;init&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;delete&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;dir&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;${build.src}&amp;quot;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;attribute&#34;&gt;quiet&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span class=&#34;attribute-value&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;/&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;   &lt;li&gt; &lt;span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;/span&gt; &lt;span class=&#34;tag-name&#34;&gt;project&lt;/span&gt; &lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt;&lt;form&gt; &lt;textarea class=&#34;xhtml&#34; style=&#34;display: none;&#34; cols=&#34;69&#34; rows=&#34;15&#34; name=&#34;code&#34;&gt;&amp;lt;project default=&amp;quot;deploy&amp;quot; name=&amp;quot;test&amp;quot; &amp;gt; &amp;lt;property file=&amp;quot;./build.properties&amp;quot;/&amp;gt;   &amp;lt;target name=&amp;quot;init&amp;quot;&amp;gt;        &amp;lt;property name=&amp;quot;debug&amp;quot; value=&amp;quot;off&amp;quot; /&amp;gt;     &amp;lt;property name=&amp;quot;optimize&amp;quot; value=&amp;quot;on&amp;quot; /&amp;gt;       &amp;lt;property name=&amp;quot;deprecation&amp;quot; value=&amp;quot;on&amp;quot; /&amp;gt;        &amp;lt;!--    classpath --&amp;gt;     &amp;lt;path id=&amp;quot;classpath&amp;quot;&amp;gt;           &amp;lt;fileset dir=&amp;quot;${jdk.lib.dir}&amp;quot;&amp;gt;              &amp;lt;include name=&amp;quot;&lt;/strong&gt;/*.jar&amp;quot;/&amp;gt;          &amp;lt;/fileset&amp;gt;            &amp;lt;fileset dir=&amp;quot;${tomcat.lib.dir}&amp;quot;&amp;gt;               &amp;lt;include name=&amp;quot;&lt;strong&gt;/*.jar&amp;quot;/&amp;gt;          &amp;lt;/fileset&amp;gt;            &amp;lt;fileset dir=&amp;quot;${lib.dir}&amp;quot;&amp;gt;              &amp;lt;include name=&amp;quot;&lt;/strong&gt;/*.jar&amp;quot;/&amp;gt;          &amp;lt;/fileset&amp;gt;            &amp;lt;!--&amp;lt;pathelement location=&amp;quot;lib/&amp;quot;/&amp;gt;--&amp;gt;     &amp;lt;/path&amp;gt;   &amp;lt;/target&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;!-- Help on usage --&amp;gt;    &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;target name=&amp;quot;usage&amp;quot; depends=&amp;quot;init&amp;quot;&amp;gt;      &amp;lt;echo message=&amp;quot;${release.name} Build file&amp;quot; /&amp;gt;       &amp;lt;echo message=&amp;quot;-------------------------------------------------------------&amp;quot; /&amp;gt;        &amp;lt;echo message=&amp;quot;&amp;quot; /&amp;gt;     &amp;lt;echo message=&amp;quot; available targets are:&amp;quot; /&amp;gt;      &amp;lt;echo message=&amp;quot;&amp;quot; /&amp;gt;     &amp;lt;echo message=&amp;quot; jar --&amp;gt; generates the ${release.name}.jar file&amp;quot; /&amp;gt;       &amp;lt;echo message=&amp;quot; build --&amp;gt; compiles the source code&amp;quot; /&amp;gt;       &amp;lt;echo message=&amp;quot; javadoc --&amp;gt; generates the API documentation&amp;quot; /&amp;gt;      &amp;lt;echo message=&amp;quot; clean --&amp;gt; cleans up the directory&amp;quot; /&amp;gt;        &amp;lt;echo message=&amp;quot;&amp;quot; /&amp;gt;     &amp;lt;echo message=&amp;quot; See the comments inside the build.xml file for more details.&amp;quot; /&amp;gt;        &amp;lt;echo message=&amp;quot;-------------------------------------------------------------&amp;quot; /&amp;gt;        &amp;lt;echo message=&amp;quot;&amp;quot; /&amp;gt;     &amp;lt;echo message=&amp;quot;&amp;quot; /&amp;gt; &amp;lt;/target&amp;gt;&amp;lt;!-- - - - - - - - - - - - - - - - - -           target: delete                               - - - - - - - - - - - - - - - - - --&amp;gt;    &amp;lt;target name=&amp;quot;delete&amp;quot;&amp;gt;          &amp;lt;delete dir=&amp;quot;${deploy.dir}&amp;quot;   /&amp;gt;        &amp;lt;delete dir=&amp;quot;${build.dir}&amp;quot; quiet=&amp;quot;true&amp;quot;/&amp;gt;     &amp;lt;delete dir=&amp;quot;../sf&amp;quot; quiet=&amp;quot;true&amp;quot;/&amp;gt;                    &amp;lt;/target&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;!-- 准备源文件--&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;target name=&amp;quot;prepare-src&amp;quot; depends=&amp;quot;init&amp;quot;&amp;gt;        &amp;lt;delete dir=&amp;quot;${build.dir}&amp;quot; quiet=&amp;quot;true&amp;quot;/&amp;gt;     &amp;lt;!-- create directories --&amp;gt;       &amp;lt;mkdir dir=&amp;quot;${build.dir}&amp;quot; /&amp;gt;        &amp;lt;mkdir dir=&amp;quot;${build.src.dir}&amp;quot;/&amp;gt;     &amp;lt;mkdir dir=&amp;quot;${classes.dir}&amp;quot; /&amp;gt;      &amp;lt;mkdir dir=&amp;quot;${package.dir}&amp;quot; /&amp;gt;      &amp;lt;mkdir dir=&amp;quot;${package.dir}/WEB-INF&amp;quot; /&amp;gt;      &amp;lt;mkdir dir=&amp;quot;${package.lib.dir}&amp;quot; /&amp;gt;      &amp;lt;!-- mkdir dir=&amp;quot;${deploy.dir}&amp;quot; / --&amp;gt;        &amp;lt;mkdir dir=&amp;quot;${package.web.classes.dir}&amp;quot;/&amp;gt;       &amp;lt;!-- copy src files --&amp;gt;       &amp;lt;copy todir=&amp;quot;${build.src.dir}&amp;quot;&amp;gt;         &amp;lt;fileset dir=&amp;quot;${src.dir}&amp;quot; /&amp;gt;        &amp;lt;/copy&amp;gt;   &amp;lt;/target&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;!-- 编译源文件--&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;target name=&amp;quot;build&amp;quot; depends=&amp;quot;prepare-src, copyWeb&amp;quot;&amp;gt;      &amp;lt;javac srcdir=&amp;quot;${build.src.dir}&amp;quot; destdir=&amp;quot;${classes.dir}&amp;quot; debug=&amp;quot;${debug}&amp;quot; optimize=&amp;quot;${optimize}&amp;quot;&amp;gt;            &amp;lt;classpath refid=&amp;quot;classpath&amp;quot; /&amp;gt;     &amp;lt;/javac&amp;gt;      &amp;lt;copy todir=&amp;quot;${package.web.classes.dir}&amp;quot;&amp;gt;           &amp;lt;fileset dir=&amp;quot;${build.src.dir}&amp;quot; &amp;gt;               &amp;lt;!-- include name=&amp;quot;&lt;strong&gt;/*.xml&amp;quot;/ --&amp;gt;               &amp;lt;exclude name=&amp;quot;&lt;/strong&gt;/*.java&amp;quot;/&amp;gt;         &amp;lt;/fileset&amp;gt;        &amp;lt;/copy&amp;gt;   &amp;lt;/target&amp;gt; &amp;lt;!-- - - - - - - - - - - - - - - - - -           target: copy web                               - - - - - - - - - - - - - - - - - --&amp;gt; &amp;lt;target name=&amp;quot;copyWeb&amp;quot;&amp;gt;     &amp;lt;copy todir=&amp;quot;${package.dir}&amp;quot;&amp;gt;           &amp;lt;fileset dir=&amp;quot;${web.dir}&amp;quot; &amp;gt;             &amp;lt;include name=&amp;quot;&lt;strong&gt;/&lt;em&gt;.&lt;/em&gt;&amp;quot; /&amp;gt;           &amp;lt;/fileset&amp;gt;        &amp;lt;/copy&amp;gt;   &amp;lt;/target&amp;gt; &amp;lt;target name=&amp;quot;jar&amp;quot; depends=&amp;quot;build&amp;quot;&amp;gt;       &amp;lt;jar destfile=&amp;quot;${package.lib.dir}/${release.name}.jar&amp;quot; basedir=&amp;quot;${classes.dir}&amp;quot;&amp;gt;      &amp;lt;/jar&amp;gt;    &amp;lt;/target&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;!-- 打war包--&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;target name=&amp;quot;war&amp;quot; depends=&amp;quot; jar,copyWeb&amp;quot;&amp;gt;        &amp;lt;war warfile=&amp;quot;${build.dir}/${release.name}.war&amp;quot; webxml=&amp;quot;${package.webinf.dir}/web.xml&amp;quot;&amp;gt;           &amp;lt;lib dir=&amp;quot;${package.lib.dir}&amp;quot;/&amp;gt;         &amp;lt;classes dir = &amp;quot;${package.web.classes.dir}&amp;quot;/&amp;gt;           &amp;lt;fileset dir=&amp;quot;${package.dir}&amp;quot;&amp;gt;              &amp;lt;exclude name=&amp;quot;&lt;/strong&gt;/*.jar&amp;quot;/&amp;gt;          &amp;lt;/fileset&amp;gt;        &amp;lt;/war&amp;gt;&amp;lt;!-- war 打包时，指明了 lib　的话，　需要去掉  jar 文件，　否则会　把 jar 打两份进 war 文件--&amp;gt;   &amp;lt;/target&amp;gt;&amp;lt;!--  &amp;lt;target name=&amp;quot;stopTomcat&amp;quot;&amp;gt;      &amp;lt;exec executable=&amp;quot;${tomcat.bin.dir}/shutdown.bat&amp;quot; os=&amp;quot;Windows 2000&amp;quot; /&amp;gt;    &amp;lt;/target&amp;gt; &amp;lt;target name=&amp;quot;startTomcat&amp;quot; depends =&amp;quot;stopTomcat&amp;quot;  &amp;gt;       &amp;lt;exec executable=&amp;quot;${tomcat.bin.dir}/startup.bat&amp;quot; os=&amp;quot;Windows 2000&amp;quot; /&amp;gt; &amp;lt;/target&amp;gt;--&amp;gt;   &amp;lt;target name=&amp;quot;start-tomcat&amp;quot;&amp;gt;        &amp;lt;delete dir=&amp;quot;${deploy.dir}&amp;quot; /&amp;gt;      &amp;lt;exec executable=&amp;quot;cmd&amp;quot; dir=&amp;quot;${tomcat.bin.dir}&amp;quot;&amp;gt;           &amp;lt;arg value=&amp;quot;/c&amp;quot;/&amp;gt;           &amp;lt;arg value=&amp;quot;startup.bat&amp;quot;/&amp;gt;      &amp;lt;/exec&amp;gt;   &amp;lt;/target&amp;gt;     &amp;lt;target name=&amp;quot;stop-tomcat&amp;quot;&amp;gt;     &amp;lt;exec executable=&amp;quot;cmd &amp;quot; dir=&amp;quot;${tomcat.bin.dir}&amp;quot; spawn=&amp;quot;true&amp;quot;&amp;gt;           &amp;lt;arg value=&amp;quot;/c&amp;quot; /&amp;gt;          &amp;lt;arg value=&amp;quot;shutdown.bat&amp;quot; /&amp;gt;        &amp;lt;/exec&amp;gt;   &amp;lt;/target&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;!-- 发布到本的resin和tomcat--&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;target name=&amp;quot;publish&amp;quot; depends=&amp;quot;war,clean&amp;quot;&amp;gt;       &amp;lt;delete dir=&amp;quot;${tomcat.apps.dir}/${release.name}&amp;quot;/&amp;gt;      &amp;lt;copy todir=&amp;quot;${tomcat.apps.dir}&amp;quot;&amp;gt;           &amp;lt;fileset file=&amp;quot;${build.dir}/${release.name}.war&amp;quot; /&amp;gt;     &amp;lt;/copy&amp;gt;   &amp;lt;/target&amp;gt;     &amp;lt;!-- =================================           target: deploy                       ================================= --&amp;gt;    &amp;lt;target name=&amp;quot;deploy&amp;quot; depends=&amp;quot;stop-tomcat, publish,start-tomcat&amp;quot; description=&amp;quot;description&amp;quot;&amp;gt;            &amp;lt;/target&amp;gt;    &amp;lt;!-- &amp;lt;target name=&amp;quot;SyncMain&amp;quot;&amp;gt;           &amp;lt;java classname=&amp;quot;com.ce.synchronization.main.SyncMain&amp;quot; failonerror=&amp;quot;true&amp;quot; fork=&amp;quot;yes&amp;quot;&amp;gt;               &amp;lt;classpath refid=&amp;quot;classpath&amp;quot;/&amp;gt;           &amp;lt;/java&amp;gt; &amp;lt;/target&amp;gt; --&amp;gt;    &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;!-- 产生javadoc api 文档--&amp;gt;  &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;target name=&amp;quot;javadoc&amp;quot; depends=&amp;quot;build&amp;quot;&amp;gt;       &amp;lt;mkdir dir=&amp;quot;${build.javadocs}&amp;quot; /&amp;gt;       &amp;lt;javadoc packagenames=&amp;quot;${packages}&amp;quot; sourcepath=&amp;quot;${build.src}&amp;quot; destdir=&amp;quot;${build.javadocs}&amp;quot; author=&amp;quot;true&amp;quot; version=&amp;quot;true&amp;quot; use=&amp;quot;true&amp;quot; splitindex=&amp;quot;true&amp;quot; windowtitle=&amp;quot;${Name} API&amp;quot; doctitle=&amp;quot;${Name}&amp;quot;&amp;gt;           &amp;lt;classpath refid=&amp;quot;classpath&amp;quot; /&amp;gt;     &amp;lt;/javadoc&amp;gt;    &amp;lt;/target&amp;gt; &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;!-- 清除临时文件--&amp;gt;    &amp;lt;!-- =================================================================== --&amp;gt;  &amp;lt;target name=&amp;quot;clean&amp;quot; depends=&amp;quot;init&amp;quot;&amp;gt;      &amp;lt;delete dir=&amp;quot;${build.src}&amp;quot; quiet=&amp;quot;true&amp;quot;/&amp;gt; &amp;lt;/target&amp;gt;&amp;lt;/project&amp;gt;&lt;/textarea&gt;  &lt;p&gt;&amp;hellip;下面是&amp;nbsp; build.properties 文件&amp;lt;/p&amp;gt;  &lt;p&gt;&amp;nbsp;&lt;/p&gt;  &lt;div class=&#34;dp-highlighter&#34;&gt;   &lt;div class=&#34;bar&#34;&gt;    &lt;div class=&#34;tools&#34;&gt;     &lt;a href=&#34;http://blog.csdn.net/laorer/archive/2009/05/21/4207423.aspx#&#34;&gt;view plain&lt;/a&gt;     &lt;a href=&#34;http://blog.csdn.net/laorer/archive/2009/05/21/4207423.aspx#&#34;&gt;copy to clipboard&lt;/a&gt;     &lt;a href=&#34;http://blog.csdn.net/laorer/archive/2009/05/21/4207423.aspx#&#34;&gt;print&lt;/a&gt;     &lt;a href=&#34;http://blog.csdn.net/laorer/archive/2009/05/21/4207423.aspx#&#34;&gt;?&lt;/a&gt;    &lt;/div&gt;   &lt;/div&gt;   &lt;ol class=&#34;dp-j&#34;&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&lt;span&gt;#Mon&amp;nbsp;May&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt; &lt;span&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt; &lt;span&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;46&lt;/span&gt; &lt;span&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;41&lt;/span&gt; &lt;span&gt;&amp;nbsp;CST&amp;nbsp;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2009&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; &lt;span&gt;.web.classes.dir=${&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; &lt;span&gt;.dir}/WEB-INF/classes&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;jdk.lib.dir=${java.home}/lib&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;web.dir=${base.dir}/WebContent&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;src.dir=${base.dir}/src&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;jdk.lib.ext.dir=${java.lib.dir}/ext&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;deploy.dir=${tomcat.apps.dir}/${release.name}&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;classes.dir=${build.dir}/classes&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;lib.dir=${web.dir}/WEB-INF/lib&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;jdk.home=E:/java/jdk5&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; &lt;span&gt;.lib.dir=${&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; &lt;span&gt;.dir}/WEB-INF/lib&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;tomcat.lib.dir=${tomcat.home}/common/lib&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;release.name=struts2Tile&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;build.src.dir=${build.dir}/src&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;tomcat.bin.dir=${tomcat.home}/bin&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;tomcat.apps.dir=${tomcat.home}/webapps&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;base.dir=.&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;tomcat.home=E:/java/Tomcat&amp;nbsp;&lt;span class=&#34;number&#34;&gt;5.5&lt;/span&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;build.dir=${base.dir}/build&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/li&gt;    &lt;li&gt; &lt;span&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; &lt;span&gt;.dir=${build.dir}/${release.name}&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;    &lt;li class=&#34;alt&#34;&gt; &lt;span&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; &lt;span&gt;.webinf.dir=${&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; &lt;span&gt;.dir}/WEB-INF&amp;nbsp; &lt;br /&gt;&lt;/span&gt; &lt;/span&gt; &lt;/li&gt;   &lt;/ol&gt;  &lt;/div&gt; &lt;/form&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>jstl 标签</title>
      <link>https://helao.net/2011/114.html</link>
      <pubDate>2011-03-10 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: Verdana, &#39;BitStream vera Sans&#39;, Tahoma, Helvetica, sans-serif; color: #555555; line-height: 17px;&#34;&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;核心标签库&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; 它是JSTL中的核心库，为日常任务提供通用支持，如显示和设置变量、重复使用一组项目、测试条件和其他操作（如导入和重定向Web内容）。Core标签按功能可分为4种类型：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;1 变量维护：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（1）&amp;lt;c:set&amp;gt;:设置变量值和对象属性。语法如下：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:set value=&amp;quot;值&amp;quot; var=&amp;quot;变量名&amp;quot; scope=&amp;quot;变量的作用域&amp;quot; target=&amp;quot;对象名&amp;quot; property=&amp;quot; 对象属性名&amp;quot;&amp;gt;&amp;lt;/c:set&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;每种设置都有两种方式，总结起来，&amp;lt;c:set&amp;gt;的4种形式，如下所示：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;a. 使用标记属性设置JSP变量&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:set value=&amp;quot;值&amp;quot; var=&amp;quot;变量名&amp;quot; scope=&amp;quot;作用域&amp;quot;/&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;b. 使用标记体设置JSP变量&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:set var=&amp;quot;变量名&amp;quot; scope=&amp;quot;作用域&amp;quot;&amp;gt;标记内容&amp;lt;/c:set&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;c. 使用标记属性设置对象属性&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:set value=&amp;quot;变量名&amp;quot; target=&amp;quot;对象名&amp;quot; property=&amp;quot;对象属性名&amp;quot;/&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;d. 使用标记体设置对象属性&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:set target=&amp;quot;对象名&amp;quot; property=&amp;quot;作用域&amp;quot;&amp;gt;标记内容&amp;lt;/set&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（2）&amp;lt;c:remove&amp;gt;:在指定作用域范围内删除变量。语法如下：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:remove var=&amp;quot;变量名&amp;quot; scope=&amp;quot;作用域&amp;quot;/&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;2 流程控制：分为条件标签和迭代标签。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;条件标签：&amp;lt;c:if&amp;gt; &amp;lt;c:choose&amp;gt; &amp;lt;c:when&amp;gt; &amp;lt;c:otherwise&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（1）&amp;lt;c:if&amp;gt;:与Java语言中的if语句的使用方法一样，但不能实现else的功能。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:if&amp;gt;标签有两种语法形式，是以有无标记体来区分的。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 无标签体：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:if test=&amp;quot;测试条件&amp;quot; var=&amp;quot;变量名&amp;quot; [scope=&amp;quot;作用域&amp;quot;]/&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 有标签体：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:if test=&amp;quot;测试条件&amp;quot; var=&amp;quot;变量名&amp;quot; [scope=&amp;quot;作用域&amp;quot;]&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/c:if&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;带标记体的&amp;lt;c:if&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:if test=&amp;quot;${user.visitCount!=0}&amp;quot;&amp;gt;欢迎光临&amp;lt;/c:if&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（2）&amp;lt;c:choose&amp;gt; &amp;lt;c:when&amp;gt; &amp;lt;c:otherwise&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:when&amp;gt; &amp;lt;c:otherwise&amp;gt;无法单独使用，只能作为&amp;lt;c:choose&amp;gt;的子标签来使用。这三个标签组合起来实现Java中的switch语句的功能。语法如下：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:choose&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:when test=&amp;quot;${user.class==’guest’}&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体1&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/c:when&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:when test=&amp;quot;${user.class==’vip’}&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体2&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/c:when&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:otherwise&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体3&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/c:otherwise&amp;gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/c:choose&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;迭代标签：&amp;lt;c:forEach&amp;gt; &amp;lt;c:forTokens&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;(1)&amp;lt;c:forEach&amp;gt;:用于遍历一个对象集合。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:forEach var=&amp;quot;变量名&amp;quot; items=&amp;quot;集合&amp;quot; varStatus=&amp;quot;遍历状态名&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; begin=&amp;quot;begin&amp;quot; end=&amp;quot;end&amp;quot; step=&amp;quot;step&amp;quot; &amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/c:forEach&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（2）&amp;lt;c:forTokens&amp;gt;：用于遍历字符串，而且每次遍历结果返回字符串中的一个单词。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:forTokens items=&amp;quot;字符串&amp;quot; delims=&amp;quot;分界符&amp;quot; var=&amp;quot;变量名&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; varStatus=&amp;quot;遍历状态名&amp;quot; begin=&amp;quot;begin&amp;quot; end=&amp;quot;end&amp;quot; step=&amp;quot;sep&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/c:forTokens&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;3 URL管理&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（1）&amp;lt;c:url&amp;gt;：用于对URL地址进行编码。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 有标签体：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;lt;c:url value=&amp;quot;URL&amp;quot; context=&amp;quot;路径&amp;quot; var=&amp;quot;变量名&amp;quot; scope=&amp;quot;作用域&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:url&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;如下代码：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:url value=&amp;quot;&lt;a style=&#34;color: #2970a6; text-decoration: none;&#34; href=&#34;http://localhost:8080/el/index.jsp&#34;&gt;&lt;span style=&#34;color: #e35c7c;&#34;&gt;http://localhost:8080/el/index.jsp&lt;/span&gt;&lt;/a&gt;&amp;quot; var=&amp;quot;NewURL&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:param name=&amp;quot;name&amp;quot; value=&amp;quot;zero&amp;quot;/&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:param name=&amp;quot;age&amp;quot; value=&amp;quot;28&amp;quot;/&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:url&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;a href=&amp;quot;${NewURL}&amp;quot;&amp;gt;点我呀&amp;lt;/a&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;生成的URL：&lt;a style=&#34;color: #2970a6; text-decoration: none;&#34; href=&#34;http://localhost:8080/el/index.jsp?name=zero&amp;amp;age=28&#34;&gt;&lt;span style=&#34;color: #e35c7c;&#34;&gt;http://localhost:8080/el/index.jsp?name=zero&amp;amp;age=28&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; 无标签体：主要用于编辑上下文URL。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;lt;c:url value=&amp;quot;URL&amp;quot; context=&amp;quot;路径&amp;quot; var=&amp;quot;变量名&amp;quot; scope=&amp;quot;作用域&amp;quot;/&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 如下代码：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;lt;c:url value=&amp;quot;/logon.jsp&amp;quot;&amp;gt;登录&amp;lt;/c:url&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;若当前路径为el,则输出为：/el/logon.jsp&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（2）&amp;lt;c:import&amp;gt;:向当前JSP页面中引入URL资源（可以是远程序站点上的资源）。Include指令和include动作不能向JSP页引入Web程序以外的资源，引入的资源必须位于当前Web程序中。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;以String对象引入的语法:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:import url=&amp;quot;地址&amp;quot; context=&amp;quot;上下文路径&amp;quot; var=&amp;quot;变量名&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; scope=&amp;quot;作用域&amp;quot; charEncoding=&amp;quot;字符集&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体使用&amp;lt;c:param&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:import&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;如下代码:将外部资源引入到当前JSP页面中.&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:import url=&amp;quot;&lt;a style=&#34;color: #2970a6; text-decoration: none;&#34; href=&#34;http://www.hao123.com/&#34;&gt;&lt;span style=&#34;color: #e35c7c;&#34;&gt;http://www.hao123.com&lt;/span&gt;&lt;/a&gt;&amp;quot; var=&amp;quot;myurl&amp;quot; charEncoding=&amp;quot;gb2312&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:import&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;a href=&amp;quot;${myurl }&amp;quot;&amp;gt;地址&amp;lt;/a&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;以Reader对象导入的语法:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:import url=&amp;quot;地址&amp;quot; context=&amp;quot;上下文路径&amp;quot; varReader=&amp;quot;变量名&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; scope=&amp;quot;作用域&amp;quot; charEncoding=&amp;quot;字符集&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体使用其它动作元素&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:import&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;(3)&amp;lt;c:redirect&amp;gt;:用于HTTP重定向。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; 无标签体:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:redirect url=&amp;quot;地址&amp;quot; context=&amp;quot;上下文路径&amp;quot;/&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;有标签体:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:redirect url=&amp;quot;地址&amp;quot; context=&amp;quot;上下文路径&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;c:param/&amp;gt;标签&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:redirect&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（4）&amp;lt;c:param&amp;gt;:只能嵌入到&amp;lt;c:url&amp;gt;、、&amp;lt;c:import&amp;gt;、&amp;lt;c:redirect&amp;gt;标签中作为子元素来使用。此标签主要用于设置URL中将要传入的参数。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;无标签体:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:param name=&amp;quot;名称&amp;quot; value=&amp;quot;值&amp;quot;/ &amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;有标签体:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:param name=&amp;quot;名称&amp;quot; value=&amp;quot;值&amp;quot; &amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:param&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;4 其它标签：&amp;lt;c:out&amp;gt;、&amp;lt;c:catch&amp;gt;。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（1）&amp;lt;c:out&amp;gt;：在JSP页面中显示变量内容。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;无标签体:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:out value=&amp;quot;值&amp;quot; escapeXml=&amp;quot;{true|false}&amp;quot; default=&amp;quot;默认值&amp;quot;/&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;有标签体:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:out value=&amp;quot;值&amp;quot; escapeXml=&amp;quot;{true|false}&amp;quot; default=&amp;quot;默认值&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 标签体&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:out&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;其中:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;default: 用于指定当value值为null时,应该输出的值。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;escapeXml: 用于设置是否将&amp;quot;&amp;lt;&amp;quot;、&amp;quot;&amp;gt;&amp;quot;、&amp;quot;&amp;amp;&amp;quot;、&amp;quot;’&amp;quot;、&amp;quot;&amp;quot;&amp;quot;、这些字符进行转义。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;escapeXml默认为true，表示发生转换。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;quot;&amp;lt;&amp;quot;转换成&amp;quot;&amp;amp;lt&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;quot;&amp;gt;&amp;quot;转换成&amp;quot;&amp;amp;gt&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;quot;&amp;amp;&amp;quot;转换成&amp;quot;&amp;amp;amp&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;quot;’&amp;quot;转换成&amp;quot;&amp;amp;#039&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;quot;&amp;quot;&amp;quot;转换成&amp;quot;&amp;amp;#034&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;（2）&amp;lt;c:catch&amp;gt;：用于处理JSP页面错误。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 如果JSP页面出错，可以通过对page指令属性的设置将其转到错误处理页面上。&amp;lt;c:catch&amp;gt;标签是对这种错误处理的补充。它的处理方式是将可能发生异常的JSP代码片段嵌入到标记体内，然后使用var属性心不烦接收标记体抛出的异常。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:catch var=&amp;quot;变量名&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 嵌套动作&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:catch&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;使用方法：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:catch var=&amp;quot;myexception&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 嵌套动作&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:catch&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;c:if test=&amp;quot;${myexception!=null}&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 内容&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;/c:if&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;最后关于版本问题的讨论&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;ISO-8859-1&amp;quot;?&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;web-app xmlns=&amp;quot;http://java.sun.com/xml/ns/j2ee&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&amp;quot;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;version=&amp;quot;2.4&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;2.4的版本需要jstl.jar和standard.jar,还要注意版本问题，不同版本不能兼容。、&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;应用部署运行的时候出现JSP异常, 发生在使用JSTL库的时候: According to TLD or attribute directive in tag file, attribute value does not accept any expressions, 可能是因为使用了JSP2.0版本, 同时又没有使用JSTL core库的备用版本(RT库), 以下有两种处理方法:&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;1. 如果不想使用web-app_2_4.xsd 和jstl1.1 那么可以按照下面两种方式修改&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;1). 修改web.xml.&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;web-app xmlns=&amp;quot;http://java.sun.com/xml/ns/j2ee&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&amp;quot; version=&amp;quot;2.4&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;改为2.3版本的&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;!DOCTYPE web-app PUBLIC &amp;quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&amp;quot; &amp;quot;http://java.sun.com/dtd/web-app_2_3.dtd&amp;quot;&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;web-app&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;2). 使用JSTL core RT库&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;JSTL core库的有两种taglib伪指令, 其中RT库即是依赖于JSP传统的请求时属性值, 而不是依赖于EL来实现(称为EL库.JSP2.0将支持EL)&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;JSP中使用 &amp;lt;%@ taglib uri=http://java.sun.com/jstl/core prefix=&amp;quot;c&amp;quot;%&amp;gt;在2.3版本都可以,在2.4就不行了, 这是版本不兼容引起的，稍后将介绍servlet的版本。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;只要将&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;%@ taglib uri=&amp;quot;http://java.sun.com/jstl/core&amp;quot; prefix=&amp;quot;c&amp;quot;%&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;改为&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;%@ taglib uri=http://java.sun.com/jstl/core_rt prefix=&amp;quot;c&amp;quot;%&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;2：如果要使用jstl1.1（推荐） 则按照一下修改，很简单的。&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;jstl存在1.0和1.1的差异问题，用EL建议需要在1.1的版本下，&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;使用jstl1.1 只需要将&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;1.0的为&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;%@ taglib uri=&amp;quot;http://java.sun.com/jstl/core&amp;quot; prefix=&amp;quot;c&amp;quot; %&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;换成：&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 2em; padding: 0px;&#34;&gt;&amp;lt;%@ taglib uri=&amp;quot;http://java.sun.com/jsp/jstl/core&amp;quot; prefix=&amp;quot;c&amp;quot; %&amp;gt;&lt;/p&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>安装 php5, apache2 mysql5，搭建php环境</title>
      <link>https://helao.net/2011/113.html</link>
      <pubDate>2011-03-08 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;1，安装apache2&lt;/p&gt; &lt;p&gt;&lt;span&gt;sudo apt-get install apache2&lt;/span&gt;&lt;/p&gt; &lt;p&gt;2，安装php5&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;span&gt;sudo apt-get install php5 //安装PHP5&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; &lt;p&gt;sudo apt-get install libapache2-mod-php5 //配置APACHE+PHP （这个也可以不找 上个命令会自动装好）&lt;/p&gt; &lt;p&gt;sudo /etc/init.d/apache2 restart //重启APACHE&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;下面进行测试php5和apache是否安装成功&lt;/p&gt; &lt;p&gt;&amp;nbsp;打开gksudo gedit /var/www/test.php， 随便输入点什么：hello world&lt;/p&gt; &lt;p&gt;在浏览器打开localhost/test.php 或 127.0.0.1/test/php 就可以看到你输出的东西了。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;3.安装MYSQL&lt;/p&gt; &lt;p&gt;sudo apt-get install mysql-server&lt;/p&gt; &lt;p&gt;安装完成按提示设置root密码&lt;/p&gt; &lt;p&gt;4、让apache、php支持 mysql&lt;/p&gt; &lt;p&gt;sudo apt-get install libapache2-mod-auth-mysql&lt;/p&gt; &lt;p&gt;sudo apt-get install php5-mysql&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;sudo /etc/init.d/apache2 restart&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;-------------------------------------------------------下面是转载的----------------------------------------------------------------&lt;/p&gt; &lt;p&gt;&lt;span&gt;安装步骤&lt;br /&gt;&lt;br /&gt;一，安装&lt;/span&gt;&lt;span&gt;数据库&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# apt-get install mysql-server-5.0 &lt;br /&gt;# apt-get install mysql-client-5.0&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;如果安装mysql时没有用密码，我们须要修改mysql root 密码&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;# mysqladmin -u root password &amp;quot;填你的密码&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;br /&gt;2，安装Apache HTTP Server&lt;br /&gt;&lt;br /&gt;sudo apt-get install apache2&lt;br /&gt;&lt;br /&gt;3，安装 PHP5和Apache PHP5 module&lt;br /&gt;# apt-get install php5 &lt;br /&gt;# apt-get install libapache2-mod-php5&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;# apt-get install php5-gd&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;# apt-get install php5-mysql&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;# apt-get install php5-common&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;# apt-get install php5-cli&lt;/span&gt;&lt;br /&gt;&lt;span&gt;# apt-get install php5-cgi&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;# apt-get install php5-ffmpeg&lt;br /&gt;# apt-get install php5-imagick&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;4，重启Apache&lt;br /&gt;sudo /etc/init.d/apache2 restart&lt;br /&gt;&lt;br /&gt;5，安装phpMyAdmin&lt;br /&gt;sudo apt-get install phpmyadmin&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;默认安装在 /usr/share/phpmyadmin&lt;/span&gt;&lt;br /&gt;&lt;span&gt;使用apt-get安装不知道装哪去啦，可以使用dpkg -L phpmyadmin 看看安装在什么地方.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;安装完成之后，系统内会增加这么几个目录：&lt;br /&gt;/etc/phpmyadmin&lt;br /&gt;/usr/share/phpmyadmin&lt;/span&gt;&lt;br /&gt;&lt;span&gt;作个链接到 /var/www/ 目录下，命令为：&lt;br /&gt;sudo ln -s /usr/share/phpmyadmin/ /var/www/&lt;br /&gt;或者把其移到站点根目录下：&lt;br /&gt;mv /usr/share/phpmyadmin/ /var/www/phpmyadmin/&lt;br /&gt;然后访问http://localhost/phpmyadmin就可以看到登录页面了,直接输入安装时的MYSQL用户名及密码即可。&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;二，配置&lt;br /&gt;&lt;br /&gt;1.配置php5&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;sudo gedit /etc/php5/apache2/php.ini&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;修改允许最大使用内存，查找&lt;/span&gt;&lt;br /&gt;&lt;span&gt;memory_limit = 8M&lt;/span&gt;&lt;br /&gt;&lt;span&gt;修改为&lt;/span&gt;&lt;br /&gt;&lt;span&gt;memory_limit = 32M&lt;/span&gt;&lt;br /&gt;&lt;span&gt;修改允许最大上传尺寸，查找&lt;/span&gt;&lt;br /&gt;&lt;span&gt;upload_max_filesize = 2M&lt;/span&gt;&lt;br /&gt;&lt;span&gt;修改为&lt;/span&gt;&lt;br /&gt;&lt;span&gt;upload_max_filesize = 8M&lt;/span&gt;&lt;br /&gt;&lt;span&gt;允许 mysql 和 gd 模块，检查文件最后是否包含下面的代码，如果没有添加上。&lt;br /&gt;（默认是在配置文件最后有添加的，检查一下以防万一）&lt;/span&gt;&lt;br /&gt;&lt;span&gt;extension=mysql.so&lt;/span&gt;&lt;br /&gt;&lt;span&gt;extension=gd.so&lt;/span&gt;&lt;br /&gt;&lt;span&gt;保存并关闭文件。&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;启用 mod_rewrite 模块&lt;br /&gt;sudo a2enmod rewrite&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;2.配置apache2&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;apache2默认的sites路径在&lt;/span&gt;&lt;br /&gt;&lt;span&gt;/var/www/sites&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;[主目录位置&lt;br /&gt;/var/www&lt;br /&gt;更改主目录位置&lt;br /&gt;sudo gedit /etc/apache2/sites-available/default&lt;/span&gt;]&lt;br /&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;sudo gedit /etc/apache2/conf.d/charset&lt;br /&gt;这个是网站编码配置，里面内容很少，打开看就知道了，我这里将最后行的 &lt;br /&gt;#AddDefaultCharset UTF-8 前面的#去掉，使用UTF-8编码，当然也可以把 UTF-8改成别的编码.&lt;br /&gt;&lt;br /&gt;sudo gedit /etc/apache2/sites-available/default&lt;br /&gt;&lt;br /&gt;更改apache2运行路径，更改DocumentRoot 指向的路径（绝对路径），更改&amp;lt; Directory &amp;gt; 里的路径，和DocumentRoot保持一致&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;配置 apache2.conf&lt;br /&gt;sudo gedit /etc/apache2/apache2.conf&lt;br /&gt;以管理员身份打开文件/etc/apache2/httpd.conf，在文件中添加一下两行内容并保存：&lt;br /&gt;AddType application/x-httpd-php .php&lt;br /&gt;AddType application/x-httpd-php-source .phps&lt;br /&gt;上面两行的目的是使Apache支持PHP文件&lt;br /&gt;然后在终端中执行命令/etc/init.d/apache2 restart 重启Apache，以使配置升效。&lt;br /&gt;在浏览器中输入http://localhost.如果出现it’s works 表示apache已经安装成功。&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;使用如下命令运行 Apache：&lt;br /&gt;sudo /usr/sbin/apache2ctl start&lt;br /&gt;要停止 Apache，使用：&lt;br /&gt;sudo /usr/sbin/apache2ctl stop&lt;br /&gt;最后，重启 Apache，执行如下命令：&lt;br /&gt;sudo /usr/sbin/apache2ctl restart&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;重启 apache&lt;br /&gt;sudo /etc/init.d/apache2 restart&lt;br /&gt;有时这两个比重起好&lt;br /&gt;sudo /etc/init.d/apache2 stop&lt;br /&gt;sudo /etc/init.d/apache2 start&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;3.配置 mysql，让它支持其它客户端访问，如果你不需要就不用修改。&lt;br /&gt;&lt;br /&gt;sudo gedit /etc/mysql/my.cnf&lt;br /&gt;查找文件&lt;br /&gt;skip-networking&lt;br /&gt;修改为&lt;br /&gt;#skip-networking&lt;br /&gt;保存并关闭文件。&lt;br /&gt;&lt;br /&gt;重新启动 mysql&lt;br /&gt;sudo /etc/init.d/mysql restart&lt;br /&gt;&lt;br /&gt;三，测试&lt;br /&gt;&lt;br /&gt;为了检查你的&lt;br /&gt;为检查你的PHP安装状态：&lt;br /&gt;sudo gedit /var/www/testphp.php&lt;br /&gt;在上述文件中插入下面这行代码：&lt;br /&gt;&lt;/span&gt;&amp;lt;?php&lt;br /&gt;phpinfo();&lt;br /&gt;?&amp;gt; &lt;br /&gt;&lt;span&gt;在Web浏览器中查看此页面，通过 http://yourserveripaddress/testphp.php 或 http://localhost/testphp.php 地址。&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ubuntu&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;sudo apt-get install apache2&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;sudo apt-get install mysql-server&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install mysql-client&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php5&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install phpmyadmin&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php5-mysql&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install libapache2-mod-php5&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php5-gd&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;sudo apt-get install php5-common&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;sudo apt-get install php5-ffmpeg&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php5-imagick&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php5-cli&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php5-cgi&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php-pear&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php5-xcache&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php5-dev&lt;/span&gt;&lt;br /&gt;&lt;span&gt;sudo apt-get install php5-memcache&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>js 语法入门 1</title>
      <link>https://helao.net/2011/112.html</link>
      <pubDate>2011-03-02 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;对象有： &amp;nbsp;数组：[] , &amp;nbsp;对象：{}, 字符串对象：&amp;quot; &amp;quot;, 方法： &amp;nbsp;function , &amp;nbsp;类&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;new &amp;nbsp; Array(x,x,x,x) &amp;nbsp; , Object() &amp;nbsp; String(), &amp;nbsp;Function &amp;nbsp;Class&lt;/p&gt; &lt;p&gt;typeof &amp;nbsp; obj: &amp;nbsp;显示对象的类型， 可以匹配的有 object，function,包括基本类型，不会区分 Array ,Array是object的一种。&lt;/p&gt; &lt;p&gt;instanceof &amp;nbsp; Type ,检测对象是什么类型，和java中的语法类似&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;js判断对象的值时 ，首先调用valueOf() ，判断是否符合上下文，符合就返回，不符合就返回toString（） 值。需要覆盖toString 方法。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;==（类型不一致时 会做类型转换） &amp;nbsp;!= &amp;nbsp;===(这个符号需要类型和值 完全相等)&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;对象的 prototype 属性，感觉跟 父类的概念很类似&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;function &amp;nbsp;有 call 和apply方法可以用来切换上下文&lt;/p&gt; &lt;p&gt;js中一切皆为对象&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;还有 try， catch finally 语法，throw new Error（“”）；&lt;/p&gt; &lt;p&gt;列表中的常用方法： &amp;nbsp;concat（）， join（）， pop（），push（）&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;reverse() , slice();shift(),unshift,sort(),splice(),valueOf()&lt;/p&gt; &lt;p&gt;字符串也可以做下标 如 &amp;nbsp;var a = new Array(); &amp;nbsp;a[&#39;first&#39;] = &#39;firse&#39;;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;js中的正则表达式 ： &amp;nbsp; ^ 表示开始，$表示结束, &amp;nbsp;* 0或者任意个，+ 表示 1个或多个， [] 从中取值，()表示分组，&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;\r 回车， \n 换行， \t 制表符，\f 换页,\x# 十六进制数， \cX 控制字符&lt;/p&gt; &lt;p&gt;[...] 集合中的任一个， [^...] 不在集合中的任一个字符， . 除\n 之外的任一个字符&lt;/p&gt; &lt;p&gt;\w 所有的胆子，包括字符，数字及下划线， \W不包括所有的胆子，\w的补集&lt;/p&gt; &lt;p&gt;\s 所有的空白字符，\S 所有的非空白字符,\d 所有的数字，\D 所有的非数字,\b 退格字符&lt;/p&gt; &lt;p&gt;{n} 重复n次， &amp;nbsp;() 分组的引用 &amp;nbsp;\1 以1开始&lt;/p&gt; &lt;p&gt;使用 正则 &amp;nbsp; var regex = /pattern/&lt;/p&gt; &lt;p&gt;i，g,m 三种模式， i: 大小写开关， g 全文搜索开关，m: 多行搜索开关。&lt;/p&gt; &lt;p&gt;三个方法： &amp;nbsp;test(), exec(); &amp;nbsp;compile();&lt;/p&gt; &lt;p&gt;String 中的方法 match(), replace (), search(), split()&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;看了一个Y - 语法，晕死了，没看懂。闭包太能开发智力了&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>mysql 导入导出 sql文件</title>
      <link>https://helao.net/2011/104.html</link>
      <pubDate>2011-02-28 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;&#34;&gt;将数据库mydb导出到e:\MySQL\mydb.sql文件中：&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;, monospace; line-height: 24px; white-space: pre;&#34;&gt;&lt;span style=&#34;color: black; background-color: inherit; padding: 0px; margin: 0px;&#34;&gt;&lt;span class=&#34;tag&#34; style=&#34;color: #006699; background-color: inherit; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;MySQLdump&amp;nbsp;-h&amp;nbsp;localhost&amp;nbsp;-u&amp;nbsp;root&amp;nbsp;-p&amp;nbsp;mydb&amp;nbsp;&amp;gt;e:\MySQL\mydb.sql&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;&#34;&gt;.将数据库mydb中的mytable导出到e:\MySQL\mytable.sql文件中：&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;, monospace; line-height: 24px; white-space: pre;&#34;&gt;&lt;span style=&#34;color: black; background-color: inherit; padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: black; background-color: inherit; padding: 0px; margin: 0px;&#34;&gt;c:\&lt;/span&gt;&lt;span class=&#34;tag&#34; style=&#34;color: #006699; background-color: inherit; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;MySQLdump&amp;nbsp;-h&amp;nbsp;localhost&amp;nbsp;-u&amp;nbsp;root&amp;nbsp;-p&amp;nbsp;mydb&amp;nbsp;mytable&amp;gt;e:\MySQL\mytable.sql&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;&#34;&gt;将数据库mydb的结构导出到e:\MySQL\mydb_stru.sql文件中：&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;, monospace; line-height: 24px; white-space: pre;&#34;&gt;&lt;span style=&#34;color: black; background-color: inherit; padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: black; background-color: inherit; padding: 0px; margin: 0px;&#34;&gt;c:\&lt;/span&gt;&lt;span class=&#34;tag&#34; style=&#34;color: #006699; background-color: inherit; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;MySQLdump&amp;nbsp;-h&amp;nbsp;localhost&amp;nbsp;-u&amp;nbsp;root&amp;nbsp;-p&amp;nbsp;mydb&amp;nbsp;--add-drop-table&amp;nbsp;&amp;gt;e:\MySQL\mydb_stru.sql&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: 14px; line-height: 20px;&#34;&gt;-d 没有数据 --add-drop-table 在每个create语句之前增加一个drop table&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;&#34;&gt;&lt;strong&gt;从外部文件MySQL导入数据到数据库中：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;, monospace; line-height: 24px; white-space: pre;&#34;&gt;&lt;span style=&#34;color: black; background-color: inherit; padding: 0px; margin: 0px;&#34;&gt;&lt;span style=&#34;color: black; background-color: inherit; padding: 0px; margin: 0px;&#34;&gt;c:\&lt;/span&gt;&lt;span class=&#34;tag&#34; style=&#34;color: #006699; background-color: inherit; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;MySQL&amp;nbsp;-h&amp;nbsp;localhost&amp;nbsp;-u&amp;nbsp;root&amp;nbsp;-p&amp;nbsp;mydb2&amp;nbsp;&amp;lt;&amp;nbsp;&lt;span class=&#34;tag-name&#34; style=&#34;color: #006699; background-color: inherit; font-weight: bold; padding: 0px; margin: 0px;&#34;&gt;e:&lt;/span&gt;\MySQL\mydb2.sql&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: song, Verdana; border-collapse: collapse;&#34;&gt;mysql&amp;gt;source &lt;span style=&#34;&#34;&gt;d:\name_db.sql&lt;/span&gt;&amp;nbsp;，这条语句用来通过初始化程序对数据库进行初始化很不错&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;&#34;&gt;&lt;strong&gt;关于导入文件大小限制问题的解决：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;&#34;&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;默认情况下：MySQL 对导入文件大小有限制的，最大为2M，所以当文件很大时候，直接无法导入，下面就这个问题的解决列举如下：&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;1.在my.ini中修改相关参数：&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;影响MySQL导入文件大小的参数有三个：&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;memory_limit=128M,upload_max_filesize=2M,post_max_size=8M&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;修改upload_max_filesize=200 M 这里修改满足你需要的大小，&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;可以同时修改其他两项memory_limit=250M post_max_size=200M&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; text-indent: 28px; padding: 0px;&#34;&gt;这样就可以MySQL导入200M以下的.sql文件了。&lt;/p&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>在线理财账本 后记</title>
      <link>https://helao.net/2011/103.html</link>
      <pubDate>2011-02-28 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;前几天看到别人已经写好了一个gae的账本应用，于是索要了一份也发布到了gae上。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/admin/blogs/mmm2me.appspot.com&#34;&gt;mmm2me.appspot.com&lt;/a&gt; (我这里需翻过伟大的墙才行)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;项目是用python写的，不会用python的也没关系很好部署上去的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1，下载python 2.5.4,安装。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2，下载gae python客户端，安装&lt;/p&gt;&#xA;&#xA;&lt;p&gt;3，下载coolmoney 项目源码&lt;/p&gt;&#xA;&#xA;&lt;p&gt;4，修改 yaml.xml 中的 applicaiton_id,为你的应用id&lt;/p&gt;&#xA;&#xA;&lt;p&gt;5，修改setting。xml中的 admin email，修改为你的账号 （这里是将你的账号作为管理员）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;6，运行 gae python 客户端，添加项目，定位到 youpath/coolmoney/src/&lt;/p&gt;&#xA;&#xA;&lt;p&gt;7,选中该应用，点击部署，等待提示成功，ok了&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>python 语法入门 2</title>
      <link>https://helao.net/2011/102.html</link>
      <pubDate>2011-02-28 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;python的数据类型有：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;列表，元组，set，字典&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;列表有 append(n), insert(n,x),pop(n),remove(n),index(x),count(x),sort(),reverse();&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;还有列表内置函数，&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; filter(func,[x,y]) &amp;nbsp; func 返回true or false， 将列表中的值，分别放到func中根据返回的true 来将该值取出&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; map（func,[x,y]） 将列表中的值 放到func中，将返回值放到返回的列表中。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; map（func，[x,y],[x,7]）func中必须接受足够的参数，两个列表的长度必须一致&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; reduce（func，【2，3】，0） 第三个数可选&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; 计算前两个数，将返回值与第三个值进行计算。当有第三个参数时，将第三个参数和列表的第一个数进行计算，然后类推&lt;/p&gt; &lt;p&gt;del 删除列表中的值，或删除变量&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; del（a[2]）,del(a[1:2]) &amp;nbsp;del(:)删除全部元素， del（a）,删除该变量&lt;/p&gt; &lt;p&gt;set（）不重复的列表&lt;/p&gt; &lt;p&gt;&amp;nbsp;a, a - b, &amp;nbsp; a &amp;amp; b a | b , a^b&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;循环语法： &amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; for &amp;nbsp;n in range:&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;print n &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; for k,v in dict.iteritems():&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; print k,v&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; for i,v in range.enumerate():&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;print i,v&lt;/p&gt; &lt;p&gt;for x,y in zip(list1,list2)&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; print x,y &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;zip可以同时解读两个列表&lt;/p&gt; &lt;p&gt;sorted函数可以不改动原列表生成一个排好序的新列表&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;python的脚本需要以 .py结尾，&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;在python的包中必须要有 __init__.py，可以有初始化操作，也可以为空&lt;/p&gt; &lt;p&gt;&amp;nbsp;from &amp;nbsp;module import submodule&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;import module&amp;nbsp;&lt;/p&gt; &lt;p&gt;from module import *， 这样无法引入 __ 开始的定义&lt;/p&gt; &lt;p&gt;&amp;nbsp;dir()可以查看 模块的定义&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>python 语法介绍（入门级）</title>
      <link>https://helao.net/2011/101.html</link>
      <pubDate>2011-02-26 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;今天又看了看 python，熟悉了一下语法&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;python属于动态语言，&lt;/p&gt; &lt;p&gt;一些常用的 语法结构： &amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; if &amp;nbsp; : else &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; for : else &amp;nbsp; （当for遍历完后会执行else）&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; while else (当while里面为false时)&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;break,continue &amp;nbsp; &amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; in 可以用来遍历数组，也可以检查数组中是否含有 如 &amp;nbsp;if a in [a,b]&lt;/p&gt; &lt;p&gt;常用方法&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;range（start,end,step） 从0开始 end不计&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;print&amp;nbsp;&lt;/p&gt; &lt;p&gt;传多个参数用，隔开&lt;/p&gt; &lt;p&gt;还有定义函数时，方法名下第一行可写字符串，用来做文档，方法名后 用#来写注释&lt;/p&gt; &lt;p&gt;关于*abd,**abdd&lt;/p&gt; &lt;p&gt;这个*可以理解为解包， 而意味着abd就是个包&amp;nbsp;&lt;/p&gt; &lt;p&gt;因此可以这样 &amp;nbsp; def my_function(logn,name=&#39;anyone&#39;,*arg,**map)&lt;/p&gt; &lt;p&gt;这样接受可变参数&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;剩下的就是一些常用 的函数和库的介绍，正在看。看完后再整理&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;写起来是挺方便的，尤其实在命令行下。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>为nutz添加tiles视图</title>
      <link>https://helao.net/2011/99.html</link>
      <pubDate>2011-02-24 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;公司的项目使用struts1，这时我接触到了tiles，这个页面增强布局框架，使用了将近半年，感觉良好。最近有一个个人项目我采用nutz，感到只用jsp太麻烦，于是想将tiles整合进来。tiles一般是和struts这样的框架整合的例子多，单独用的几乎没有。于是狠下心去看tiles的主页，终于有了收获，用了一下午加一晚上终于跑通了例子，并将nutzView写好了&lt;br /&gt;&lt;br /&gt;首先我使用了tiles2.2，去官网下载 bin包。&lt;br /&gt;解压后，选取 tiles-jsp,tiles-core,tiles-servlet,tiles-api,&lt;br /&gt;slf4j-api,slf4j-log4j12,conmmons-beanutils,commons-digester,commons-logging,jcl-over-slf4j,log4j这些jar，copy到 lib下。&lt;br /&gt;然后&lt;/p&gt; &amp;nbsp; &lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;public class TestTileFactory extends BasicTilesContainerFactory {        @Override       protected List&amp;lt;URL&amp;gt; getSourceURLs(TilesApplicationContext applicationContext,             TilesRequestContextFactory contextFactory) {            List&amp;lt;URL&amp;gt; urls = new ArrayList&amp;lt;URL&amp;gt;();          try {               urls.add(applicationContext.getResource(&amp;quot;/WEB-INF/tiles-defs.xml&amp;quot;));          } catch (IOException e) {               throw new DefinitionsFactoryException(                      &amp;quot;Cannot load definition URLs&amp;quot;, e);            }           return urls;        }}  &lt;/pre&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;再添加 类&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;white-space: pre;&#34;&gt;public class TestTilesListener extends AbstractTilesListener {&lt;/span&gt;&lt;/p&gt; &lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;     @Override       protected TilesInitializer createTilesInitializer() {           return new TestTilesListenerInitializer();      }       private static class TestTilesListenerInitializer extends AbstractTilesInitializer {            @Override           protected AbstractTilesContainerFactory createContainerFactory(                 TilesApplicationContext context) {              return new TestTileFactory();           }       }}&lt;/pre&gt; &lt;p&gt;&amp;nbsp;在web.xml中添加配置&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;span style=&#34;white-space: pre;&#34;&gt;&amp;lt;listener&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;       &amp;lt;listener-class&amp;gt;com.sh169.util.TestTilesListener&amp;lt;/listener-class&amp;gt;  &amp;lt;/listener&amp;gt;&lt;/pre&gt; &lt;p&gt;&amp;nbsp;然后是，添加nutz的view&lt;/p&gt; &lt;p&gt;&amp;nbsp;下面是代码&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;span style=&#34;white-space: pre;&#34;&gt;public class TilesView implements View{&lt;/span&gt;&lt;/p&gt; &lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;   private String viewName;        public TilesView(){}    public TilesView(String viewName){      this.viewName = viewName;   }   @SuppressWarnings(&amp;quot;deprecation&amp;quot;)  @Override   public void render(HttpServletRequest req, HttpServletResponse resp,            Object obj) throws Throwable {      req.setAttribute(&amp;quot;obj&amp;quot;, obj);     TilesContainer tc = TilesAccess.getContainer(req.getSession().getServletContext());     tc.render(viewName, req,resp);  }}public TilesViewMaker(){} @Override   public View make(Ioc ioc, String type, String value) {      if(&amp;quot;tiles&amp;quot;.equalsIgnoreCase(type))            return new TilesView(value);        return null;    }&lt;/pre&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;使用时添加 @ok(&amp;quot;tiles:yourdefname&amp;quot;)即可&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;使用感受：引用的jar包太多了，精简到4个比较能接受，还有这是2.1中的例子，在2.2中tilesAccess中的 getContainer方法被提示不可用，应该有其他方法可以替代，以后有时间研究下 tiles的源码，自己整理成一个jar包，这样引用比较方便&lt;/p&gt; &lt;p&gt;我感觉包这样划分比较好，tile-core，tile-jsp，tile-freemarker，依次类推。这样使用起来将会很方便，而且logger也应该写一个logger类，替代common-logging的功能，这样能少引用几个类。&lt;/p&gt; &lt;p&gt;好了要睡觉了，剩下的明天再研究。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>项目中的 点滴 经验</title>
      <link>https://helao.net/2011/98.html</link>
      <pubDate>2011-02-16 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;1，当自己写工具类的时候，写完之后一定要写 单元测试，确保正确性，并写好说明 &lt;br /&gt;2，项目再急 也要写单元测试， 最少也要吧 service层的 方法都测试一遍，否则只会花费更多的时间来处理 &lt;br /&gt;3，越是着急的时候，写的代码越容易出问题 &lt;br /&gt;4，调试bug时，时间过的总是很快。尤其是没有单元测试，每次都要启动服务器。 &lt;br /&gt;5，当设计类时 有时候怎样设计 都感觉不好，不妨将假设条件变简单，变得十分容易设计后，然后完成这几个类，然后在类里扩展 那些舍掉的条件， 然后设计框架自然就出来了。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>要研究 html5， tiles，nutz,freemarker</title>
      <link>https://helao.net/2011/97.html</link>
      <pubDate>2011-02-16 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;这几个技术是目前急需的，html5，还有sql可以排后一些 &lt;br /&gt; &lt;br /&gt;nutz和tiles学的够用了，可以应用于实践了。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>公司项目的破需求</title>
      <link>https://helao.net/2011/96.html</link>
      <pubDate>2011-02-15 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;公司产品部连个提需求的都没有，都是我们项目经理自己再想需求，他自己做的需求都不确定，要美工去确定，直接把模块扔给我们，需求十分粗糙，有些需求都很模糊的， 他也不确定是不是该有这个东西。我和美工同时做，谁和谁想的都不一样，做完之后在整合，几乎都要在重写一遍。过一阵子跳槽啊，呆不下去了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>项目中遇到的一些问题记录</title>
      <link>https://helao.net/2011/95.html</link>
      <pubDate>2011-02-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;1，项目无法连接数据库， can&amp;rsquo;t open connection . &lt;br /&gt;&amp;nbsp; 这个错误一看就知道 是 配置文件的问题，我仔细检查了 url，username，password,之后发现没有问题，我又用mysql客户端进行测试，发现依然没问题。 &lt;br /&gt;&amp;nbsp; 百思不得其解，鼠标乱动中。。。突然发现username=root ,root后多了一个空格，去掉空格后项目正常连接数据库了， &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可能spring读取property文件时会取得值后的空格，这点需要引起注意 &lt;br /&gt;2，当struts1 中使用 本地化 message时，如果你引用了 message，而配置文件中没有添加该message，就会引发错误，提示message未找到。对外显示是引发异常。 &lt;br /&gt; &lt;br /&gt;3，当使用hibernate的过程中出现 nosuchmethod&amp;nbsp; &amp;hellip;. antlr 这类异常，可以肯定就是你的hql语句出问题了。仔细检查一下，最好一词一词的查看一下。这个在项目搭建初期，最好有一个hql测试环境，sql和hql这些最好能提前测试，可以提高开发效率。这个hql在eclipse中就有，需要探索一下 &lt;br /&gt; &lt;br /&gt;4,在项目中使用maven出现了 noClassDef这个问题，可以肯定是 jar包的问题。具体哪个包的问题需要根据报错的类来进行分析，实在不行直接上google一般就可以找到答案。 &lt;br /&gt; &lt;br /&gt;5，jquery ui dialog 不能指定弹出div的宽度和高度，原因正在分析，我看了jquery ui的源码，确实发现 jquery ui将height 指定为 auto。 &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这貌似需要首先加载iframe，让其完全展示后，在指定为dialog，这样做不对 &lt;br /&gt;&amp;nbsp;&amp;nbsp; 先显示dialog，再设置iframe的高宽，这样就可以了 &lt;br /&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>一个理财账本应用</title>
      <link>https://helao.net/2011/94.html</link>
      <pubDate>2011-02-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;将财务分为 3部分管理，银行卡、现金、网购。 &lt;br /&gt;分别有支出和收入，可以分别进行总账，可以一起进行总账。可以按月统计，年，季度。和按分类进行统计。目前只自己用，也可以自己指定其他账号。 &lt;br /&gt; &lt;br /&gt;数据库设计： 收支分类，财务分类，收支情况，用户表 &lt;br /&gt;这几个表就应该够用了 &lt;br /&gt; &lt;br /&gt;业务流程是这样的，用户的财务分别放在 银行卡（可以添加卡1，卡2），现金（手中有的），网购（网购中用于充值的），针对这几类来进行&amp;nbsp; 收支， 然后可以分别通过各财务分类，各收支分类，再结合时间段，就能完美的分析 收支情况了 。 &lt;br /&gt;再加上日志和预算安排就差不多了 &lt;br /&gt; &lt;br /&gt;可以扩展的东西：&amp;nbsp; 生成报表，图形化展示，加入定投，基金，股票等理财工具。 &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 还有网购中比价工具。 &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>迅雷会员账号 需要的请转</title>
      <link>https://helao.net/2011/93.html</link>
      <pubDate>2011-02-10 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;迅雷的离线下载功能那是相当给力的，可惜只有会员才能使用。 &lt;br /&gt;在这边特别提供一些会员账号给各位。 &lt;br /&gt;不保证所有账号都能使用请自测，另外都已经上保护，改不了密码喽~ &lt;br /&gt; &lt;br /&gt;账号336080377密码xinjipin等级VIP1 &lt;br /&gt;账号341420117密码xinjipin.com等级VIP1 &lt;br /&gt;账号341448234密码xinjipin.com等级VIP1 &lt;br /&gt;账号329142109密码xinjipin等级VIP1 &lt;br /&gt;账号332895737密码xinjipin等级VIP1 &lt;br /&gt;账号329142109密码xinjipin等级VIP1 &lt;br /&gt;账号331455360密码xinjipin.com等级VIP1 &lt;br /&gt;账号331582097密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号325126116密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号329216877密码xinjipin.cn等级VIP1 &lt;br /&gt;账号329523687密码xinjipin.cn等级VIP1 &lt;br /&gt;账号329555789密码xinjipin.cn等级VIP1 &lt;br /&gt;账号327479533密码xinjipin等级VIP1 &lt;br /&gt;账号326036099密码xinjipin.com等级VIP1 &lt;br /&gt;账号219335641密码yangshen.org等级VIP1 &lt;br /&gt;账号326028788密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号323910168密码123444等级VIP1 &lt;br /&gt;账号219359132密码888555等级VIP1 &lt;br /&gt;账号312655027密码xinjipin.com等级VIP1 &lt;br /&gt;账号288984228密码xinjipin.com等级VIP1 &lt;br /&gt;账号161248034密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号317714500密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号280256977密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号219358357密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号221250065密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号219335225密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号219359035密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号165004487密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号288952595密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号313002004密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号289029986密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号288964366密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号288970539密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号288974778密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号289027044密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号289028439密码www.xinjipin.com等级VIP1 &lt;br /&gt;账号288978028密码www.xinjipin.com等级VIP1&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring security 源码分析： 过滤器</title>
      <link>https://helao.net/2011/92.html</link>
      <pubDate>2011-01-27 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    首先 请求进入 FilterChainProxy 这个类&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;white-space:pre;&#34;&gt;FilterChainProxy.java&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;white-space:pre;&#34;&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public void doFilter(ServletRequest request, ServletResponse response,&#xA;            FilterChain chain) throws IOException, ServletException {&#xA;        FilterInvocation fi = new FilterInvocation(request, response, chain);&#xA;        List&amp;lt;Filter&amp;gt; filters = getFilters(fi.getRequestUrl());&#xA;        if (filters == null || filters.size() == 0) {&#xA;            if (logger.isDebugEnabled()) {&#xA;                logger.debug(fi.getRequestUrl() + filters == null ? &#34; has no matching filters&#34;&#xA;                        : &#34; has an empty filter list&#34;);&#xA;            }&#xA;            chain.doFilter(request, response);&#xA;            return;&#xA;        }&#xA;        VirtualFilterChain virtualFilterChain = new VirtualFilterChain(fi,&#xA;                filters);&#xA;        virtualFilterChain.doFilter(fi.getRequest(), fi.getResponse());&#xA;    }&#xA;&#xA;    public List&amp;lt;Filter&amp;gt; getFilters(String url) {&#xA;        if (stripQueryStringFromUrls) { // String query string - see SEC-953&#xA;            int firstQuestionMarkIndex = url.indexOf(&#34;?&#34;);&#xA;            if (firstQuestionMarkIndex != -1) {&#xA;                url = url.substring(0, firstQuestionMarkIndex);&#xA;            }&#xA;        }&#xA;        for (Map.Entry&amp;lt;Object, List&amp;lt;Filter&amp;gt;&amp;gt; entry : filterChainMap.entrySet()) {&#xA;            Object path = entry.getKey();&#xA;            if (matcher.requiresLowerCaseUrl()) {&#xA;                url = url.toLowerCase();&#xA;                if (logger.isDebugEnabled()) {&#xA;                    logger.debug(&#34;Converted URL to lowercase, from: &#39;&#34; + url&#xA;                            + &#34;&#39;; to: &#39;&#34; + url + &#34;&#39;&#34;);&#xA;                }&#xA;            }&#xA;            boolean matched = matcher.pathMatchesUrl(path, url);&#xA;            if (logger.isDebugEnabled()) {&#xA;                logger.debug(&#34;Candidate is: &#39;&#34; + url + &#34;&#39;; pattern is &#34; + path&#xA;                        + &#34;; matched=&#34; + matched);&#xA;            }&#xA;            if (matched) {&#xA;                return entry.getValue();&#xA;            }&#xA;        }&#xA;        return null;&#xA;    }&lt;/pre&gt;&#xA;&lt;br /&gt;&#xA;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    可以看出， FilterInvocation 是见 request 和 response ，chain 只是进行了封装， 然后根据 url 来判断这个请求是否需要进行拦截， 这里 getFilter（） 方法是查询的 intercepter-url 中配置的 内容。（这里具体的内容在下面）&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    接下来就是执行所有的List&lt;filter&gt; 。执行完所有的List&lt;filter&gt;之后会继续执行容器的filterChain&lt;/filter&gt;&lt;/filter&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;white-space:pre;&#34;&gt;VirtualFilterChain.java 这是 FilterChainProxy 的内部类&amp;nbsp;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;    public void doFilter(ServletRequest request, ServletResponse response)&#xA;            throws IOException, ServletException {&#xA;        if (currentPosition == additionalFilters.size()) {&#xA;            if (logger.isDebugEnabled()) {&#xA;                logger.debug(fi.getRequestUrl()&#xA;                        + &#34; reached end of additional filter chain; proceeding with original chain&#34;);&#xA;            }&#xA;            fi.getChain().doFilter(request, response);&#xA;        } else {&#xA;            currentPosition++;&#xA;            Filter nextFilter = additionalFilters.get(currentPosition - 1);&#xA;            if (logger.isDebugEnabled()) {&#xA;                logger.debug(fi.getRequestUrl() + &#34; at position &#34;&#xA;                        + currentPosition + &#34; of &#34; + additionalFilters.size()&#xA;                        + &#34; in additional filter chain; firing Filter: &#39;&#34;&#xA;                        + nextFilter + &#34;&#39;&#34;);&#xA;            }&#xA;            nextFilter.doFilter(request, response, this);&#xA;        }&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面先按顺序分析各Filter的作用 （security默认添加的filterChain，共11个 还有大概4，5个没有涉及到，以后涉及到再进行添加）&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1.org.springframework.security.web.context.SecurityContextPersistenceFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    （2.0中是这个&lt;span style=&#34;font-family:Arial, sans-serif, Helvetica, Tahoma;line-height:18px;&#34;&gt;HttpSessionContextIntegrationFilter&lt;/span&gt;）&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    从这个类所在的包路径 &amp;nbsp;context，大致知道这个类 只处理 上下文&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public void doFilter(ServletRequest req, ServletResponse res,&#xA;            FilterChain chain) throws IOException, ServletException {&#xA;        HttpServletRequest request = (HttpServletRequest) req;&#xA;        HttpServletResponse response = (HttpServletResponse) res;&#xA;        if (request.getAttribute(FILTER_APPLIED) != null) { // ensure that filter is only applied once per request&#xA;            chain.doFilter(request, response);&#xA;            return;&#xA;        }&#xA;        final boolean debug = logger.isDebugEnabled();&#xA;        request.setAttribute(FILTER_APPLIED, Boolean.TRUE);&#xA;        if (forceEagerSessionCreation) {&#xA;            HttpSession session = request.getSession();&#xA;            if (debug &amp;amp;&amp;amp; session.isNew()) {&#xA;                logger.debug(&#34;Eagerly created session: &#34; + session.getId());&#xA;            }&#xA;        }&#xA;        HttpRequestResponseHolder holder = new HttpRequestResponseHolder(&#xA;                request, response);&#xA;        SecurityContext contextBeforeChainExecution = repo.loadContext(holder);&#xA;        try {&#xA;            SecurityContextHolder.setContext(contextBeforeChainExecution);&#xA;            chain.doFilter(holder.getRequest(), holder.getResponse());&#xA;        } finally {&#xA;            SecurityContext contextAfterChainExecution = SecurityContextHolder&#xA;                    .getContext(); // Crucial removal of SecurityContextHolder contents - do this before anything else.&#xA;            SecurityContextHolder.clearContext();&#xA;            repo.saveContext(contextAfterChainExecution, holder.getRequest(),&#xA;                    holder.getResponse());&#xA;            request.removeAttribute(FILTER_APPLIED);&#xA;            if (debug) {&#xA;                logger.debug(&#34;SecurityContextHolder now cleared, as request processing completed&#34;);&#xA;            }&#xA;        }&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    从代码看： 在一次request中只执行一次，并生成 SecurityContext(从session中读取，如果session中没有就创建一个新的)，注册到 SecurityContextHolder中，当请求执行完后，清除该SecurityContext 和request中的 filter_applied 属性。在源码中类注释提到: 这个类 一次请求中只能执行一次，并且它应该在 任何认证过程之前 执行。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    ============================华丽丽的分割线===========================&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    2，&lt;span style=&#34;white-space:pre;&#34;&gt;org.springframework.security.web.authentication.logout.LogoutFilter&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public void doFilter(ServletRequest req, ServletResponse res,&#xA;            FilterChain chain) throws IOException, ServletException {&#xA;        HttpServletRequest request = (HttpServletRequest) req;&#xA;        HttpServletResponse response = (HttpServletResponse) res;&#xA;        if (requiresLogout(request, response)) {&#xA;            Authentication auth = SecurityContextHolder.getContext()&#xA;                    .getAuthentication();&#xA;            if (logger.isDebugEnabled()) {&#xA;                logger.debug(&#34;Logging out user &#39;&#34; + auth&#xA;                        + &#34;&#39; and transferring to logout destination&#34;);&#xA;            }&#xA;            for (LogoutHandler handler : handlers) {&#xA;                handler.logout(request, response, auth);&#xA;            }&#xA;            logoutSuccessHandler.onLogoutSuccess(request, response, auth);&#xA;            return;&#xA;        }&#xA;        chain.doFilter(request, response);&#xA;    }&#xA;&#xA;    /**&#xA;     *&#xA;     * Allow subclasses to modify when a logout should take place. * * @param&#xA;     * request the request * @param response the response * * @return true if&#xA;     * logout should occur, false otherwise&#xA;     */&#xA;    protected boolean requiresLogout(HttpServletRequest request,&#xA;            HttpServletResponse response) {&#xA;        String uri = request.getRequestURI();&#xA;        int pathParamIndex = uri.indexOf(&#39;;&#39;);&#xA;        if (pathParamIndex &amp;gt; 0) { // strip everything from the first semi-colon&#xA;            uri = uri.substring(0, pathParamIndex);&#xA;        }&#xA;        int queryParamIndex = uri.indexOf(&#39;?&#39;);&#xA;        if (queryParamIndex &amp;gt; 0) { // strip everything from the first question&#xA;                                    // mark&#xA;            uri = uri.substring(0, queryParamIndex);&#xA;        }&#xA;        if (&#34;&#34;.equals(request.getContextPath())) {&#xA;            return uri.endsWith(filterProcessesUrl);&#xA;        }&#xA;        return uri.endsWith(request.getContextPath() + filterProcessesUrl);&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这个处理比较简单， 只是检查是否为 登出地址，是的话就退出然后返回，不是的话就进行下一个filter。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这个判断是否为登录地址我感觉很不正常，他判断是否以 logout_url 结尾，直接判断是否相等才对啊。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    而且他根据 contextpath 是否为“” ，其实不用的，直接判断 contextPath+logout_url 即可。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter .java&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public void doFilter(ServletRequest req, ServletResponse res,&#xA;            FilterChain chain) throws IOException, ServletException {&#xA;        HttpServletRequest request = (HttpServletRequest) req;&#xA;        HttpServletResponse response = (HttpServletResponse) res;&#xA;        if (!requiresAuthentication(request, response)) {&#xA;            chain.doFilter(request, response);&#xA;            return;&#xA;        }&#xA;        if (logger.isDebugEnabled()) {&#xA;            logger.debug(&#34;Request is to process authentication&#34;);&#xA;        }&#xA;        Authentication authResult;&#xA;        try {&#xA;            authResult = attemptAuthentication(request, response);&#xA;            if (authResult == null) {// return immediately as subclass has&#xA;                                        // indicated that it hasn&#39;t completed&#xA;                                        // authentication&#xA;                return;&#xA;            }&#xA;            sessionStrategy.onAuthentication(authResult, request, response);&#xA;        } catch (AuthenticationException failed) { // Authentication failed&#xA;            unsuccessfulAuthentication(request, response, failed);&#xA;            return;&#xA;        } // Authentication success&#xA;        if (continueChainBeforeSuccessfulAuthentication) {&#xA;            chain.doFilter(request, response);&#xA;        }&#xA;        successfulAuthentication(request, response, authResult);&#xA;    }&#xA;&#xA;    public Authentication attemptAuthentication(HttpServletRequest request,&#xA;            HttpServletResponse response) throws AuthenticationException {&#xA;        if (postOnly &amp;amp;&amp;amp; !request.getMethod().equals(&#34;POST&#34;)) {&#xA;            throw new AuthenticationServiceException(&#xA;                    &#34;Authentication method not supported: &#34;&#xA;                            + request.getMethod());&#xA;        }&#xA;        String username = obtainUsername(request);&#xA;        String password = obtainPassword(request);&#xA;        if (username == null) {&#xA;            username = &#34;&#34;;&#xA;        }&#xA;        if (password == null) {&#xA;            password = &#34;&#34;;&#xA;        }&#xA;        username = username.trim();&#xA;        UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(&#xA;                username, password); // Place the last username attempted into&#xA;                                        // HttpSession for views&#xA;        HttpSession session = request.getSession(false);&#xA;        if (session != null || getAllowSessionCreation()) {&#xA;            request.getSession().setAttribute(&#xA;                    SPRING_SECURITY_LAST_USERNAME_KEY,&#xA;                    TextEscapeUtils.escapeEntities(username));&#xA;        } // Allow subclasses to set the &#34;details&#34; property&#xA;        setDetails(request, authRequest);&#xA;        return this.getAuthenticationManager().authenticate(authRequest);&#xA;    }&#xA;&#xA;    public Authentication doAuthentication(Authentication authentication)&#xA;            throws AuthenticationException {&#xA;        Class toTest = authentication.getClass();&#xA;        AuthenticationException lastException = null;&#xA;        Authentication result = null;&#xA;        for (AuthenticationProvider provider : getProviders()) {&#xA;            if (!provider.supports(toTest)) {&#xA;                continue;&#xA;            }&#xA;            logger.debug(&#34;Authentication attempt using &#34;&#xA;                    + provider.getClass().getName());&#xA;            try {&#xA;                result = provider.authenticate(authentication);&#xA;                if (result != null) {&#xA;                    copyDetails(authentication, result);&#xA;                    break;&#xA;                }&#xA;            } catch (AccountStatusException e) { // SEC-546: Avoid polling&#xA;                                                    // additional providers if&#xA;                                                    // auth failure is due to&#xA;                                                    // invalid account status&#xA;                eventPublisher.publishAuthenticationFailure(e, authentication);&#xA;                throw e;&#xA;            } catch (AuthenticationException e) {&#xA;                lastException = e;&#xA;            }&#xA;        }&#xA;        if (result == null &amp;amp;&amp;amp; parent != null) { // Allow the parent to try.&#xA;            try {&#xA;                result = parent.authenticate(authentication);&#xA;            } catch (ProviderNotFoundException e) { // ignore as we will throw&#xA;                                                    // below if no other&#xA;                                                    // exception occurred prior&#xA;                                                    // to calling parent and the&#xA;                                                    // parent&#xA;                // may throw ProviderNotFound even though a provider in the&#xA;                // child already handled the request&#xA;            } catch (AuthenticationException e) {&#xA;                lastException = e;&#xA;            }&#xA;        }&#xA;        if (result != null) {&#xA;            if (eraseCredentialsAfterAuthentication&#xA;                    &amp;amp;&amp;amp; (result instanceof CredentialsContainer)) { // Authentication&#xA;                                                                    // is&#xA;                                                                    // complete.&#xA;                                                                    // Remove&#xA;                                                                    // credentials&#xA;                                                                    // and other&#xA;                                                                    // secret&#xA;                                                                    // data from&#xA;                                                                    // authentication&#xA;                ((CredentialsContainer) result).eraseCredentials();&#xA;            }&#xA;            eventPublisher.publishAuthenticationSuccess(result);&#xA;            return result;&#xA;        } // Parent was null, or didn&#39;t authenticate (or throw an exception).&#xA;        if (lastException == null) {&#xA;            lastException = new ProviderNotFoundException(messages.getMessage(&#xA;                    &#34;ProviderManager.providerNotFound&#34;,&#xA;                    new Object[] { toTest.getName() },&#xA;                    &#34;No AuthenticationProvider found for {0}&#34;));&#xA;        }&#xA;        eventPublisher.publishAuthenticationFailure(lastException,&#xA;                authentication);&#xA;        throw lastException;&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    过程： 判断是否 为登录地址，是则进行认证，否则 继续下一个filter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    认证过程： 取得 username,password, 调用 AuthenticationManager.authenticate(){&lt;br /&gt;&#xA;然后调用 所有的AuthenticationProvider 进行认证，有一个认证通过即可通过。在AuthenticationProvider中调用 配置的 UserDetailsService 的 loadUserByUserame() 得到 UserDetails, &amp;nbsp;当第一次从数据库取得后，会将UserDetails保存到 Cache中，这给权限分配的 及时性带来了困难，不过它专门提供了一个filter来进行 热部署权限&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;}&lt;br /&gt;&#xA;还有一点，这个filter中判断 &#34;j_spring_security_check&#34;这个地址也是以 endWith来匹配的，感觉不对。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    回家了，晚上继续&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    ===========================华丽丽的分割线=================================&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    org.springframework.security.web.authentication.www.BasicAuthenticationFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    org.springframework.security.web.savedrequest.RequestCacheAwareFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    org.springframework.security.web.authentication.AnonymousAuthenticationFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    org.springframework.security.web.session.SessionManagementFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    org.springframework.security.web.access.ExceptionTranslationFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    org.springframework.security.web.access.intercept.FilterSecurityInterceptor&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring security 3.0 logout filter 代码中的一个小bug</title>
      <link>https://helao.net/2011/91.html</link>
      <pubDate>2011-01-27 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt;&#xA;    先附上&amp;nbsp;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-js linenums&#34;&gt;  public void doFilter(ServletRequest req, ServletResponse res,&#xA;            FilterChain chain) throws IOException, ServletException {&#xA;        HttpServletRequest request = (HttpServletRequest) req;&#xA;        HttpServletResponse response = (HttpServletResponse) res;&#xA;        if (requiresLogout(request, response)) {&#xA;            Authentication auth = SecurityContextHolder.getContext()&#xA;                    .getAuthentication();&#xA;            if (logger.isDebugEnabled()) {&#xA;                logger.debug(&amp;ldquo;Logging out user &amp;lsquo;&amp;rdquo; + auth&#xA;                        + &amp;ldquo;&amp;rsquo; and transferring to logout destination&amp;rdquo;);&#xA;            }&#xA;            for (LogoutHandler handler : handlers) {&#xA;                handler.logout(request, response, auth);&#xA;            }&#xA;            logoutSuccessHandler.onLogoutSuccess(request, response, auth);&#xA;            return;&#xA;        }&#xA;        chain.doFilter(request, response);&#xA;    }&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;protected boolean requiresLogout(HttpServletRequest request,&#xA;        HttpServletResponse response) {&#xA;    String uri = request.getRequestURI();&#xA;    int pathParamIndex = uri.indexOf(&#39;;&#39;);&#xA;    if (pathParamIndex &amp;amp;gt; 0) { // strip everything from the first semi-colon&#xA;        uri = uri.substring(0, pathParamIndex);&#xA;    }&#xA;    int queryParamIndex = uri.indexOf(&#39;?&#39;);&#xA;    if (queryParamIndex &amp;amp;gt; 0) { // strip everything from the first question&#xA;                                // mark&#xA;        uri = uri.substring(0, queryParamIndex);&#xA;    }&#xA;    if (&amp;quot;&amp;quot;.equals(request.getContextPath())) {&#xA;        return uri.endsWith(filterProcessesUrl);&#xA;    }&#xA;    return uri.endsWith(request.getContextPath() + filterProcessesUrl);&#xA;}&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;requiresLogout方法是判断url是否为 logout_url 的，居然用了 endsWith，我进行了测试，只要地址后缀为 j_spring_security_logout 的 都能退出系统。 &lt;br /&gt;&#xA;而且 &lt;span style=&#34;color:red;&#34;&gt;if (&amp;ldquo;&amp;rdquo;.equals(request.getContextPath())) { &lt;br /&gt;&#xA;return uri.endsWith(filterProcessesUrl); &lt;br /&gt;&#xA;}&lt;/span&gt;这段代码貌似没用， 直接用下面那个就能比较出来。 &lt;br /&gt;&#xA;大家有什么看法？ &lt;br /&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>win xp和 win7 的集成版 和 安装方法</title>
      <link>https://helao.net/2011/90.html</link>
      <pubDate>2011-01-26 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-size: 14px; color: #333333; line-height: 25px;&#34;&gt; &lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: large; padding: 0px; margin: 0px;&#34;&gt;◇Windows 7 &amp;amp; XP SP3 2in1 集成安装版 201008◇&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;写在前面：&lt;/strong&gt;&lt;br /&gt;1、目前，甚至是接下来好长一段时间，XP和WIN7将是最主流的系统，加上目前DVD-ROM已经基本取代了CD-ROM,所以将这两个系统放在一张DVD盘上，将方便了装机使用。&lt;br /&gt;2、稳定至上，所以只做集成版（WIN7的克隆版更没有意义了）。&lt;br /&gt;3、兼顾方便，集成可选的软件和优化，一张DVD盘可满足所有人的基本要求（即用本盘安装后，对于没有特别要求的用户，已经不需再装其他软件了）。&lt;br /&gt;4、此盘不追求全，而是追求实用。&lt;br /&gt;5、体积控制在4G以内，即不超过4G，方便将镜像文件放在FAT32分区上（特别是目前U盘都是这种分区格式）。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;********光盘特点********&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●源盘为微软MSDN官方Windows XP SP3免激活版和Windows 7 X86 简体中文正式版&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows 7包含三个版本的旗舰版，分别为OEM免激活增强版、OEM增强版、MSDN原版&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows XP SP3为OEM自动检测版本，如果主板BIOS不支持，将自动转向安装VOL免激活版，不需要人工干涉。包含市面上的主流OEM版，详见光盘根目录OEMBIOS文件夹。（感谢Quya）&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows XP及Windows 7都集成至目前为止的所有关键补丁程序(2010-8-18)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows 7整合微软官方20个国家（地区）的Windows 7主题（感谢无约而来的整合包）&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows XP集成常见(包括Intel ESB2/ICH7/ICH8/ICH9/ICH10等)的SATA, SCSI, RAID驱动(DPS包)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●集成功能强大迷你PE，本光盘所有系统都可在PE下进行安装（感谢我心如水）&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●集成可选的常用软件(包括WINRAR、Office2003SP3 4合1、极点五笔、QQ2010、完美解码等)和上百项优化，选您所需，轻轻一点，即可自动完成繁杂的软件安装和设置&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●正常安装方式，官方补丁整合方式，不精简任何系统文件，非克隆版或精简版，系统稳定、兼容性好&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●无插件无流氓软件无个人OEM标识,所有软件和优化都可选择安装&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;********更新列表********&lt;br /&gt;&lt;/strong&gt;●Windows 7 OEM版加入更新证书（已包含目前所有能搜集到的74个证书）&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●更新Windows XP为免激活&amp;amp;OEM版智能选择版&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●更新Windows XP及Windows 7都集成至目前为止的所有关键补丁程序(2010-8-18)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows 7整合微软官方20个国家（地区）的Windows 7主题&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●更换PE为功能更强的新版本&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●更新Adobe Flash Player ActiveX至目前最新版&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●更新XP驱动包至目前最新V11&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●QQ、WINRAR等也更新到目前最新的正式版&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●其他细节改进和调整&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;*******友情提示********&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;管理员（administrator）默认密码为空，请安装后及时修改。修改密码后请运行“control userpasswords2”（不含引号）重新设置登陆方式。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;安装特别注意事项：&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;1.在安装软件期间，请不要用鼠标和键盘做任何操作，否则软件安装有可能失败。而万一长时间锁住了，试着单击激活当前窗口，再不行的话，请右击右下角的秋字符号，选择Exit，其实这种情况是极少见的。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;2.自动安装在第一次重启时，会自动调用软件安装管理器，如果你不想装里面的所有软件，请不要直接按取消，而至少要选中“重启自动清除安装残留文件”，不然重启又会自动调用软件安装管理器。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;********本光盘系统版本的区别********&lt;br /&gt;&lt;/strong&gt;●Windows 7 ULTIMATE OEM 免激活增强版&lt;br /&gt;本版安装在绝大多数电脑中都可实现免激活，若安装后无法激活，说明你的电脑不适用于软激活。未硬改BIOS和非预装WINDOWS7的品牌机，推荐安装本版。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows 7 ULTIMATE OEM 增强版&lt;br /&gt;本版安装在预装WINDOWS7的品牌机（或已硬改了BIOS）即可实现免激活。推荐硬改了BIOS或预装WINDOWS7的用户使用。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows 7 ULTIMATE MSDN 原版&lt;br /&gt;本版为MSDN零售版，不自动激活，你可用正版（ULTIMATE零售版）的KEY激活它。一般用户不推荐安装此版。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows XP系统中的With DPS版为集成了常见SATA, SCSI, RAID驱动的版本，串口硬盘（近两年新配的电脑基本都是此类型硬盘了）请使用此版本，否则在安装过程可能因为找不到磁盘控制器驱动而蓝屏。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows XP手动安装模式需自行输入系列号（可参考本光盘说明文档），没有特殊需要，推荐使用自动安装模式。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Windows XP SP3为OEM自动检测版本，如果主板BIOS不支持，将自动转向安装VOL免激活版，不需要人工干涉。包含市面上的主流OEM版，详见光盘根目录OEMBIOS文件夹。（感谢Quya）&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;********Windows XP安装指南********&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★友情提醒★&lt;br /&gt;本光盘自动安装完成后，使用的帐户Administrator（管理员）密码为空。因此建议你装完后立即在“开始”－&amp;gt;“控制面板”-&amp;gt;“用户帐户” 修改自己的管理员密码！或者增加一个新的用户并设置密码。当你设置了密码后，下次启动就能见到登陆欢迎页面，否则每次都会自动登陆。&lt;br /&gt;如果你没有采用下面介绍的自动安装方法，而是自己选用手动安装方式，可使用这个序列号：&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;XP VOL版：M4287-8DRXC-8P77M-RXX3K-6DWD3&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★光盘启动全新安装★（推荐）&lt;br /&gt;1.请使用刻录软件Alcohol 120%或者Nero，选择镜像烧录向导-&amp;gt;选择本ISO文件-&amp;gt;选择较低的刻录速率-&amp;gt;开始刻录。&lt;br /&gt;2.在BIOS里设置为光驱启动，详细请参考主板说明书。（注意，安装前建议备份你的系统盘数据）&lt;br /&gt;3.用光盘引导开机，这时就出现了光盘菜单，根据需要选择需要安装的版本，一般推荐选择自动安装模式。&lt;br /&gt;4.等待加载启动文件后，选择需要安装的分区，然后选择格式化分区，一般选择“用 FAT 文件系统格式化磁盘分区(快)”即可。&lt;br /&gt;5.如果你选择的是自动安装，接下来系统将自动安装直至完成。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★PE安装★（本方式可实现无光驱软驱安装系统，推荐）&lt;br /&gt;1.用虚拟光驱载入ISO文件，执行光盘根目录下的PESETUP.exe，按提示安装好PE，在安装过程选择将PE外置程序安装在D盘。&amp;nbsp;&amp;nbsp;&lt;br /&gt;2.重启电脑，选择进入迷你PE应急维护系统,进入PE后，建议首先先格式化要安装XP的分区(一般为C盘)。&lt;br /&gt;3.打开PE开始菜单－磁盘光盘工具－VIRTUAL_DRIVE（虚拟光驱），(&lt;strong&gt;其实本版更方便，直接右击系统ISO文件，选择加载Imdisk虚拟磁盘即可&lt;/strong&gt;)载入ISO文件，执行光盘根目录下的相应自动安装批处理，再提示进行安装。&lt;br /&gt;4.若你在安装过程中选择将系统分区格式为FAT32格式 （请注意，FAT32格式在WINDOWS只支持到32G，若将安装系统的分区大于32G，请务必使用NTFS格式），重启后会出现“保持现有文件系统(无变化)”，按确定，接下来系统将自动安装直至完成。&lt;br /&gt;5.VIRTUAL_DRIVE虚拟光驱在强行退出时可能会提示错误，忽略即可，完全不影响系统稳定。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;6.请注意，本版自动安装脚本只为2003PE而写，使用其他PE可能会出现问题，推荐使用本光盘集成的PE。&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★从Windows界面直接安装（仅适合安装多系统）★&lt;br /&gt;1.用UltraISO或Daemon Tools等虚拟光驱加载本ISO文件。&lt;br /&gt;2.打开“我的电脑”中虚拟光驱对应的盘。&lt;br /&gt;3.根据自动运行的提示界面(或者自己运行光盘下cdrun.exe程序)进行安装。&lt;br /&gt;4.本方法适合安装双系统，被安装分区需要预留至少1.5G空间。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;★进一步加快开机速度：&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt; 右键桌面我的电脑－属性－硬件－设备管理器－IDE ATA/ATAPI 控制器，把主要和次要 IDE 通道高级设置里的设备类型里可以选择无的都设置成无(只有没接上相关硬件才有得选择无的)，这方法比其它什么优化加快开机速度效果都要好。不过以后要在其通道上添加新硬件就要把对应的打开，否则无法识别新硬件。&lt;br /&gt;另外，如果是ADSL电脑拨号单机上网的朋友，建议给本地连接指定 IP 地址，操作过程为：控制面板→网络连接→本地连接→属性→双击”tcp/ip协议” ，一般设置为 IP：192.168.1.2，子网掩码：255.255.255.0&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;********Windows 7安装指南********&lt;/strong&gt;&lt;br /&gt;●刻盘安装&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;1、确认你的电脑有DVD刻录机，安装了NERO刻录软件，然后打开开始菜单-所有程序NERO- Nero Burning ROM，再点击刻录器-刻录映像文件，再选中你下载到的系统镜像，再选择以较低速度刻录本镜像，请用较好的盘，在刻录时电脑不要做其他操作。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;2、在安装系统之前首先需要在BIOS中将光驱设置为第一启动项：进入BIOS的方法随不同BIOS而不同，一般来说有在开机自检通过后按Del键或者是F2键等。进入BIOS以后，找到“Boot”项目，然后在列表中将第一启动项设置为“CD-ROM”（CD-ROM表示光驱。）即可（如下图）。不同品牌的BIOS设置有所不同，详细内容请参考主板说明书。设置后一般按F10保存重启。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;3、设置成功后，重启即可用本光盘引导电脑安装系统，选择安装Windows 7 Ultimate X86 正式版，再按提示安装即可。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●PE安装（本方式可实现无光驱软驱安装系统，推荐）&lt;br /&gt;1.用虚拟光驱载入ISO文件，执行光盘根目录下的PESETUP.exe，按提示安装好PE，在安装过程选择将PE外置程序安装在D盘。&lt;br /&gt;2.重启电脑，选择进入迷你PE应急维护系统,进入PE后，建议首先先格式化要安装Win7的分区(若非安装双系统的话，一般为C盘)，格为NTFS格式。&lt;br /&gt;3.打开PE开始菜单－磁盘光盘工具－VIRTUAL_DRIVE（虚拟光驱），(&lt;strong&gt;其实本版更方便，直接右击系统ISO文件，选择加载Imdisk虚拟磁盘即可&lt;/strong&gt;)载入ISO文件，执行光盘根目录下的”安装WIN7.exe”，再按提示进行安装。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4.VIRTUAL_DRIVE虚拟光驱在强行退出时可能会提示错误，忽略即可，完全不影响系统稳定。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;5.非2003或更高版本的PE可能无法安装WIN7系统，推荐使用本版的PE。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●硬盘安装（推荐）&lt;br /&gt;1、虚拟光驱加载后复制或UltraISO解压ISO以下文件至硬盘一非系统分区的根目录&lt;br /&gt;注意：是复制或解压至根目录，而不是某文件夹，这一点和其他硬盘安装方法不同&lt;br /&gt;（安装Windows 7需要复制的文件夹及文件包括：boot、efi、sources、bootmgr、setup.exe）&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;2、安装 本光盘TOOLS目录下的windows7硬盘安装工具&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;3、重启选择nt6 hdd Installer后自动进入安装界面，安装操作和光盘一样，装在其它分区上成双系统、格式化C盘结果为单系统就随你所需了&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●安装双系统&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;1、格式化你要安装Windows 7的分区，格为NTFS格式&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;2、用虚拟光驱载入本镜像&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;3、选择光盘菜单中的安装Windows 7或直接执行光盘下的setup.exe进行安装&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★若虚拟光驱加载镜像有问题，可先将ISO里的所有文件提取到本地硬盘再进行安装。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;********Windows XP常见问题********&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★为什么系统启动后总是自动调用软件安装管理器？&lt;br /&gt;答：即使你不想安装里面的软件，至少应执行软件安装器里的最后一项：重启自动清除安装残留文件。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;在日后，你可以随时执行光盘根目录的“安装软件优化(XP)”程序调用本软件集窗口。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★OEM版有什么优势?&lt;br /&gt;答：OEM版的优势在于可防止微软禁用大客户KEY导致出现盗版提示。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★为什么我解压后有10多G？我该怎么刻盘？&lt;br /&gt;答：你下载的是ISO文件，请不要解压，直接刻录。以Nero为例，启动Nero Burning ROM—刻录器—刻录映像文件，找到你下载的ISO文件，选择16X或24X或更低的速度刻录即可。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★为什么我在安装的时候提示有的文件不能复制？&lt;br /&gt;答：镜像发布前已经通过严格测试，这应该是你刻盘的问题，请选用优质的刻录盘，用适当的速度刻录。当然也不排除你的刻录软件或光驱读盘能力的问题。&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★为什么装完软件和优化后，光驱不能用了？放光盘进去也没有反应？&lt;br /&gt;答：其实并不是不能用，只是没有自动运行，你可双击进入光驱。这是因为你在优化中选择了“禁止U盘光盘等所有磁盘自动运行”，此项可加强系统对病毒的防御能力。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★为什么安装过程中会出现蓝屏或死机，或者在某些步骤（如检测硬件）时卡住？&lt;br /&gt;答：这些情况很多是由于硬件问题造成的，如内存中某些区块损坏，或者CPU过热，或者硬盘存在坏道，或者光驱老化，读取出来的数据有问题等等。请先替换相关硬件确认是否是硬件问题造成的。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★我在光盘中用XX软件扫描发现了病毒。&lt;br /&gt;答：论坛官方发布的ISO是绝对没有任何木马和病毒的，请确认你下载的文件的MD5和官方发布的完全一样，防止下载到被人修改的光盘系统；其次，为了提高系统运行效率，光盘中有个别文件经过了我们的修改，而这些修改过的文件有些杀毒或者杀木马软件会误报，因此只要你确认MD5个官方发布的一致，那么这些软件报告的病毒和木马就都是误报的。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★为什么我访问别人的共享文件夹正常，而别人访问我的却不行？&lt;br /&gt;答：如果你确认自己的Server服务是正常启动的话，可能你需要在控制面板允许guest用户（XP默认禁用），这样方可无需认证访问你的共享文件夹。但是我们不推荐这样做，最好还是设置单独的用于对外共享文件夹用户，并为它设置密码。 另外，我们在TOOLS目录下还准备了解决局域网共享的批处理，应该能帮你轻松完成局域网设置。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;★用金山的还有瑞星以及360卫士扫描系统，为什么报告有好几个系统漏洞还有重要的补丁没有安装？&lt;br /&gt;答：这是因为此类软件的漏洞扫描是简单地基于注册表的，它在注册表中找不到补丁更新的记录，就会认为这个漏洞没有补上。事实上，存在漏洞的并不是注册表，而是系统文件。本版已经集成了至发布时为止的所有必需补丁，但部分补丁不在注册表上留下更新记录。真正需要哪些更新，以微软的 Update 为准。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;********Windows 7常见问题********&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●本系统有额外集成驱动吗？怎么解决驱动问题？&lt;br /&gt;考虑光盘空间和兼容性问题，本光盘并未额外集成驱动，建议你安装前准备好for Windows 7的驱动。&lt;br /&gt;若Windows 7系统本身并未集成你电脑的驱动，那么建议你安装硬件厂商官方的驱动。&lt;br /&gt;另外，用好系统的更新功能，里面也会提供一些驱动的下载（如显卡驱动）。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Aero效果（也即透明玻璃）如何开启？&lt;br /&gt;首先，请确保你的硬件能支持AERO效果，若系统不自带您电脑的显卡驱动，您需要安装好FOR Windows 7的驱动。&lt;br /&gt;安装好显卡驱动后，必须让系统重启以完成驱动安装，若重启还不出现透明效果，可按以下方法开启：右击桌面-个性化，选择你喜欢的Aero主题。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●安装完成后，调用软件安装管理器，我应该怎么做？&lt;br /&gt;本系统安装后，默认并未安装任何软件和优化，需要提高系统性能和安装常用软件，可在本软件安装管理器中实现（强烈推荐）。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;在系统安装完成后进入桌面时，会自动调用软件安装管理器。你可按默认配置，直接点击安装；可手动选择你需要安装的软件；也可以在本软件界面上右击，于弹出的菜单里选择你喜欢的软件“配置方案”；选定软件后，请点击安装。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;若你不想安装本软件集的所有软件和优化，按取消后，请点击开始菜单-所有程序-启动，将里面的qwhIns.exe删除即可。&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;当然，日后你也可以随时执行光盘根目录的“安装软件优化(WIN7)”程序调用本软件集窗口。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●使用过程中蓝屏了，怎么办？&lt;br /&gt;这个一般是驱动问题，请尝试到官方网站下载最新驱动进行更新，并用官方的驱动安装方式。&lt;br /&gt;当然，也不排除你安装的软件存在BUG或兼容性问题，这种情况只好更新软件或不安装该软件。&lt;br /&gt;本系统集成的软件和优化都经过测试，不存在这些问题。&lt;br /&gt;另外，请尽量不要使用其他优化软件和操作来优化本系统。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●我为装好的WINDOWS7的帐户Administrator设置了密码，为什么每次登录都会提示用户名或密码不正确，按确定后才可输入密码登录？&lt;br /&gt;因为本光盘administrator默认密码为空，并设置了自动登录。如果你设置了密码，可作如下操作以解决你的问题：&lt;br /&gt;点击开始-运行，输入“control userpasswords2”（不含引号），按回车后，会弹出一个窗口，若你要每次登录WINDOWS7系统时都提示输入密码才可登录，只要选中“要使用本机，用户必须输入用户名和密码”项的勾选，再按确定即可；&lt;br /&gt;若你还是想要系统自动登录，可取消“要使用本机，用户必须输入用户名和密码”项的勾选，再点击应用，然后再在弹出的窗口中输入你要自动登录的帐户和新设置的密码即可。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●&lt;/span&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;win7对应的OEM是哪一个厂商的？&lt;br /&gt;几乎包含了所有厂商了。本光盘的Windows 7 ULTIMATE OEM 增强版已经集成了74种的OEM证书，相当于集成了几乎所有的OEM版，只要你的电脑是预装WIN7的品牌机，或是硬刷了SLIC2.1的兼容机，都可以免激活。顺便说一句，若你的电脑既不是预装WIN7的品牌机，又没有硬刷，或是不懂得什么是硬刷，请使用“Windows 7 ULTIMATE OEM 免激活增强版”，该版会自动软激活，当然，可能有极少数的电脑还是无法激活，那么说明这部电脑基本与软激活无缘了，这种情况可以搜索一下网上的零售版KEY，用本光盘的MSDN原版激活（建议用电话激活方式并记下ID，以后只要硬件没有变，这台电脑都可以用这组ID激活）。&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;◇◇◇◇◇◇◇◇◇◇◇◇光盘TOOLS目录◇◇◇◇◇◇◇◇◇◇◇◇◇◇&lt;/strong&gt;&lt;br /&gt;AutoRun类病毒中招之后的清理、免疫程序&lt;br /&gt;EVEREST(硬件及系统环境检测)&lt;br /&gt;VIRTUAL_DRIVE(虚拟光驱)&lt;br /&gt;Win7-KEY类型检测checkCHKPIDS&lt;br /&gt;Windows7硬盘安装工具&lt;br /&gt;Windows启动菜单自动修复工具&lt;br /&gt;XP_SP3_tcpPatch破解线程限制&lt;br /&gt;德国人的优化&lt;br /&gt;更换OEM-KEY&lt;br /&gt;解决局域网共享&lt;br /&gt;系统引导设置与管理工具VistaBootPRO&lt;br /&gt;Autoruns（启动项查看）.zip&lt;br /&gt;cpuz(CPU检测).exe&lt;br /&gt;DriverBack驱动备份.exe&lt;br /&gt;HD_Tune_Pro(硬盘测试).zip&lt;br /&gt;oemdiy.zip&lt;br /&gt;TweakUI 汉化修正版.zip&lt;br /&gt;Windows_XP_VOL版本序列号替换器.vbs&lt;br /&gt;winXP瘦身专家.zip&lt;br /&gt;任务栏修复工具.zip&lt;br /&gt;显示器测试工具.exe&lt;br /&gt;自动关闭空闲的IDE通道.bat&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;◇◇◇◇◇◇◇◇◇◇◇◇软件和优化列表◇◇◇◇◇◇◇◇◇◇◇◇◇◇&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Window XP集成的软件及优化列表:&lt;br /&gt;系统软件&lt;br /&gt;常用运行库 – Microsoft Runtime Libraries Package 3.0&lt;br /&gt;Windows XP 更新程序 (KB955704)[让XP支持exFAT文件系统格式]&lt;br /&gt;Windows XP 更新程序 (KB971029)[让XP禁用U盘自动运行]&lt;br /&gt;DirectX 9.0c 精简安装包 2010.06版_32Bit&lt;br /&gt;Adobe Flash Player ActiveX&lt;br /&gt;Internet Explorer v8.0 中文版&lt;br /&gt;Windows Media Player 11 中文版(安装时间较长，请稍候。。)&lt;br /&gt;WinRAR v3.93 Final 秋无痕论坛美化版 by 勇者无敌&lt;br /&gt;秋无痕精选主题包 FOR XP/2003&lt;br /&gt;网络软件&lt;br /&gt;傲游(Maxthon)2.5.14 秋无痕增强版&lt;br /&gt;迅雷(Thunder) v5.9.25 增强版(去广告支持专用链)&lt;br /&gt;腾讯 QQ2010 SP1 [去广告+本地会员+插件管理器] by drag0n&lt;br /&gt;FlashFXP v3.6.0 (Build 1240) 绿色注册版&lt;br /&gt;IE7Pro 2.5.1 去插件绿色版&lt;br /&gt;图像影音&lt;br /&gt;Adobe Photoshop CS4 11.0.1 Extended 官方简体中文精简版&lt;br /&gt;ACDSEE5.0 简体中文注册版 | 带右键看图 By 信念&lt;br /&gt;完美解码2009(全能视频播放器)&lt;br /&gt;千千静听TTPlayer v5.6 增强版 By ls&lt;br /&gt;PPS影音 V2.7 去广告版 By ls&lt;br /&gt;酷我音乐盒2010去插件版&lt;br /&gt;办公及安全软件&lt;br /&gt;Office2003 SP3 四合一 精简增强版&amp;nbsp;&amp;nbsp; by Allreal&lt;br /&gt;极点五笔 v7.12 正式版&lt;br /&gt;谷歌拼音输入法 2.3.13.82 正式版&lt;br /&gt;Foxit Reader 3.3.0 Build 0512 简体中文注册版 By ls&lt;br /&gt;金山毒霸2011正式版(免费一年纯净版)&lt;br /&gt;金山卫士1.2.2正式版&lt;br /&gt;其他软件&lt;br /&gt;Unlocker(最好的顽固软件删除工具) v1.9.0 x86 绿色版&lt;br /&gt;小哨兵一键恢复1.2.1.26去插件版&lt;br /&gt;Nero 8 精简版&lt;br /&gt;UltraISO v9.3.6 多国语言注册版&lt;br /&gt;常用驱动包&lt;br /&gt;自由天空综合驱动包 SkyDriverXP_V11标准版&lt;br /&gt;优化设置(ForXP)&lt;br /&gt;（请自行打开软件安装管理器查看）&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;●Window 7集成的软件及优化列表：&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;系统软件&lt;br /&gt;常用运行库 – Microsoft Runtime Libraries Package 3.0&lt;br /&gt;微软Java虚拟机(Microsoft Java Virtual Machine) 简体中文版&lt;br /&gt;DirectX 9.0c 精简安装包 2010.06版_32Bit&lt;br /&gt;Adobe Flash Player ActiveX&lt;br /&gt;WinRAR v3.93 Final 秋无痕论坛美化版 by 勇者无敌&lt;br /&gt;精选侧边栏[农历、CPU内存显示、多用电子钟、搜索引擎]&lt;br /&gt;网络软件&lt;br /&gt;傲游(Maxthon)2.5.14 秋无痕增强版&lt;br /&gt;迅雷(Thunder) v5.9.25 增强版(去广告支持专用链)&lt;br /&gt;腾讯 QQ2010 SP1 [去广告+本地会员+插件管理器] by drag0n&lt;br /&gt;FlashFXP v3.6.0 (Build 1240) 绿色注册版&lt;br /&gt;IE7Pro 2.5.1 去插件绿色版&lt;br /&gt;图像影音&lt;br /&gt;Adobe Photoshop CS4 11.0.1 Extended 官方简体中文精简版&lt;br /&gt;ACDSEE5.0 简体中文注册版 | 带右键看图 By 信念&lt;br /&gt;完美解码2009(全能视频播放器)&lt;br /&gt;千千静听TTPlayer v5.6 增强版 By ls&lt;br /&gt;PPS影音 V2.7 去广告版 By ls&lt;br /&gt;酷我音乐盒2010去插件版&lt;br /&gt;办公及安全软件&lt;br /&gt;Office2003 SP3 四合一 精简增强版&amp;nbsp;&amp;nbsp; by Allreal&lt;br /&gt;极点五笔 v7.12 正式版&lt;br /&gt;谷歌拼音输入法 2.3.13.82 正式版&lt;br /&gt;Foxit Reader 3.3.0 Build 0512 简体中文注册版 By ls&lt;br /&gt;金山毒霸2011正式版(免费一年纯净版)&lt;br /&gt;金山卫士1.2.2正式版&lt;br /&gt;其他软件&lt;br /&gt;Unlocker(最好的顽固软件删除工具) v1.9.0 x86 绿色版&lt;br /&gt;小哨兵一键恢复1.2.1.26去插件版&lt;br /&gt;Nero 8 精简版&lt;br /&gt;UltraISO v9.3.6 多国语言注册版&lt;br /&gt;优化设置&lt;br /&gt;（请自行打开软件安装管理器查看）&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;声明：&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;br /&gt;&lt;strong&gt;本光盘只为自用，请勿传播，更勿用于一切商业或非法用途！我们不对使用本光盘所造成的一切直接、间接损失和问题负任何责任，也没有提供任何技术支持的义务．请在下载测试24小时后删除本文件，同时建议你购买正版软件用于长期使用。&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong&gt;下载信息：&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: small; padding: 0px; margin: 0px;&#34;&gt;文件: WIN7_XP_2IN1_V1008.iso&lt;br /&gt;大小: 4290422784 字节(3.99G)&lt;br /&gt;修改时间: 2010年8月18日, 9:02:43&lt;br /&gt;MD5:&amp;nbsp;&lt;strong&gt;6945F83AB42FC087F82DC12434A27C00&lt;br /&gt;&lt;/strong&gt;SHA1: FF9AFA4EDA302A4072E31419F558BAC1E5863017&lt;br /&gt;CRC32: 3D050A2A&lt;/span&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; text-indent: 30px; padding: 0px;&#34;&gt;&lt;a title=&#34; 快吧下载页面&#34; href=&#34;http://www.quick8.cn/soft/00494.htm&#34; target=&#34;_blank&#34;&gt;http://www.quick8.cn/soft/00494.htm&lt;/a&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>pe下安装win7</title>
      <link>https://helao.net/2011/89.html</link>
      <pubDate>2011-01-26 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span&gt;新增一个支持AHCI磁盘的PE，这样就不需要在BIOS中切换来切换去了：&amp;nbsp;&lt;br /&gt;&lt;a style=&#34;color: #006699; text-decoration: underline;&#34; href=&#34;http://www.quick8.cn/down/01427.htm&#34; target=&#34;_blank&#34;&gt;秋无痕w*i*n*7下载地址&lt;/a&gt;&amp;nbsp;&lt;br /&gt;&lt;a style=&#34;color: white; text-decoration: underline; background-color: #006699;&#34; href=&#34;http://www.quick8.cn/soft/00494.htm&#34; target=&#34;_blank&#34;&gt;秋无痕Windows 7 &amp;amp; XP SP3 2in1 集成安装版201008&lt;/a&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;a style=&#34;color: #006699; text-decoration: underline;&#34; href=&#34;http://hi.baidu.com/jn311/blog/item/f3cb59031d2c937c3812bb6d.html&#34; target=&#34;_blank&#34;&gt;全面支持Win7，通用PE工具箱V1.9.2官方标准版发布[2010元旦新作]&lt;/a&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;a style=&#34;color: #006699; text-decoration: underline;&#34; href=&#34;http://hi.baidu.com/nnffnn/blog/item/38bbf011fda645cea7ef3fdc.html&#34; target=&#34;_blank&#34;&gt;通用PE工具箱安装图解（虽然是1.8.1，一样可以参考）&lt;/a&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;1.（如果PE认不出磁盘，先进BIOS把AHCI模式设成兼容模式）把WINDOWS7的ISO镜像解压到D:\windows7\。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;2.进入PE，格式化C盘为NTFS，如果是分区的话，千万别忘了把C盘设置为“活动”的。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;3.从D:\windows7\提取boot目录和bootmgr文件到C盘根目录。再从D:\windows7\sources提取boot.wim和&amp;nbsp; install.wim这两个文件到C:\sources。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;4.在PE中运行cmd，输入下面一行后回车&amp;nbsp;&lt;br /&gt;&amp;nbsp; c:\boot\bootsect.exe /nt60 c:&amp;nbsp;&lt;br /&gt;&amp;nbsp; 然后重起电脑。&lt;strong style=&#34;font-weight: bold;&#34;&gt;&lt;span style=&#34;color: red;&#34;&gt;如果之前是磁盘兼容模式，切记这一步重启的时候，先进BIOS，把兼容模式改成AHCI模式（如果你需要AHCI打开的话）。&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;5.出现安装界面，不要点现在安装，点左下角“修复计算机repairing computer”进入系统恢复选项，选择第一个“使用可以帮助解决Windows启动问题的恢复工具。。。”，然后选最后一项“命令提示符command prompt”，进入DOS窗口。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;6.进入DOS后，输入D:\windows7\sources\setup.exe，回车，进入系统的正常安装。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;7.安装类型选择“自定义（高级）”，然后单击选中C盘，再点击“驱动器选项（高级）”，选择“格式化”，清除一开始复制到C盘的无用垃圾，然后点击“下一步”。&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;span&gt;1. 关闭Volume Shadow Copy服务，在Vista里很多文件、文件夹看属性里都有一个 早期版本 选项，我想这个功能对绝大多数人都没有用吧？Win+R打开services.msc ，找到Volume Shadow Copy，设置为禁用。（大家自己看着办，这条我不是很清楚）&amp;nbsp;&lt;br /&gt;&lt;br /&gt;2. 关闭所有分区的系统还原：计算机&amp;gt;右键属性&amp;gt;系统保护&amp;gt;配置:关闭系统还原并删除还原点&amp;nbsp;&lt;br /&gt;&lt;br /&gt;3. 关闭所有分区的 磁盘清理 计划任务，右键单击C盘选“属性”-“工具”-“立即进行磁盘碎片整理。。。”-“配置计划。。。”，把“计划磁盘整理”的钩去掉。（这个一定要关掉）&amp;nbsp;&lt;br /&gt;&lt;br /&gt;4. 关闭包含大块文件的文件压缩和索引，在盘符/文件夹上点右键，取消 索引文件以加快搜索速度，在文件夹上点右键，属性，高级，关闭“压缩文件以节省空间”“索引文件以加快搜索速度”。（这个我没找到）&amp;nbsp;&lt;br /&gt;&lt;br /&gt;5. 关闭Windows Search服务。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;6.关闭Superfetch服务。（这个可以考虑关掉，如果是电脑盲而且内存大于等于2G不用关闭）&amp;nbsp;&lt;br /&gt;&lt;br /&gt;7.关闭Windows Defender服务。（这个建议关掉）&amp;nbsp;&lt;br /&gt;&lt;br /&gt;8.升级系统补丁的时候要注意，如果遇到和激活相关的补丁一概不能装，或者老老实实定期用360升级补丁。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;win7设置：&amp;nbsp;&lt;br /&gt;1.自动登录：输入“control userpasswords2”。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;2.进入组策略：输入“gpedit.msc”。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;3.关闭自动播放：“组策略”-“计算机配置”-“管理模板”-“Windows 组件”-“自动播放策略”。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;装XP麻烦之处：&amp;nbsp;&lt;br /&gt;1.是否禁用虚拟内存是个大问题，win7下根本无须考虑这个问题，XP下如果不禁用虚拟内存，明明物理内存足够，还在那里拼命读写虚拟内存。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;2.XP好像不装驱动，无法使用AMD凉又静或者Intel的自动降压降频功能。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;3.XP不支持自定义自动降压降频的幅度，win7下可以灵活设置。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;4.XP的安装速度和启动速度都不如win7快。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;5.win7默认就自带N多驱动，xp下装新买的笔记本，驱动要装很久。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;6.XP好像不自带微软HD audio驱动，导致很多人装不上声卡驱动还不知道为什么，win7自带此驱动。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;7.win7下连接投影仪太方便了，win+p搞定一切了。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;8.XP即使是64位的，支持4核CPU和4G大内存的效率是有问题的，往往还发生4G内存性能还不如2G内存的。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;9.就我自己的经验，XP，尤其是最近一年的XP（主要指打了某些微软补丁之后的XP），关机时经常出现error，点一下才能关闭，win7下没有此问题。同等硬件下，win7死机的概率也要比XP低。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;10.AHCI也算是一个，win7自带AHCI驱动，XP下装AHCI驱动是很折腾的一件事。但其实我自己帮别人装win7，仍然是不开AHCI的，因为关了AHCI，PE下兼容性好，hdtune还能看到硬盘状态。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;暂时想到这些，我记得XP还有很多毛病，想起来了再补上。&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring security 源码解读 1</title>
      <link>https://helao.net/2011/88.html</link>
      <pubDate>2011-01-25 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    这一阵子看到了security，很感兴趣。于是研究一下，我在javaeye上查了好多相关的文档，收益匪浅，从入门级的配置问题，到源码级的解读都非常不错，但是还要自己在亲自走一遍流程才踏实。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    我看的security 3.0的源码，原因是 security 2.0 的源码没办法通过maven获取到 。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    首先 security的控制内容有： url，method，session三种，我项目中用到的只有 url。下面就按url的流程来走。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    思路： &amp;nbsp;使用filter，过滤所有的url 如 /* 这样，并且这个filter应在最前面，道理就不到说了吧。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    1》 security使用的 filter是 org.springframework.web.filter.DelegatingFilterProxy类，在spring-web jar中。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;    protected void initFilterBean() throws ServletException { &#xA;        if (this.targetBeanName == null) {&#xA;            this.targetBeanName = getFilterName();&#xA;        }&#xA;        synchronized (this.delegateMonitor) {&#xA;            WebApplicationContext wac = findWebApplicationContext();&#xA;            if (wac != null) {&#xA;                this.delegate = initDelegate(wac);&#xA;            }&#xA;        }&#xA;    }&#xA;&#xA;    public void doFilter(ServletRequest request, ServletResponse response,&#xA;            FilterChain filterChain) throws ServletException, IOException { &#xA;        Filter delegateToUse = null;&#xA;        synchronized (this.delegateMonitor) {&#xA;            if (this.delegate == null) {&#xA;                WebApplicationContext wac = findWebApplicationContext();&#xA;                if (wac == null) {&#xA;                    throw new IllegalStateException(&#34;No WebApplicationContext found:no ContextLoaderListener registered?&#34;);&#xA;                }&#xA;                this.delegate = initDelegate(wac); // 该方法中的 代码&#xA;                Filter delegate = wac.getBean(getTargetBeanName(), Filter.class);&#xA;            }&#xA;            delegateToUse = this.delegate;&#xA;        } // Let the delegate perform the actual doFilter operation.&#xA;        invokeDelegate(delegateToUse, request, response, filterChain);&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这里需要注意一点 filter-name 必须为&amp;nbsp;springSecurityFilterChain，从DelegatingFilterProxy这个名字中可以猜到这只是个代理类（确实如此），当这个类执行时会去取得真正的filter类，这个类在spring容器中默认生成id为&amp;nbsp;springSecurityFilterChain，在3.0中 该filter 添加了一个 targetName 字段，可以从上面红色代码部分看到它的作用，因此可以通过指定targetName字段，来防止和项目中的其他filter冲突。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    接下来 该真正的 filterChain出场了，这个类是security事务相关的，应该在security包中。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    于是 在 spring-security-web jar中发现了这个类:org.springframeword.security.web.FilterChainProxy ,进去看看可以看出这个就是我要找的类。（关于这一点我是从命名上看出来的，bean的id要和类名保持一致）。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下班了 ，回去再继续添加。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    ==========================华丽丽的分界线====================================&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    吃完饭 ，继续。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    FilterChainProxy 代码：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public void doFilter(ServletRequest request, ServletResponse response,&#xA;            FilterChain chain) throws IOException, ServletException {&#xA;&#xA;        FilterInvocation fi = new FilterInvocation(request, response, chain);&#xA;        List filters = getFilters(fi.getRequestUrl());&#xA;        // 根据url 得到需要经过的filters&#xA;        // 这里不是很明白，有知道的同学可以留言。&#xA;        if (filters == null || filters.size() == 0) { // 如果没有合适的 ，就继续进行filter&#xA;            if (logger.isDebugEnabled()) {&#xA;                logger.debug(fi.getRequestUrl() + filters == null ? &#34; has no matching filters&#34;: &#34; has an empty filter list&#34;);&#xA;            }&#xA;            chain.doFilter(request, response);&#xA;            return;&#xA;        }&#xA;        // 如果有filter 就进行虚拟的filter链。这里并没有跳出容器的 filter链，&#xA;        // 当这个虚拟的filter链完成之后，就继续进行 容器的filter&#xA;        VirtualFilterChain virtualFilterChain = new VirtualFilterChain(fi,filters);&#xA;        virtualFilterChain.doFilter(fi.getRequest(), fi.getResponse());&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    接下来就该进行 filterChain了，在security中有好多的filter：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    CHANNEL_FILTER ChannelProcessingFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    CONCURRENT_SESSION_FILTER ConcurrentSessionFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    SESSION_CONTEXT_INTEGRATION_FILTER HttpSessionContextIntegrationFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    LOGOUT_FILTER LogoutFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    X509_FILTER X509PreAuthenticatedProcessigFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    PRE_AUTH_FILTER Subclass of AstractPreAuthenticatedProcessingFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    CAS_PROCESSING_FILTER CasProcessingFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    AUTHENTICATION_PROCESSING_FILTER AuthenticationProcessingFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    BASIC_PROCESSING_FILTER BasicProcessingFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    SERVLET_API_SUPPORT_FILTER classname&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    REMEMBER_ME_FILTER RememberMeProcessingFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    ANONYMOUS_FILTER AnonymousProcessingFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    EXCEPTION_TRANSLATION_FILTER ExceptionTranslationFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    NTLM_FILTER NtlmProcessingFilter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    FILTER_SECURITY_INTERCEPTOR FilterSecurityInterceptor&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    SWITCH_USER_FILTER SwitchUserProcessingFilter 。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面我只分析了 AuthenticationProcessingFilter,这是登录认证处理filter&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public UsernamePasswordAuthenticationFilter() {&#xA;        super(&#34;/j_spring_security_check&#34;);// 这就是 登录验证的 url。&#xA;    }&#xA;    public Authentication attemptAuthentication(HttpServletRequest request,&#xA;            HttpServletResponse response) throws AuthenticationException {&#xA;        if (postOnly &amp;amp;&amp;amp; !request.getMethod().equals(&#34;POST&#34;)) {&#xA;            throw new AuthenticationServiceException(&#xA;                    &#34;Authentication method not supported: &#34;&#xA;                            + request.getMethod());&#xA;        } // 只允许以post方法 进行认证，能防止一些简单的破解&#xA;        String username = obtainUsername(request);&#xA;        String password = obtainPassword(request);&#xA;&#xA;        if (username == null) {&#xA;            username = &#34;&#34;;&#xA;        }&#xA;        if (password == null) {&#xA;            password = &#34;&#34;;&#xA;        }&#xA;        username = username.trim();&#xA;        // 只是将 username和password封装进去&#xA;        UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(username, password);&#xA;&#xA;        // Place the last username attempted into HttpSession for views&#xA;        HttpSession session = request.getSession(false);&#xA;        if (session != null || getAllowSessionCreation()) {&#xA;            request.getSession().setAttribute(&#xA;                    SPRING_SECURITY_LAST_USERNAME_KEY,&#xA;                    TextEscapeUtils.escapeEntities(username));&#xA;        }&#xA;        setDetails(request, authRequest);&#xA;        // 取得AuthenticationManager 进行认证&#xA;        return this.getAuthenticationManager().authenticate(authRequest);&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    从request中取得 username，password，封装进 UsernamePasswordAuthenticationToken 中，&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    然后将username中写到 session中，这里对username去掉了首尾的空格&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    然后调用 AuthenticationManager的 authenticate方法进行具体的认证操作。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public Authentication doAuthentication(Authentication authentication)&#xA;            throws AuthenticationException {&#xA;        Class toTest = authentication.getClass();&#xA;        AuthenticationException lastException = null;&#xA;        Authentication result = null;&#xA;        for (AuthenticationProvider provider : getProviders()) {&#xA;            if (!provider.supports(toTest)) {&#xA;                continue;&#xA;            }&#xA;            logger.debug(&#34;Authentication attempt using &#34;+ provider.getClass().getName());&#xA;            try {&#xA;                result = provider.authenticate(authentication);&#xA;                if (result != null) {&#xA;                    copyDetails(authentication, result);&#xA;                    break;&#xA;                }&#xA;            } catch (AccountStatusException e) {&#xA;                // SEC-546: Avoid polling additional providers if auth failure&#xA;                // is due to invalid account status&#xA;                eventPublisher.publishAuthenticationFailure(e, authentication);&#xA;                throw e;&#xA;            } catch (AuthenticationException e) {&#xA;                lastException = e;&#xA;            }&#xA;        }&#xA;        if (result == null &amp;amp;&amp;amp; parent != null) {&#xA;            // Allow the parent to try.&#xA;            try {&#xA;                result = parent.authenticate(authentication);&#xA;            } catch (ProviderNotFoundException e) {&#xA;                // ignore as we will throw below if no other exception occurred&#xA;                // prior to calling parent and the parent&#xA;                // may throw ProviderNotFound even though a provider in the&#xA;                // child already handled the request&#xA;            } catch (AuthenticationException e) {&#xA;                lastException = e;&#xA;            }&#xA;        }&#xA;        if (result != null) {&#xA;            if (eraseCredentialsAfterAuthentication&#xA;                    &amp;amp;&amp;amp; (result instanceof CredentialsContainer)) {&#xA;                // Authentication is complete. Remove credentials and other&#xA;                // secret data from authentication&#xA;                ((CredentialsContainer) result).eraseCredentials();&#xA;            }&#xA;            eventPublisher.publishAuthenticationSuccess(result);&#xA;            return result;&#xA;        }&#xA;        // Parent was null, or didn&#39;t authenticate (or throw an exception).&#xA;        if (lastException == null) {&#xA;            lastException = new ProviderNotFoundException(messages.getMessage(&#34;ProviderManager.providerNotFound&#34;,new Object[] { toTest.getName() },&#xA;                    &#34;No AuthenticationProvider found for {0}&#34;));&#xA;        }&#xA;        eventPublisher.publishAuthenticationFailure(lastException,authentication);&#xA;        throw lastException;&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这里对 用户进行认证，成功就发布成功事件，并返回。 失败就发布失败事件，并返回exception&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这里具体的认证过程还是不大熟悉，等再详细的看明白了 再细说。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    看明白了，authenticationManager可以有多个 provider如 默认的daoAuthenticationProvider 和 &amp;nbsp;JaasAuth ，RememmberMeAuth 等&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面说 daoAuthenticationProvider 中可以有 &amp;nbsp;UserDetailsService ，&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;        protected final UserDetails retrieveUser(String username,&#xA;            UsernamePasswordAuthenticationToken authentication)&#xA;            throws AuthenticationException {&#xA;        UserDetails loadedUser;&#xA;        try {&#xA;            loadedUser = this.getUserDetailsService().loadUserByUsername(username);&#xA;        } catch (DataAccessException repositoryProblem) {&#xA;            throw new AuthenticationServiceException(repositoryProblem.getMessage(), repositoryProblem);&#xA;        }&#xA;        if (loadedUser == null) {&#xA;            throw new AuthenticationServiceException(&#xA;                    &#34;UserDetailsService returned null, which is an interface contract violation&#34;);&#xA;        }&#xA;        return loadedUser;&#xA;    }&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    又通过 userDetailsService.loadUserByUsername() &amp;nbsp;，当不存在时 ，返回null&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    来得到 UserDetails 这样就能把 整个认证过程理顺了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    总结一下， &amp;nbsp;security 的认证过程能理顺了，对其衔接的过渡代码 还有些拿不准，还有 取得filters的 规则还不是很清楚，还要继续看下去。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    已经能理顺了， 在BeanId 类中发现了那些默认的字符串，这样 在spring 解析xml时，遇到 security的标签后，会将这个节点交给 security下的类来执行SecurityNamespaceHandler。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    这样就能保证security初始化的正常。包括生成默认的 FilterChainProxy 和添加一些依赖。生成 AuthenticationManager及其依赖的 ProviderManager 等。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下次，继续看 url资源控制部分&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>自己的年终总结</title>
      <link>https://helao.net/2011/87.html</link>
      <pubDate>2011-01-23 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;这周末 什么都不想做，书也看不下去，可总觉得自己很精神。这种状态真的很不好，应该是平时生活中没有计划安排的原因，&lt;/p&gt; &lt;p&gt;要安排好自己的生活，这样自己才不会觉得自己没事做，也不会让自己觉得没有目标，没有动力啊。 看来那本 与时间做朋友还要继续看看，对于我来说还是相当不错的。&lt;/p&gt; &lt;p&gt;要有目标，要有计划，计划要合理，学习和娱乐，最重要要多锻炼身体，身体好思路才清晰，学习才有效率，要经常集中注意力来做一件事，不要三心二意， 这需要合理安排 达到最好的效率，实在不想学习了，可以做做运动，跑步，散步，下蹲，俯卧撑，仰卧起坐等，学习要专心，要集中注意力，感觉这个跟多运动是相辅相成的，运动休息一会之后，自然就能集中注意力了，另外将学习时间 安排在 2个小时以内，2个小时之后一定要去转一转， 然后回来再学习，还有留出固定的时间给家人朋友联系。 隔十天半月 不妨出去爬爬山，找朋友坐坐，一起吃个饭，聊聊天等。这样能丰富自己的内心，开阔自己的眼界，同时还能释放自己心中的压力和郁闷。当项目 完成之后 ，不妨请几天假去旅游，这样感觉非常的好。保持效率 ，每天的时间其实能做好多的事的，又不会至于疏远朋友。&lt;/p&gt; &lt;p&gt;暂时记录下来，看看自己能不能坚持做下去吧，反正2010年我是做的非常的不好，感觉自己每天都很忙的，周末很累睡一上午，下午无所事事的看一下午视频，平时也不和同学朋友联系，技术上也没有太大的提高，感觉自己非常的失败。&lt;/p&gt; &lt;p&gt;这就是我明年需要做的事，明年早期先有一个 安排，规定自己的技术目标，薪水期待，预算等。相信我一定能做到。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>ioc 容器中进行 事务管理</title>
      <link>https://helao.net/2011/85.html</link>
      <pubDate>2011-01-21 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;spring中进行事务管理，是使用了动态代理技术，为 拦截的bean 生成代理，这样在调用bean方法是可以进行事务管理。&lt;/p&gt; &lt;p&gt;我想要实现一个非常简单的事务管理框架，能在ioc容器中进行声明，即可进行事务管理。&lt;/p&gt; &lt;p&gt;首先详细的分析 spring的实现过程：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; 1，定义sessionFactory&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; 2,将sessionFactory 注入到 transactionManager中，使其能托管&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; 3，然后配置 beanNameProxy, 需要事务管理的beanName这样读取bean的时候 会从 这里生成代理&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; 4，配置要拦截的method的 事务隔离属性&lt;/p&gt; &lt;p&gt;&amp;nbsp;这样，当从ioc中取bean的时候 会根据 beanNameProxy 中配置的 beanname决定 是否需要从这里生成bean&lt;/p&gt; &lt;p&gt;&amp;nbsp;从这里生成bean之后，然后根据配置的 method的隔离级别 在transcationManager中开启事务，执行 bean中的方法&lt;/p&gt; &lt;p&gt;&amp;nbsp;执行完成后，根据返回结果决定是否 提交 或者回滚。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;5，到这里事务就完全实现了，还需要看看 spring中的代码，这也应该是aop的实现方式&lt;/p&gt; &lt;p&gt;去看看具体的实现代码，简化一下实现我的需求就好。&lt;/p&gt; &lt;p&gt;完成后会分享给大家的 &amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>java项目 异常处理 机制</title>
      <link>https://helao.net/2011/83.html</link>
      <pubDate>2011-01-20 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;项目中 发现有好多异常需要检查处理，老大要求有异常直接抛出，不做任何处理即可。&lt;/p&gt; &lt;p&gt;可这样自己感觉不是很好，包括一些 资源的回收，数据的回滚等都没办法做，自己想做一些封装，可又感觉自己考虑的不是很全面。十分无奈，于是 参考了下面的这篇文章。得出了自己的结论：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;对于异常，能处理的就处理，处理不了的就向上抛出（废话，跟没说一样）&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;如果想详细的记录异常的 就多使用 封装异常 和 try &amp;nbsp;catch ，精确的处理每个异常&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;如果想减少代码中的try catch 就需要 封装异常，一个模块抛出一个统一的异常，使用 unchecked exception。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;如果不想写try catch &amp;nbsp;就在 web 中配置 exception 拦截 throwable ,在那个jsp中记录一下 ，就ok了&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;个人建议，对于不重要的操作，就进行静默处理 &amp;nbsp;如 catch(e){//nothing};&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 而重要的操作，就统一抛出一个 异常，中间处理的 异常也不会很多&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;唉 还是感觉很虚。贴出那篇文章自己看吧 &amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: Arial, sans-serif, Helvetica, Tahoma; line-height: 18px;&#34;&gt; &lt;h1 style=&#34;font-size: 16px !important; line-height: 1.5em; margin-top: 25px; margin-right: 0px; margin-bottom: 10px; margin-left: 10px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 5px; color: black; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #cccccc;&#34;&gt;&lt;a style=&#34;color: #006699; text-decoration: none;&#34; href=&#34;http://www.iteye.com/wiki/CPP/783-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86(Error-Handling)%EF%BC%9A%E4%B8%BA%E4%BD%95%E3%80%81%E4%BD%95%E6%97%B6%E3%80%81%E5%A6%82%E4%BD%95&#34;&gt;错误处理(Error-Handling)：为何、何时、如何&lt;/a&gt;&lt;/h1&gt;   &lt;div class=&#34;page_info&#34; style=&#34;background-color: transparent; color: gray; padding-top: 2px; padding-right: 2px; padding-bottom: 2px; padding-left: 5px; margin-top: 5px; margin-bottom: 10px;&#34;&gt;   原创作者:&amp;nbsp;   &lt;a style=&#34;color: #006699; text-decoration: none;&#34; href=&#34;http://www.iteye.com/topic/130789&#34; target=&#34;_blank&#34;&gt;pongba&lt;/a&gt;&amp;nbsp;&amp;nbsp; 阅读:910次&amp;nbsp;&amp;nbsp; 评论:0条&amp;nbsp;&amp;nbsp; 更新时间:2007-10-10&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   &lt;a class=&#34;favorite&#34; style=&#34;color: #006699; text-decoration: none; padding-left: 20px;&#34; href=&#34;http://app.iteye.com/links?user_favorite%5Btitle%5D=%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%28Error-Handling%29%EF%BC%9A%E4%B8%BA%E4%BD%95%E3%80%81%E4%BD%95%E6%97%B6%E3%80%81%E5%A6%82%E4%BD%95&amp;amp;user_favorite%5Burl%5D=http%3A%2F%2Fwww.iteye.com%2Fwiki%2FCPP%2F783-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%28Error-Handling%29%EF%BC%9A%E4%B8%BA%E4%BD%95%E3%80%81%E4%BD%95%E6%97%B6%E3%80%81%E5%A6%82%E4%BD%95&#34; target=&#34;_blank&#34;&gt;收藏&lt;/a&gt;   &lt;/div&gt;   &lt;div class=&#34;content&#34; style=&#34;padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 5px;&#34;&gt;   错误处理(Error-Handling)：为何、何时、如何   &lt;br /&gt;   &lt;br /&gt;By 刘未鹏(pongba)   &lt;br /&gt;C++的罗浮宫(http://blog.csdn.net/pongba)   &lt;br /&gt;TopLanguage(http://groups.google.com/group/pongba)   &lt;br /&gt;   &lt;br /&gt;引言   &lt;br /&gt;错误处理（Error-Handling）这个重要议题从1997年（也许更早）到2004年左右一直是一个被广泛争论的话题，曾在新闻组上、博客上、论坛上引发口水无数（不亚于语言之争），Bjarne Stroustrup、James Gosling、Anders Hejlsberg、Bruce Eckel、Joel Spolsky、Herb Sutter、Andrei Alexandrescu、Brad Abrams、Raymond Chen、David Abrahams…，各路神仙纷纷出动，好不热闹:-)   &lt;br /&gt;   &lt;br /&gt;如今争论虽然已经基本结束并结果；只不过结论散落在大量文献当中，且新旧文献陈杂，如果随便翻看其中的几篇乃至几十篇的话都难免管中窥豹。就连Gosling本人写的《The Java Programming Language》中也语焉不详。所以，写这篇文章的目的便是要对这个问题提供一个整体视图，相信我，这是个有趣的话题:-)   &lt;br /&gt;   &lt;br /&gt;为什么要错误处理？   &lt;br /&gt;这是关于错误处理的问题里面最简单的一个。答案也很简单：现实世界是不完美的，意料之外的事情时有发生。   &lt;br /&gt;   &lt;br /&gt;一个现实项目不像在学校里面完成大作业，只要考虑该完成的功能，走happy path即可，忽略任何可能出错的因素（呃.. 你会说，怎么会出错呢？配置文件肯定在那，矩阵文件里面肯定含的是有效数字.. 因为所有的环境因素都在你的控制之下。就算出现什么不测，比如运行到一半被人拔了网线，那就让程序崩溃好了，再双击一下不就行了嘛）。   &lt;br /&gt;   &lt;br /&gt;然而现实世界的软件就必须考虑错误处理了。如果一个错误是能够恢复的，要尽量恢复。如果是不能恢复的，要妥善的退出模块，保护用户数据，清理资源。如果有必要的话应该记录日志，或重启模块等等。   &lt;br /&gt;   &lt;br /&gt;什么时候做错误处理？（或者：什么是“错误”？）   &lt;br /&gt;错误，很简单，就是不正确的事情。也就是不该发生的事情。有一个很好的办法可以找出哪些情况是错误。首先就当自己是在一个完美环境下编程的，一切precondition都满足：文件存在那里，文件没被破坏，网络永远完好，数据包永远完整，程序员永远不会拿脑袋去打苍蝇，等等… 这种情况下编写的程序也被称为happy path。   &lt;br /&gt;   &lt;br /&gt;剩下的所有情况都可以看作是错误。即“不应该”发生的情况，不在算计之内的情况，或者预料之外的情况，whatever。   &lt;br /&gt;   &lt;br /&gt;简而言之，什么错误呢？调用方违反被调用函数的precondition、或一个函数无法维持其理应维持的invariants、或一个函数无法满足它所调用的其它函数的precondition、或一个函数无法保证其退出时的postcondition；以上所有情况都属于错误。（详见《C++ Coding Standards: 101 Rules, Guidelines, and Best Practices》第70章，或《Object Oriented Software Construction, 2nd edition》第11、12章）   &lt;br /&gt;   &lt;br /&gt;例如文件找不到（通常意味着一个错误）、配置文件语法错误、将一个赋值赋给一个总应该是正值的变量、文件存在但由于访问限制而不能打开，或打开不能写、网络传输错误、网络中断、数据库连接错误等等。   &lt;br /&gt;   &lt;br /&gt;哪些情况不属于错误？   &lt;br /&gt;1.&amp;nbsp;&amp;nbsp; &amp;nbsp;控制程序流的返回值不是错误：如果一个情况经常发生，往往意味着它是用来控制程序流程的，应该用status-code返回（注意，不同于error-code），比如经典的while(cin &amp;gt;&amp;gt; i)。读入整型失败是很常见的情况，而且，这里的“读入整型失败”其实真正的含义是“流的下一个字段不是整型”，后者很明确地不代表一个错误；再比如在一个字符串中寻找一个子串，如果找不到该子串，也不算错误。这类控制程序流的返回值都有一个共同的特点，即我们都一定会利用它们的返回值来编写if-else，循环等控制结构，如：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; if(foo(…)) { … }   &lt;br /&gt;&amp;nbsp; else { … }   &lt;br /&gt;   &lt;br /&gt;或   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; while(foo(…)) { … }   &lt;br /&gt;   &lt;br /&gt;这里再摘两个相应的具体例子，一个来自Gosling的《The Java Programming Language》，是关于stream的。   &lt;br /&gt;   &lt;br /&gt;使用status-code：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; while ((token = stream.next()) != Stream.END)   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; process(token);   &lt;br /&gt;&amp;nbsp; stream.close();   &lt;br /&gt;   &lt;br /&gt;使用exception：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; try {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(;;) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; process(stream.next());   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp; } catch (StreamEndException e) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; stream.close();   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;高下立判。   &lt;br /&gt;   &lt;br /&gt;另一个例子来自TC++PL（Well, not exactly）：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; size_t index;   &lt;br /&gt;&amp;nbsp; try {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; index = find(str, sub_str);   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // case 1   &lt;br /&gt;&amp;nbsp; } catch (ElementNotFoundException&amp;amp; e) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // case 2   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;使用status-code：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; int index = find(str, sub_str)   &lt;br /&gt;&amp;nbsp; if(index != -1) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // case 1   &lt;br /&gt;&amp;nbsp; } else {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // case 2   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;之所以控制程序的流程的返回值不是错误，就是因为它们是程序合法流程的一部分。一个返回值让程序分成两支，而两种情况都是合理的，计划之内的，那么这个返回值就不能算是“错误”。   &lt;br /&gt;   &lt;br /&gt;1’. 另一方面，还有一种情况与此有微妙的区别。即它确实是一个错误，但它是可恢复的。它并不将程序引导向另一个分支，而是恢复之后继续原来的分支。   &lt;br /&gt;   &lt;br /&gt;举个例子，取钱的卡内余额不足，这时一个恢复过程可能是从另一张卡上转账；配置文件不存在，这时一个恢复过程可能是创建一个缺省的配置文件；配置文件中的某个配置项缺失，这时可以使用缺省的配置值。   &lt;br /&gt;   &lt;br /&gt;这类情况属于意料之内的，或者设计之内的错误。特点是在你的设计中就已经有一个错误处理程序在等着它了。当然，对付这种错误也有三种办法：   &lt;br /&gt;   &lt;br /&gt;一是就地恢复，比如一个readIni如果读不到配置文件的话就直接创建一个缺省的，不返回任何错误代码。这种方案在当上层模块需要知道配置文件缺失的情况下不妥当，在上层模块需要在配置文件缺失的情况下回滚掉一些操作的情况下也不妥当。   &lt;br /&gt;   &lt;br /&gt;另一个就是抛出异常，这种做法的灵活性最大，上层模块不管是想保持中立、回滚操作、还是处理异常，都没有问题。而且有时候，在编写一个函数的时候并不知道其中的错误是不是可以解决，这个时候抛出一个异常是恰当的，如果后来发觉可以解决这个错误了，不管是在上层模块解决这个异常，还是在错误发生点取消这个异常，都没有问题（因为当还没有想好解决之道的时候，所有上层模块都应该是异常中立的）。   &lt;br /&gt;   &lt;br /&gt;最后一种方法当然就是error-code了，这个跟抛出异常其实是换汤不换药，但error-code有若干问题；这个后面再说。   &lt;br /&gt;   &lt;br /&gt;2.&amp;nbsp;&amp;nbsp; &amp;nbsp;编程bug不是错误。属于同一个人维护的代码，或者同一个小组维护的代码，如果里面出现bug，使得一个函数的precondition得不到满足，那么不应该视为错误。而应该用assert来对付。因为编程bug发生时，你不会希望栈回滚，而是希望程序在assert失败点上直接中断，调用调试程序，查看中断点的程序状态，从而解决代码中的bug。   &lt;br /&gt;   &lt;br /&gt;关于这一点，需要尤其注意的是，它的前提是：必须要是同一个人或小组维护的代码。同一个小组内可以保证查看到源代码，进行debug。如果调用方和被调用方不属于同一负责人，则不能满足precondition的话就应该抛出异常。总之记住一个精神：assert是用来辅助debug的（assert的另一个作用是文档，描述程序在特定点上的状态，即便assert被关闭，这个描述功能也依然很重要）。   &lt;br /&gt;   &lt;br /&gt;注意，有时候，为了效率原因，也会在第三方库里面使用assert而不用异常来报告违反precondition。比如strcpy，std::vector的operator[]。   &lt;br /&gt;   &lt;br /&gt;3.&amp;nbsp;&amp;nbsp; &amp;nbsp;频繁出现的不是错误。频繁出现的情况有两种可能，一是你的程序问题大了（不然怎么总是出错呢？）。二是出现的根本不是错误，而是属于程序的正常流程。后者应该改用status-code。   &lt;br /&gt;   &lt;br /&gt;怎样进行错误处理？（或者：用什么手段进行错误处理？）   &lt;br /&gt;答案很简单，异常。   &lt;br /&gt;   &lt;br /&gt;如果你仍然是error-code的思维习惯的话，可以假想将所有error-code的地方改为抛出exception。需要注意的是，error-code不是status-code。并非所有返回值都是用来报告真正的错误的，有些只不过是控制程序流的。就算返回的是bool值（比如查找子串，返回是否查找到），也并不代表false的情况就是一个错误。具体参加上一节：“哪些情况不属于错误”。   &lt;br /&gt;   &lt;br /&gt;一个最为广泛的误解就是：异常引入了不菲的开销，而error-code没有开销，所以应该使用error-code。这个论点的漏洞在于，它认为只要是开销就是有问题的，而不关心到底是在什么情况下的开销。实际上，现代的编译器早已能够做到异常在happy path上的零开销。当然，空间开销还是有的，因为零开销方案用的是地址表方案；但相较于时间开销，这里的空间开销几乎从来都不是个问题。另一方面，一旦发生了异常，程序肯定就出了问题，这个时候的时间开销往往就不那么重要了。此外有人会说，那如果频繁抛出异常呢？如果频繁抛出异常，往往就意味着那个异常对应的并非一个错误情况。   &lt;br /&gt;   &lt;br /&gt;当然，凡事都有例外。《C++ Coding Standards: 101 Rules, Guidelines, and Best Practices》上面陈述了两个例外情况：一，用异常没有带来明显的好处的时候：比如所有的错误都会在立即调用端解决掉或者在非常接近立即调用端的地方解决掉。二，在实际作了测定之后发现异常的抛出和捕获导致了显著的时间开销：这通常只有两种情况，要么是在内层循环里面，要么是因为被抛出的异常根本不对应于一个错误。   &lt;br /&gt;   &lt;br /&gt;《C++ Coding Standards: 101 Rules, Guidelines, and Best Practices》里面一再强调：不要在项目里面关闭异常支持。因为就算你的项目里面不抛出异常，标准库也依赖于异常。一旦关闭异常，不仅你的项目代码都要依赖于error-code（error-code的缺点见下一节），整个标准库便也都要依赖于非标准的途径来汇报错误，或者干脆就不汇报错误。如果你的项目是如此的硬实时，乃至于你在非常小心且深入的分析之后发觉某些操作真的负担不起异常些微的空间开销和unhappy path上的时间开销的话，也要尽量别在全局关闭异常支持，而是尽量将这些敏感的操作集中到一个模块中，按模块关闭异常。   &lt;br /&gt;   &lt;br /&gt;插曲：异常（exception）vs错误代码（error-code）   &lt;br /&gt;异常相较于错误代码的优势太多了，以下是一个（不完全）列表。   &lt;br /&gt;   &lt;br /&gt;异常与错误代码的本质区别之一——异常会自动往上层栈传播：一旦异常被抛出，执行流就立即中止，取而代之的是自动的stack-unwinding操作，直到找到一个适当的catch子句。   &lt;br /&gt;   &lt;br /&gt;相较之下，使用error-code的话，要将下层调用发生的错误传播到上层去，就必须手动检查每个调用边界，任何错误，都必须手动转发（返回）给上层，稍有遗漏，就会带着错误的状态继续往下执行，从而在下游不知道离了多远的地方最终引爆程序。这来了以下几个问题：   &lt;br /&gt;   &lt;br /&gt;1.&amp;nbsp;&amp;nbsp; &amp;nbsp;麻烦。每一个可能返回错误代码的调用边界都需要检查，不管你实际上对不对返回的错误作响应，因为即便你自己不解决返回的错误，也要把它传播到上层去好让上层解决。   &lt;br /&gt;   &lt;br /&gt;2.&amp;nbsp;&amp;nbsp; &amp;nbsp;不优雅的代码（错误处理代码跟One True Path（也叫happy path）搅和在一起）。关于这一条普遍的论述都不够明确，比如有人可能会反驳说，那错误反正是要检查的，用异常难道就不需要捕获异常了吗？当然是需要的，但关键是，有时候我们不一定会在异常发生的立即点上捕获并处理异常。这时候，异常的优势就显现出来了，比如：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; void foo()   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; try {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; op1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; op2;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; …   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; opN;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; } catch (…) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // log   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // clean up   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; throw;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;如果用error-code的话：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; int foo()   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(!op1()) {&amp;nbsp;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // log? clean up?   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return FAILED;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(!op2()) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // log? clean up?   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return FAILED;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; …   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return SUCCEEDED;   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;好一点的是这样：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; int foo()   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(!op1()) goto FAILED;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(!op2()) goto FAILED;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; …   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(!opN()) goto FAILED;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return SUCCEEDED;   &lt;br /&gt;&amp;nbsp; FAILED:   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // log, clean up   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return FAILED;   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;就算是最后一种做法，One True Path仍然隐藏在一个个的if里面（我还记得最初阅读用Win32 SDK写出来的代码时的困惑：真正做事情的代码老是缩在if(!...)里面，看起来特难受）。二来，手动检查返回值的成功失败毕竟是很error-prone的。忘记检查的话程序最终会挂掉；如果有多个错误值则上面的if-else-if…就会复杂化，从而更容易弄错。   &lt;br /&gt;   &lt;br /&gt;值得注意的是，这里我并没有用一个常被引用的例子，即如果你是用C写代码（C不支持局部变量自动析构（RAII）），那么程序可能会像这样：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; int f()   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(resource1 is acquired) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource2;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(resource2 is acquired) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource3;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(resource3 is acquired) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ... // do something   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return SUCCEEDED;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; release resource3;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; release resource2;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; release resource1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return FAILED;   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;或者像这样：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; int f()   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(resources1 is not acquired) return FAILED;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource2;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(resource2 is not acquired) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; release resource1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return FAILED;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource3;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(resource3 is not acquired) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; release resource2;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; release resource1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return FAILED;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // do the job   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return SUCCEEDED;   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;（一个更复杂的具体例子可以参考[16]）   &lt;br /&gt;   &lt;br /&gt;以上两种方案的缺点是显而易见的，而且，一旦需要获取的资源多了以后代码也会随着越来越难以卒读。但这两种方案之所以有这个问题并不是由于error-code的本质性质造成的，而是因为不支持RAII。如果支持RAII的话，以上代码中的“release resourceX”便可以省掉（虽然代码也并不会因此就优雅多少）。此外另一个事实是，使用error-code作为错误汇报机制的代码往往并不使用RAII。   &lt;br /&gt;   &lt;br /&gt;当整个函数需要保持完全的异常中立的时候，异常的优势就更显现出来了：使用error-code，你还是需要一次次的小心check每个返回的错误值，从而阻止执行流带着错误往下继续执行。用异常的话，可以直接书写One True Path，连try-catch都不要。   &lt;br /&gt;   &lt;br /&gt;当然，错误安全（error-safety）还是需要保证的，只不过错误安全不管是对于error-code还是异常来说都是一个困难。解决方案与到底使用error-code还是异常是无关的，这个后面再说。   &lt;br /&gt;   &lt;br /&gt;3.&amp;nbsp;&amp;nbsp; &amp;nbsp;脆弱（易错）。只要忘了检查任意一个错误代码，执行流就必然会带着错误状态往下继续执行，后者几乎肯定不是你想要的。带着错误状态往下执行好一点的会立即崩溃，差一点的则在相差十万八千里的地方引发一个莫名其妙的错误。   &lt;br /&gt;   &lt;br /&gt;4.&amp;nbsp;&amp;nbsp; &amp;nbsp;难以（编写时）确保和（review时）检查代码的正确性。需要检查所有可能的错误代码有没有都被妥善check了，其中也许大部分都是不能直接对付而需要传播给上级的错误。   &lt;br /&gt;   &lt;br /&gt;5.&amp;nbsp;&amp;nbsp; &amp;nbsp;耦合。即便你的函数是一个异常中立的函数，不管底层传上来哪些错误一律抛给上层，你仍然需要在每个调用的边界检查，并妥善往上手动传播每一个错误代码。而一旦底层接口增加、减少或改动错误代码的话，你的函数就需要立即作出相应改动，检查并传播底层接口改动后相应的错误代码——这是很不幸的，因为你的函数只是想保持异常中立，不管底层出什么错一律抛给上层调用方，这种情况下理想情况应该是不管底层的错误语意如何修改，当前层都应该不需要改动才对。   &lt;br /&gt;   &lt;br /&gt;6.&amp;nbsp;&amp;nbsp; &amp;nbsp;没有异常，根本无法编写泛型组件。泛型组件根本不知道底层会出哪些错，泛型组件的特点之一便是错误中立。但用error-code的话，怎么做到错误中立？泛型组件该如何检查，检查哪些底层错误？唯一的办法就是让所有的底层错误都用统一的SUCCEEDED和FAILED代码来表达，并且将其它错误信息用GetLastError来获取。姑且不说这个方案的丑陋，如何、由谁来统一制定SUCCEEDED和FAILED、GetLastError的标准？就算有这个统一标准，你也可以设想一下某个标准库泛型算法（如for_each）编写起来该是如何丑陋。   &lt;br /&gt;   &lt;br /&gt;7.&amp;nbsp;&amp;nbsp; &amp;nbsp;错误代码不可以被忘掉（忽视）。忘掉的后果见第3条。此外，有时候我们可能会故意不管某些错误，并用一个万能catch来捕获所有未被捕获的错误，log，向支持网站发送错误报告，并重启程序。用异常这就很容易做到——只要写一个unhandled exception handler（不同语言对此的支持机制不一样）即可。   &lt;br /&gt;   &lt;br /&gt;异常与错误代码的本质区别之二——异常的传播使用的是一个单独的信道，而错误代码则占用了函数的返回值；函数的返回值本来的语意是用来返回“有用的”结果的，这个结果是属于程序的One True Path的，而不是用来返回错误的。   &lt;br /&gt;   &lt;br /&gt;利用返回值来传播错误导致的问题如下：   &lt;br /&gt;   &lt;br /&gt;8.&amp;nbsp;&amp;nbsp; &amp;nbsp;所有函数都必须将返回值预留给错误。如果你的函数最自然的语意是返回一个double，而每个double都是有效的。不行，你得把这个返回值通道预留着给错误处理用。你可能会说，我的函数很简单，不会出错。但如果以后你修改了之后，函数复杂了呢？到那个时候再把返回的double改为int并加上一个double&amp;amp;作为out参数的话，改动可就大了。   &lt;br /&gt;   &lt;br /&gt;9.&amp;nbsp;&amp;nbsp; &amp;nbsp;返回值所能承载的错误信息是有限的。NULL？-1？什么意思？具体的错误信息只能用GetLastError来提供… 哦，对了，你看见有多少人用过GetLastError的？   &lt;br /&gt;   &lt;br /&gt;10.&amp;nbsp;&amp;nbsp; &amp;nbsp;不优雅的代码。呃…这个问题前面不是说过了么？不，这里说的是另一个不优雅之处——占用了用来返回结果的返回值通道。本来很自然的“计算——返回结果”，变成了“计算——修改out参数——返回错误”。当然，你可以说这个问题不是很严重。的确，将double res = readInput();改为double res; readInput(&amp;amp;res);也没什么大不了的。如果是连调用呢？比如，process(readInput());呃… 或者readInput() + …？或者一般地，op1(op2(), op3(), …);？   &lt;br /&gt;   &lt;br /&gt;11.&amp;nbsp;&amp;nbsp; &amp;nbsp;错误汇报方案不一致性。看看Win32下面的错误汇报机制吧：HRESULT、BOOL、GetLastError…本质上就是因为利用返回值通道是一个补丁方案，错误处理是程序的一个方面（aspect），理应有其单独的汇报通道。利用异常的话，错误汇报方案就立即统一了，因为这是一个first-class的语言级支持机制。   &lt;br /&gt;   &lt;br /&gt;12.&amp;nbsp;&amp;nbsp; &amp;nbsp;有些函数根本无法返回值，如构造函数。有些函数返回值是语言限制好了的，如重载的操作符和隐式转换函数。   &lt;br /&gt;   &lt;br /&gt;异常与错误代码的本质区别之三——异常本身能够携带任意丰富的信息。   &lt;br /&gt;   &lt;br /&gt;13.&amp;nbsp;&amp;nbsp; &amp;nbsp;有什么错误报告机制能比错误报告本身就包含尽量丰富的信息更好的呢？使用异常的话，你可以往异常类里面添加数据成员，添加成员函数，携带任意的信息（比如Java的异常类就缺省携带了非常有用的调用栈信息）。而错误代码就只有一个单薄的数字或字符串，要携带其它信息只能另外存在其它地方，并期望你能通过GetLastError去查看。   &lt;br /&gt;   &lt;br /&gt;异常与错误代码的本质区别之四——异常是OO的。   &lt;br /&gt;   &lt;br /&gt;14.&amp;nbsp;&amp;nbsp; &amp;nbsp;你可以设计自己的异常继承体系。呃…那这又有什么用呢？当然有用，一个最大的好处就是你可以在任意抽象层次上catch一组异常（exception grouping），比如你可以用catch(IOException)来捕获所有的IO异常，用catch(SQLException)来捕获所有的SQL异常。用catch(FileException)来catch所有的文件异常。你也可以catch更明确一点的异常，如StreamEndException。总之，catch的粒度是粗是细，根据需要，随你调节。当然了，你可以设计自己的新异常。能够catch一组相关异常的好处就是你可以很方便的对他们做统一的处理。   &lt;br /&gt;   &lt;br /&gt;异常与错误代码的本质区别之五——异常是强类型的。   &lt;br /&gt;   &lt;br /&gt;15.&amp;nbsp;&amp;nbsp; &amp;nbsp;异常是强类型的。在catch异常的时候，一个特定类型的catch只能catch类型匹配的异常。而用error-code的话，就跟enum一样，类型不安全。-1 == foo()？FAILED == foo()？MB_OK == foo()？大家反正都是整数。   &lt;br /&gt;   &lt;br /&gt;异常与错误代码的本质区别之六——异常是first-class的语言机制。   &lt;br /&gt;   &lt;br /&gt;16.&amp;nbsp;&amp;nbsp; &amp;nbsp;代码分析工具可以识别出异常并进行各种监测或分析。比如PerfMon就会对程序中的异常做统计。这个好处放在未来时态下或许怎么都不应该小觑。   &lt;br /&gt;   &lt;br /&gt;如何进行错误处理？   &lt;br /&gt;这个问题同样极其重要。它分为三个子问题：   &lt;br /&gt;   &lt;br /&gt;1.&amp;nbsp;&amp;nbsp; &amp;nbsp;何时抛出异常。   &lt;br /&gt;2.&amp;nbsp;&amp;nbsp; &amp;nbsp;何时捕获异常。   &lt;br /&gt;3.&amp;nbsp;&amp;nbsp; &amp;nbsp;如何避开异常，保持异常中立（或“异常透明”）。   &lt;br /&gt;   &lt;br /&gt;其中最后一个问题最为重要，属于错误处理的本质性困难之一。   &lt;br /&gt;   &lt;br /&gt;先说前两个问题。   &lt;br /&gt;   &lt;br /&gt;从本质上，错误分为两种，一种是可恢复的，另一种是不可恢复的。   &lt;br /&gt;   &lt;br /&gt;对于可恢复的错误。有两种方案：   &lt;br /&gt;   &lt;br /&gt;1.&amp;nbsp;&amp;nbsp; &amp;nbsp;在错误的发生点上立即就予以恢复。比如配置文件不存在便创建一个缺省的，这种方案的好处是当前函数不返回任何错误，因为错误被当即搞定了，就像没发生一样。这种方案的前提是当前函数必须要有对付该错误的足够上下文，如果一个底层的函数对全局语意没有足够的视图，这时就可以抛出异常，由上层函数负责恢复。   &lt;br /&gt;   &lt;br /&gt;2.&amp;nbsp;&amp;nbsp; &amp;nbsp;在某个上层栈上恢复。这种情况下，在负责恢复的那层栈以下的调用一般被看成一个整体事务，其中发生的任何错误都导致整个事务回滚，回滚到错误恢复栈层面时，由相应的catch子句进行恢复，并重新执行整个事务，或者将程序引向另一条备选路径（alternative）。   &lt;br /&gt;   &lt;br /&gt;对于不可恢复的错误。也有两种方案：   &lt;br /&gt;   &lt;br /&gt;1.&amp;nbsp;&amp;nbsp; &amp;nbsp;Sudden Death。在错误的发生点上退出模块（可能伴随着重启模块）。退出模块前往往需要先释放资源、保存关键数据、记录日志，等等。该方案的前提是在错误的发生点的上下文中必须要能够释放所有资源，要能够保存关键数据。要满足这个前提，可以用一个全局的沙盒来保存整个模块到当前为止申请的所有资源，从而在任何出错点上都可以将这个沙盒整个释放掉。也可以用智能垃圾收集，这样在出错点上只要记录日志和保存数据，把扫尾工作留给智能垃圾收集器完成。这个方案的弱点是如果释放资源是要按某种次序的就比较麻烦。   &lt;br /&gt;   &lt;br /&gt;2.&amp;nbsp;&amp;nbsp; &amp;nbsp;回滚。如果你并没有用智能垃圾收集（要智能到能够回收文件句柄，网络端口等，不光是内存），或者你并没有在某个全局可访问的位置保存到当前为止模块申请的所有资源，或者你的资源互相之间有依赖关系，必须按照分配的逆序释放，等等，那么就必须按照调用栈的反方向回滚事务。回滚到一个所谓的Fault Barrier，用一个catch-all在那里等着，所谓Fault-Barrier的作用就是为了抓这些没法妥善恢复的错误的，它做的事情通常就是logging、发送错误报告、可能也会重启模块。Fault Barrier一般在一个内聚的单一职责的功能模块的边界出现。   &lt;br /&gt;   &lt;br /&gt;异常转换   &lt;br /&gt;在如何抛出和捕获异常的问题上，还有一个子问题就是异常的转换（translation）。以下情况下应该转换一个由底层传上来的异常：   &lt;br /&gt;   &lt;br /&gt;1.&amp;nbsp;&amp;nbsp; &amp;nbsp;抛出一个对应于当前抽象层的异常。比如Document::open当接收到底层的文件异常（或数据库异常，网络异常，取决于这个Document来自何方）时，将其转换为“文档无效或被破坏”异常，增加高层语意，并避免暴露底层实现细节（对异常的一个批评就是会暴露内部实现，而实际上，通过适当转换异常，可以使得异常总位于当前的抽象层次上，成为接口的一部分）。   &lt;br /&gt;   &lt;br /&gt;2.&amp;nbsp;&amp;nbsp; &amp;nbsp;在模块边界上。如果一个模块，在内部使用异常，但在边界上必须提供C API的话，就必须在边界上捕获异常并将其转换为error-code。   &lt;br /&gt;   &lt;br /&gt;没有时间机器——错误处理的本质困难   &lt;br /&gt;刚才提到“回滚”。那么，在异常发生的时候，如何回滚既然已经发生的操作？这就是要说的第三个问题：如何在异常从发生点一路传播到捕获点的路径上保持异常中立，即回滚操作，释放资源。简而言之就是要做到错误安全（error-safe）。错误安全攸关强异常安全保证和事务语意。在异常编程里面，错误安全是最重要的一环。   &lt;br /&gt;   &lt;br /&gt;理想情况下，我们要的是一个时间机器：打碎的杯子要能还原，释放的内存要能重新得到，销毁的对象就像没销毁前一模一样，发射的导弹就像从来也没有离开发射筒一样，数据库就像从来没被写入一样…   &lt;br /&gt;   &lt;br /&gt;没有时间机器。   &lt;br /&gt;   &lt;br /&gt;那么，如何回滚木已成舟的操作？   &lt;br /&gt;   &lt;br /&gt;目前有两个主要方案：   &lt;br /&gt;   &lt;br /&gt;1.&amp;nbsp;&amp;nbsp; &amp;nbsp;Discard（丢弃）：一个例子就能够说明这种做法，源自STL的“copy-swap手法”。比如一个vector，你要往里面插入一个元素，如果插入元素失败的话你想要vector维持原状，就好像从来没有动过一样。如何做到这一点呢？你可以先把这个vector拷贝一份，往拷贝里面插入元素，然后将两个vector调换（swap）一下即可，swap是不会失败的，因为它只是把两个指针互换了一下。而如果往那个拷贝里面插入元素失败的话，拷贝就会被Discard（丢弃掉），不会带来任何实际的副作用。当然，这种做法是有代价的，谁叫你要强异常安全保证呢？再比如一个拷贝赋值操作符可以这样写：MyClass(other).swap(*this); 当然，前提还是swap()必须具有标准的no-throw语意。   &lt;br /&gt;   &lt;br /&gt;这种做法一般化的描述就是：“在一个‘副本’里把所有的事情都做好了，然后用一个不会出错的函数提交（commit）”。这样一来，中途出了任何错误只要丢弃那个副本即可（往往只要任其析构）。要做到这一点，一个原则就是：“在破坏一份信息之前要确保其新的版本一定能够无错的替换掉原信息”，例如在拷贝构造函数中，不能先delete再new，因为new可能失败，一旦new失败了，delete掉的信息可就找不回来了。   &lt;br /&gt;   &lt;br /&gt;2.&amp;nbsp;&amp;nbsp; &amp;nbsp;Undo（撤销）：有时候，你一方面不想付出Discard方案的（通常不菲的）空间开销，另一方面你又想拥有强异常安全保证。这也是有办法的，比如：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; void World::addPerson(Person const&amp;amp; person)   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; m_persons.push_back(person);   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; scope(failure) { m_persons.pop_back(); }   &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // other operations   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;scope(failure)是D语言的特性，其语意显而易见：如果当前的scope以失败（异常）退出的话，{}内的语句就被执行。这么一来，在上面的例子中，如果后续的操作失败，那么这个person就会被从m_persons中pop_back出来，一次事务撤销，使得这个函数对m_persons的影响归零。   &lt;br /&gt;   &lt;br /&gt;该方案的前提有两个：一，回滚操作（比如这里的m_persons.pop_back()）必须存在且不会失败（no-throw）。比如missile.lunch()就不能回滚，操作系统API一般也无法回滚；I/O操作也无法回滚；另一方面，内存操作一般而言都是可以回滚的，只要回复原来内存的值即可。二，被回滚的操作（比如这里的m_persons.push_back(person)）也一定要是强异常保证的。比如在中间而不是尾部插入一个person（m_persons.insert(iter, person)）就不是强保证的，这种时候就要诉诸前一个方案（Discard）。   &lt;br /&gt;   &lt;br /&gt;D的scope(failure)（还有scope(exit)、scope(success)）是非常强大的设施。利用它，一个具有事务语意的函数的一般模式如下：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; void Transaction()   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; op1; // strong operation   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; scope(failure) { undo op1; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; op2; // strong operation   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; scope(failure) { undo op2; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; …   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; opN; // strong operation   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; scope(failure) { undo opN; }   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;在C++里面也可以模拟D的scope(failure)，Andrei Alexandrescu曾实现了一个ScopeGuard类[11]，而旨在完全模拟D的scope特性的boost.scope-exit也在review中。只不过C++03里面的模拟方案有一些学习曲线和使用注意点，C++09之后会有更方便的方案。在其它不支持scope(failure)的语言中，也可以模拟这种做法，不过做法很笨拙。   &lt;br /&gt;   &lt;br /&gt;3.&amp;nbsp;&amp;nbsp; &amp;nbsp;呃… 哪来的第三个方案？前面不是说了只有两个方案吗？是的。因为这第三个方案是“理想”方案，目前还没有进入主流语言，不过在haskell里面已经初见端倪了。强异常安全保证的核心思想其实就是事务语意，而事务语意的核心思想就是“不成功便成仁”（这个思想有许多有趣的说法，比如：“武士道原则”、“要么直着回来要么横着回来”、“干不了就去死”），根据这个想法，其实最简单的方案是把一组属于同一事务的操作简单地圈起来（标记出来），把回滚操作留给语言实现去完成：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; stm {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; op1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; op2;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; …   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; opN;   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;只要op1至opN中任意一个失败，整个stm块对内存的写操作就全被自动抛弃（这要求编译器和运行时的支持，一般是用一个缓冲区或写日志来实现），然后异常被自动抛出这个stm块之外。这个方案的优点是它太优美了，我们几乎只要关注One True Path即可，唯一要做的事情就是用stm{…}圈出代码中需要强保证的代码段。这个方案的缺点有两个：一，它跟第一个方案一样，有空间开销，不过空间开销通常要小一点，因为只要缓存特定的写操作。二，当涉及到操作系统API，I/O等“外部”操作的时候，底层实现就未必能够回滚这些操作了。另一个理论上的可能性是，当回滚操作和被回滚操作并非严格物理对应（所谓物理对应就是说，回滚操作将内存回滚到目标操作发生之前的状态）的时候，底层实现也不知道如何回滚。   &lt;br /&gt;   &lt;br /&gt;（STM（软件事务内存）目前在haskell里面实现了，Intel也释出了C/C++的STM预览版编译器。只不过STM原本的意图是实现锁无关算法的。后者就是另一个话题了。）   &lt;br /&gt;   &lt;br /&gt;RAII   &lt;br /&gt;实际上刚才还有一个问题没有说，那就是如何确保资源一定会被释放（即便发生异常），这在D里面对应的是scope(exit)，在Java里面对应的是finally，在C#&amp;nbsp;&amp;nbsp; &amp;nbsp;里面对应的是scoped using。   &lt;br /&gt;   &lt;br /&gt;简而言之就是，不管当前作用域以何种方式退出，某某操作（通常是资源释放）都一定要被执行。   &lt;br /&gt;   &lt;br /&gt;这个问题的答案其实C++程序员们应该耳熟能详了：RAII。RAII是C++最为强大的特性之一。在C++里面，局部变量的析构函数刚好满足这个语意：无论当前作用域以何种方式退出，所有局部变量的析构函数都必然会被倒着调用一遍。所以只要将有待释放的资源包装在析构函数里面，就能够保证它们即便在异常发生的情况下也会被释放掉了。为此C++提供了一系列的智能指针：auto_ptr、scoped_ptr、scoped_array… 此外所有的STL容器也都是RAII的。在C++里面模拟D的scope(exit)也是利用的RAII。   &lt;br /&gt;   &lt;br /&gt;RAII相较于java的finally的好处和C#的scoped using的好处是非常明显的。只要一段代码就高下立判：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; // in Java   &lt;br /&gt;&amp;nbsp; String ReadFirstLineFromFile( String path )   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; StreamReader r = null;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; String s = null;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; try {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; r = new StreamReader(path);   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; s = r.ReadLine();   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; } finally {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if ( r != null ) r.Dispose();   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return s;   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; // in C#   &lt;br /&gt;&amp;nbsp; String ReadFirstLineFromFile( String path ) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; using ( StreamReader r = new StreamReader(path) ) {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return r.ReadLine();   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;显然，Java版本的（try-finally）最臃肿。C#版本（scoped using）稍微好一些，但using毕竟也不属于程序员关心的代码逻辑，仍然属于代码噪音；况且如果不连续地申请N个资源的话，使用using就会造成层层嵌套结构。   &lt;br /&gt;   &lt;br /&gt;如果使用RAII手法来封装StreamReader类的话（std::fstream就是RAII类的一个范例），代码就简化为：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; // in C++, using RAII   &lt;br /&gt;&amp;nbsp; String ReadFirstLineFromFile(String path)   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; StreamReader r(path);   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return r.ReadLine();   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;好处是显而易见的。完全不用担心资源的释放问题，代码也变得“as simple as possible”。此外，值得注意的是，以上代码只是演示了最简单的情况，其中需要释放的资源只有一个。其实这个例子并不能最明显地展现出RAII强大的地方，当需要释放的资源有多个的时候，RAII的真正强大之处才被展现出来，一般地说，如果一个函数依次申请N个资源：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; void f()   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; …&amp;nbsp;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource2;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; …&amp;nbsp;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resourceN;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; …&amp;nbsp;   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;那么，使用RAII的话，代码就像上面这样简单。无论何时退出当前作用域，所有已经构造初始化了的资源都会被析构函数自动释放掉。然而如果使用try-finally的话，f()就变成了：   &lt;br /&gt;   &lt;br /&gt;&amp;nbsp; void f()   &lt;br /&gt;&amp;nbsp; {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; try {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // #1   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resource2;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // #2   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; acquire resourceN;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; … // #N   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; } finally {   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(resource1 is acquired) release resource1;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(resource2 is acquired) release resource2;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; …   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(resourceN is acquired) release resourceN;   &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }   &lt;br /&gt;&amp;nbsp; }   &lt;br /&gt;   &lt;br /&gt;为什么会这么麻烦呢，本质上就是因为当执行流因异常跳到finally块中时，你并不知道执行流是从#1处、#2处…还是#N处跳过来的，所以你不知道应该释放哪些资源，只能挨个检查各个资源是否已经被申请了，如果已申请了便将其释放；要能够检查每个资源是否已经被申请了，往往就要求你要在函数一开始将各个资源的句柄全都初始化为null，这样才可以通过if(hResN==null)来检查第N个资源是否已经申请。   &lt;br /&gt;   &lt;br /&gt;最后，RAII其实是scope(exit)的特殊形式。   &lt;br /&gt;   &lt;br /&gt;总结   &lt;br /&gt;本文讨论了错误处理的原因、时机和方法。错误处理是编程中极其重要的一环；也是最被忽视的一环，Gosling把这个归因于大多数程序员在学校的时候都是做着大作业当编程练习的，而大作业鲜有老师要求要妥善对待错误的，大家都只要“work on the one true path”即可；然而现实世界的软件可必须面对各种各样的意外情况，往往一个程序的错误处理机制在第一次面对错误的时候便崩溃了… 另一方面，错误处理又是一个极其困难的问题，其本质困难来源于两个方面：一，哪些情况算是错误。二，如何做到错误安全（error-safe）。相较之下在什么地点解决错误倒是容易一些了。本文对错误处理的问题作了详细的分析，总结了多年来这个领域争论的结果，提供了一个实践导引。  &lt;/div&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring的事件 处理机制</title>
      <link>https://helao.net/2011/82.html</link>
      <pubDate>2011-01-20 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span&gt;基于SPRING的事件处理其实很简单，初学者不必一开始就担心搞不懂，本文先是介绍完全基于SPRING的事件监听实现(熟识Spring事件监听的朋友应该跳过第一节)，然后依葫芦画瓢自已做一个性能更好事件监听小框架，&lt;span style=&#34;color: red;&#34;&gt;最后在回贴中加入了注解版&lt;/span&gt;。&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 为何要使用事件监听，而不是直接调用？打个比方，在系统删除一个用户时，需要把用户的其他信息和行为记录一起删除，此时最容易想到的是：删除用户时，调用其他Service类接口删除与之相关的信息和用户行为记录，但是用户是一个基础模块，随着系统模块不断增加，会有越来越多的模块与之关联，按以上方案，每增加一个与用户相关的模块，那么删除用户时就要把这个模块的信息也一起删除，这样用户这个模块就与这些业务模块偶合在一起了，只要系统不断的增加或减少模块，用户模块就永远都改不完。（以上逻辑仅为说明问题）&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 如果采用事件监听，那么在删除一个用户时，发布一事件就完事了，所有相关的模块监听此事件，在事件处理中删除本模块对应的数据，那么用户模块也不会与这些模块有任何偶合了。&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 好，&lt;span style=&#34;color: red;&#34;&gt;回到主题&lt;/span&gt;，&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&#34;color: red;&#34;&gt;1、完全基于SPRING的事件监听与处理：&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 首先，SERVICE总接口类继承org.springframework.context.ApplicationListener接口，并且在SERVICE的抽象类中实现此接口的方法，SERVICE总接口代码：&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;org.springframework.context.ApplicationListener;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;*&amp;nbsp;业务层顶层接口&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;interface&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;IBaseService&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;ApplicationListener{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;&lt;br /&gt;SERVICE抽象类代码，所有具体业务类皆继承此抽象业务类&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;org.springframework.context.ApplicationEvent;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;*&amp;nbsp;实现顶层接口的抽象类&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;abstract&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;AbstractBaseService&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;implements&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;IBaseService&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;此方法不允许重写，要监听事件，重写onBaseEvent方法&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;onApplicationEvent(ApplicationEvent&amp;nbsp;event)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;(event&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;instanceof&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;onBaseEvent((BaseEvent)&amp;nbsp;event);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;要监听事件就重写此方法&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;protected&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;onBaseEvent(BaseEvent&amp;nbsp;event)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;发布事件&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;protected&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;publishEvent(BaseEvent&amp;nbsp;event)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//取得SPRING容器并发布事件&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.context.ContextLoader.getCurrentWebApplicationContext().publishEvent(event);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;BaseEvent类是我自定义的一个类，各业务模块要发布事件，首先定义自已的EVENT类，继承BaseEvent。BaseEvent类代码&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;org.springframework.context.ApplicationEvent;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;ApplicationEvent&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent(Object&amp;nbsp;source)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;(source);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;&lt;br /&gt;用户业务类UserSerivceImpl删除一个用户时，需要发布事件，所以要先定义一个UserDeleteEvent事件类&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;com.esc.permission.model.User;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;UserDeleteEvent&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;UserDeleteEvent(User&amp;nbsp;user){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;(user);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;User&amp;nbsp;getUser(){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;(User)&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;.getSource();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;下面是UserSerivceImpl类删除用户的方法模拟&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;deleteUser(String&amp;nbsp;id){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//先发布删除事件&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;publishEvent(&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;UserDeleteEvent(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;User(id)));&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//再把用户删除&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;userDao.deleteUser(id);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;假如有一个OtherServiceImpl业务类需要接收用户删除事件并做一些处理，&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;OtherServiceImpl&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;AbstractBaseService&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;IBaseDAO&amp;nbsp;otherDao;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;重写父类的方法，处理用户删除事件&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;protected&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;onBaseEvent(BaseEvent&amp;nbsp;baseEvent){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;(baseEvent&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;instanceof&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;UserDeleteEvent){&lt;/span&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//如果是用户删除事件&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;otherDao.deleteOtherData(((User)baseEvent.getSource()).getId());&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 到此，所有逻辑就完了，用户业务类中根本不需要知道谁将会处理此事件，所以完全与其它模块解偶了。&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这里用了一个偷懒的方法，那就是在业务类的顶层接口IBaseService中实现了ApplicationListener接口，这样其实所有具体业务类都参与了所有事件的处理，即使是那些根本不需要监听事件的业务类。对于所有根本不需要监听事件的业务类，事件发生时就调用其父类空方法onBaseEvent，这里有一点性能浪费，如果改进？不要在顶层接口IBaseService中实现ApplicationListener接口，而是在具体的需要监听事件的业务类中实现此接口，但是这样还是有一点缺陷，那就是此具体业务类还是会监听到它不关心的事件，不论是用户删除事件还是用户修改事件，没办法，有得必有失，想要方便，肯定会有所牺牲。&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring 自定义事件处理机制</title>
      <link>https://helao.net/2011/81.html</link>
      <pubDate>2011-01-20 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;span style=&#34;color: red;&#34;&gt;自定义的事件监听与处理框架。&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;如果只想监听到自已所关心的事件呢，那么就要自已实现一套事件处理的小框架了：&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 首先重新定义事件监听器接口，不再使用SPRING提供的ApplicationListener接口：&lt;/p&gt; &lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;java.util.List;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/&lt;strong&gt;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&lt;em&gt;&amp;nbsp;事件处理接口，实现此接口并且getEventClasses方法的返回结果条数大于0，方可处理对应的事件&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&lt;/em&gt;/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;interface&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;IBaseEventListener&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;&amp;nbsp;事件处理的方法&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/em&gt;/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;onBaseEvent(BaseEvent&amp;nbsp;event);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/&lt;strong&gt;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;&amp;nbsp;所要处理的事件类型&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/em&gt;/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;List&amp;lt;Class&amp;lt;?&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent&amp;gt;&amp;gt;&amp;nbsp;getEventClasses();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这个接口比SPRING的事件接口多了一个方法。因为SPRING原来做法是只要实现了它提供的接口，任何事件发生时都会得到调用，这种做法是很方便使用的，这里沿用了这种思路。多出的那个方法作用是描述本类处理哪些事件。这时我需要一个类，这个类要在系统启动时把所有实现此接口的业务类找出来，归好类，以便事件发生时进行精确调用，并且提供事件发布事件的静态方法，这样我们才能知道事件在何时发生了。好，下面就来编写这个类&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&lt;em&gt;&amp;nbsp;事件处理相关操作工具类&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&lt;/em&gt;/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;EventController&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/&lt;strong&gt;&amp;nbsp;KEY：事件类的类名，值：所有监听此事件的处理类实例&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;Map&amp;lt;String,List&amp;lt;IBaseEventListener&amp;gt;&amp;gt;&amp;nbsp;listeners&amp;nbsp;=&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;LinkedHashMap&amp;lt;String,&amp;nbsp;List&amp;lt;IBaseEventListener&amp;gt;&amp;gt;();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;EventController(){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//no&amp;nbsp;instance&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;&amp;nbsp;扫瞄所有bean,进行事件监听（业务类按事件类型归类），此方法要在系统启动完后立即调用&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/em&gt;&amp;nbsp;此方法大概过程是&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;&amp;nbsp;1、从SPRING中找出所实现了IBaseEventListener的具体业务类实例&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/em&gt;&amp;nbsp;2、把这些实例归类装进MAP变量listeners中，此MAP变量的结构是：&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;&amp;nbsp;&amp;quot;UserDeleteEvent.class&amp;quot;,{ortherServiceImpl,xxxServiceImpl,&amp;hellip;}&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/em&gt;&amp;nbsp;&amp;quot;UserUpdateEvent.class&amp;quot;,{yyyServiceImpl,zzzServiceImpl,&amp;hellip;}&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;&amp;nbsp;key,valueList&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/em&gt;/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;initBaseEventListener(){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//从SPRING中得到实现了某接口的业务类&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Map&amp;lt;String,IBaseEventListener&amp;gt;&amp;nbsp;beans&amp;nbsp;=&amp;nbsp;ContextLoader.getCurrentWebApplicationContext().getBeansOfType(IBaseEventListener.&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;(beans==&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;||&amp;nbsp;beans.size()==&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;color: #c00000;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//下面循环进行归类&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Collection&amp;lt;IBaseEventListener&amp;gt;&amp;nbsp;services&amp;nbsp;=&amp;nbsp;beans.values();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;(IBaseEventListener&amp;nbsp;service&amp;nbsp;:&amp;nbsp;services)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&amp;lt;Class&amp;lt;?&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent&amp;gt;&amp;gt;&amp;nbsp;eventClasses&amp;nbsp;=&amp;nbsp;service.getEventClasses();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;(eventClasses==&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;||&amp;nbsp;eventClasses.size()==&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;color: #c00000;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;color: #c00000;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;eventClasses.size();&amp;nbsp;i++)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&amp;lt;IBaseEventListener&amp;gt;&amp;nbsp;list&amp;nbsp;=&amp;nbsp;listeners.get(eventClasses.get(i).getName());&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;(list==&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list&amp;nbsp;=&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;ArrayList&amp;lt;IBaseEventListener&amp;gt;();&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;listeners.put(eventClasses.get(i).getName(),&amp;nbsp;list);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list.add(service);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;(list.contains(service)){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list.add(service);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/&lt;strong&gt;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;&amp;nbsp;发布事件的静态方法&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/em&gt;/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;publishEvent(BaseEvent&amp;nbsp;event){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//根据实际事件名称，从listeners中找出监听了此事件的业务类，调用之&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&amp;lt;IBaseEventListener&amp;gt;&amp;nbsp;list&amp;nbsp;=&amp;nbsp;listeners.get(event.getClass().getName());&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;(list!=&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;list.size()&amp;gt;&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;color: #c00000;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;(IBaseEventListener&amp;nbsp;listener&amp;nbsp;:&amp;nbsp;list)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//此处不能捕捉异常，因为任何一个处理类实例出错都应该全部回滚&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;listener.onBaseEvent(event);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 接着重新定义事件类本身，此类也不再继承SPRING的ApplicationEvent类，其它基本还和原来一样。&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;Object&amp;nbsp;source;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent(Object&amp;nbsp;source)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;.source&amp;nbsp;=&amp;nbsp;source;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;Object&amp;nbsp;getSource()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;source;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;&lt;br /&gt;业务类顶层接改而继承自已的事件接口&amp;nbsp;&lt;br /&gt;&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;  &lt;div class=&#34;bar&#34;&gt;   &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;   Java代码&amp;nbsp;    &lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; width=&#34;14&#34; height=&#34;15&#34;&gt; &lt;param name=&#34;src&#34; /&gt; &lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;&lt;/object&gt;   &lt;/div&gt;  &lt;/div&gt;  &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&lt;em&gt;&amp;nbsp;业务层顶层接口&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&lt;/em&gt;/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;interface&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;IBaseService&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;IBaseEventListener{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;   &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;  &lt;/ol&gt; &lt;/div&gt; &lt;p&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt; &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring 自定义事件 处理机制 2</title>
      <link>https://helao.net/2011/80.html</link>
      <pubDate>2011-01-20 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;&#34;&gt;在SERVICE的抽象类中去掉onApplicationEvent方法，不需要了，改写发布事件的方法，修改后变成这样&amp;nbsp;&lt;br /&gt;  &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;    &lt;div class=&#34;bar&#34;&gt;     &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;     Java代码&amp;nbsp;     &lt;embed quality=&#34;high&#34; type=&#34;application/x-shockwave-flash&#34; pluginspage=&#34;http://www.macromedia.com/go/getflashplayer&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;     &lt;/div&gt;    &lt;/div&gt;    &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;org.springframework.context.ApplicationEvent;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;*&amp;nbsp;实现顶层接口的抽象类&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;abstract&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;AbstractBaseService&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;implements&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;IBaseService&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;发布事件&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;protected&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;publishEvent(BaseEvent&amp;nbsp;event)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//使用自已事件工具类发布事件&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EventController.publishEvent(event);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;默认实现处理事件的方法&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;onBaseEvent(BaseEvent&amp;nbsp;event)&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;注意虽然也是在顶层接口中都实现了事件监听，但是只有这个方法有返回值时，才真正的会被调用&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;List&amp;lt;Class&amp;lt;?&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent&amp;gt;&amp;gt;&amp;nbsp;getEventClasses(){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;    &lt;/ol&gt;   &lt;/div&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 到此框架就完成了，UserServiceImpl删除用户时发布事件的代码还和原来一样，不需要改变，只是监听类要变一下，不再实现ApplicationListener接口，改而实现IBaseEventListener接口，不过不需要再具体类中实现，因为已经在顶层接口中继承了，代码&amp;nbsp;&lt;br /&gt;  &lt;div class=&#34;dp-highlighter&#34; style=&#34;font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; font-size: 12px; background-color: transparent; width: 766px; margin-left: 9px; padding: 1px;&#34;&gt;    &lt;div class=&#34;bar&#34;&gt;     &lt;div class=&#34;tools&#34; style=&#34;text-align: left; color: black; font-weight: bold; padding: 3px; margin: 0px;&#34;&gt;     Java代码&amp;nbsp;     &lt;embed quality=&#34;high&#34; type=&#34;application/x-shockwave-flash&#34; pluginspage=&#34;http://www.macromedia.com/go/getflashplayer&#34; width=&#34;14&#34; height=&#34;15&#34; src=&#34;http://www.iteye.com/javascripts/syntaxhighlighter/clipboard_new.swf&#34; /&gt;     &lt;/div&gt;    &lt;/div&gt;    &lt;ol class=&#34;dp-j&#34; style=&#34;font-size: 1em; line-height: 1.4em; margin-top: 0px; margin-right: 0px; margin-bottom: 1px; margin-left: 0px; padding-top: 2px; padding-right: 0px; padding-bottom: 2px; padding-left: 0px; background-color: #ffffff; color: #2b91af; border: 1px solid #d1d7dc;&#34;&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;OtherServiceImpl&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;AbstractBaseService&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;IBaseDAO&amp;nbsp;otherDao;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;重写父类的方法，处理用户删除事件&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;protected&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;onBaseEvent(BaseEvent&amp;nbsp;baseEvent){&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//如果本类只处理一个事件，这里就不需要再类型判断了&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UserDeleteEvent&amp;nbsp;event&amp;nbsp;=&amp;nbsp;(UserDeleteEvent)baseEvent;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;otherDao.deleteOtherData(event.getSource().getId());&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;/**&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;返回本类所要处理所有事件&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;List&amp;lt;Class&amp;lt;?&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent&amp;gt;&amp;gt;&amp;nbsp;getEventClasses()&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;List&amp;lt;Class&amp;lt;?&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent&amp;gt;&amp;gt;&amp;nbsp;eventClasses&amp;nbsp;=&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;ArrayList&amp;lt;Class&amp;lt;?&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;BaseEvent&amp;gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;number&#34; style=&#34;color: #c00000;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;comment&#34; style=&#34;color: #008200;&#34;&gt;//本类只监听用户删除事件&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;eventClasses.add(UserDeleteEvent.&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;keyword&#34; style=&#34;color: #7f0055; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;eventClasses;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;     &lt;li style=&#34;font-size: 1em; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 38px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 10px; border-left-width: 1px; border-left-style: solid; border-left-color: #d1d7dc; background-color: #fafafa; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: black;&#34;&gt;} &amp;nbsp;&lt;/span&gt;&lt;/li&gt;    &lt;/ol&gt;   &lt;/div&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring 事件处理机制的原理分析和新的设想</title>
      <link>https://helao.net/2011/79.html</link>
      <pubDate>2011-01-20 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;spring的事件处理 &amp;nbsp;是这样做的: 所有需要监听或发布事件的service都要实现 applicationListener 接口&lt;/p&gt; &lt;p&gt;如果有事件 发布时，就调用所有的 service的 onEvent()方法。这样处理很方便的，只是觉得不够完美，也会有一些性能浪费。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;自己的设想： 在 仍然需要实现 applicationListener 接口， 在实现类中 用注解标明自己需要监听的事件&lt;/p&gt; &lt;p&gt;这样在初始化的时候就可以将该事件和处理类对应起来， 当有该事件触发时，就去找对应的处理类直接进行处理。&lt;/p&gt; &lt;p&gt;这样比上面那种要精确一些了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>电脑报警音</title>
      <link>https://helao.net/2011/78.html</link>
      <pubDate>2011-01-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;最近好几个朋友的笔记本的显卡都坏了，帮他们查了点资料。记下来，以后用的着&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: Simsun; font-size: 14px;&#34;&gt;当打开电脑时，听到的不是平时清脆的启动声，而是一次又一次重复的奇怪的报警声时，或面对着不同BIOS的报警声，你能不能马上判断出故障的所在呢？虽然现在多家厂商都设计出一些智能化的功能，能将报警声转换成语音或是指示灯等，但是有这种功能的主板的价格比普通的主板要高出许多。将各种BIOS的报警声所对应的故障列出来，希望对大家有所帮助。&amp;nbsp;&amp;nbsp;&lt;br /&gt;Award&amp;nbsp;BIOS：&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短：系统正常启动。&amp;nbsp;&amp;nbsp;&lt;br /&gt;2短：常规错误。解决方法：重设BIOS。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1长1短：RAM或主板出错。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1长2短：显示器或显示卡错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1长3短：键盘控制器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1长9短：主板Flash&amp;nbsp;RAM或EPROM错误，BIOS损坏。&amp;nbsp;&amp;nbsp;&lt;br /&gt;不断地响（长声）：内存条未插紧或损坏。&amp;nbsp;&amp;nbsp;&lt;br /&gt;不停地响：电源、显示器未和显卡连接好。&amp;nbsp;&amp;nbsp;&lt;br /&gt;重复短响：电源有问题。&amp;nbsp;&amp;nbsp;&lt;br /&gt;AWI&amp;nbsp;BIOS：&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短：内存刷新失败。解决方法，更换内存条。&amp;nbsp;&amp;nbsp;&lt;br /&gt;2短：内存ECC校验错误。解决方法：进入CMOS设置，将ECC校验关闭。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3短：系统基本内存（第1个64KB）检查失败。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短：系统时钟出错。&amp;nbsp;&amp;nbsp;&lt;br /&gt;5短：CPU错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;6短：键盘控制器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;7短：系统实模式错误，不能切换到保护模式。&amp;nbsp;&amp;nbsp;&lt;br /&gt;8短：显示内存错误。注：显卡内存简称显存。&amp;nbsp;&amp;nbsp;&lt;br /&gt;9短：ROM&amp;nbsp;BIOS检验和错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1长3短：内存错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1长8短：显示测试错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;Phoenix&amp;nbsp;BIOS&amp;nbsp;（以前的老板上有许多POENIX的，现在已经被AWARD收购了）&amp;nbsp;&lt;br /&gt;1短：系统启动正常。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短1短1短：系统加电自检初始化失败。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短1短2短：主板错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短1短3短：CMOS或电池错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短1短4短：ROM&amp;nbsp;BIOS校验失败。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短2短1短：系统时钟错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短2短2短：DMA初始化失败。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短2短3短：DMA页寄存器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短3短1短：RAM刷新错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短3短2短：基本内存错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短3短3短：基本内存错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短4短1短：基本内存地址线错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短4短2短：基本内存校验错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短4短3短：EISA时序器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短4短4短：EASA&amp;nbsp;NMI口错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;2短1短2短到2短4短4短（即所有开始为2短的声音的组合）：基本内存错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3短1短1短：从DMA寄存器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3短1短2短：主DMA寄存器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3短1短3短：主中断处理寄存器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3短1短4短：从中断处理寄存器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3短2短4短：键盘控制器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3短3短4短：显示卡内存错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3短4短2短：显示错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3短4短3短：未发现显示只读存储器。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短2短1短：时钟错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短2短2短：关机错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短2短3短：A20门错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短2短4短：保护模式中断错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短3短1短：内存错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短3短3短：时钟2错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短3短4短：实时钟错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短4短1短：串行口错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短4短2短：并行口错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;4短4短3短：数字协处理器错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;兼容BIOS:&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短：系统正常。&amp;nbsp;&amp;nbsp;&lt;br /&gt;2短：系统加电自检（POST）失败。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1长：电源错误，如果无显示，则为显示卡错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1长1短：主板错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1长2短：显卡错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;1短1短1短：电源错误。&amp;nbsp;&amp;nbsp;&lt;br /&gt;3长1短：键盘错误。&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>gae 数据存储区说明 2</title>
      <link>https://helao.net/2011/76.html</link>
      <pubDate>2011-01-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt;&lt;span style=&#34;font-family: Helvetica, Arial, sans-serif; font-size: small;&#34;&gt; &lt;/span&gt;&lt;/p&gt; &lt;h2 id=&#34;Serializable_Objects&#34;&gt;Serializable 对象&lt;/h2&gt; &lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;字段值可以包含一个 Serializable 类的实例，将该实例的序列化值存储在 Blob 类型的单个属性值中。要告知 JDO 序列化该值，该字段需要使用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;@Persistent(serialized=true)&lt;/code&gt;&amp;nbsp;批注。Blob 值未被编入索引，且无法在过滤条件或排序顺序中使用。&lt;/p&gt; &lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;以下是一个简单的 Serializable 类示例，它代表一个文件，其中包括文件内容、文件名和 MIME 类型。这不是一个 JDO 数据类，因此没有持久批注。&lt;/p&gt; &lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; java&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Serializable&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;DownloadableFile&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;implements&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Serializable&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; content&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; filename&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; mimeType&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// &amp;hellip; accessors &amp;hellip;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt; &lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;要将 Serializable 类的实例作为 Blob 值存储在属性中，请声明一个类型为该类的字段，并使用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;@Persistent(serialized = &amp;quot;true&amp;quot;)&lt;/code&gt;&amp;nbsp;批注：&lt;/p&gt; &lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Persistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;DownloadableFile&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// &amp;hellip;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@Persistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;serialized &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;DownloadableFile&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; file&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt; &lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;&lt;span style=&#34;color: #000000; font-family: Helvetica, Arial, sans-serif; line-height: normal; white-space: normal; font-size: small;&#34;&gt;&lt;h2 id=&#34;Child_Objects_and_Relationships&#34;&gt;&lt;/h2&gt;&lt;h2 id=&#34;Child_Objects_and_Relationships&#34;&gt;子对象和关系&lt;/h2&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;作为&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;@PersistenceCapable&lt;/code&gt;&amp;nbsp;类的实例的字段值在两个对象之间创建自有的一对一关系。作为此类引用的集合的字段创建自有的一对多关系。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;&lt;strong&gt;重要信息：&lt;/strong&gt;自有的关系具有事务、实体组和级联删除的隐含意义。有关详细信息，请参阅&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/transactions.html&#34;&gt;事务&lt;/a&gt;和&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/relationships.html&#34;&gt;关系&lt;/a&gt;。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt;&lt;h2 id=&#34;Embedded_Classes&#34;&gt;嵌入类&lt;/h2&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;通过嵌入类，您可以使用类来建模字段值，无需创建新的数据存储区实体并形成关系。该对象值的字段直接存储在含有对象的数据存储区实体中。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;任何&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;@PersistenceCapable&lt;/code&gt;&amp;nbsp;数据类都可用作另一个数据类中的嵌入对象。类的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;@Persistent&lt;/code&gt;&amp;nbsp;字段嵌入到对象中。如果让类嵌入&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;@EmbeddedOnly&lt;/code&gt;&amp;nbsp;批注，则该类只能用作嵌入类。嵌入类不需要主键字段，因为它不作为单独的实体存储。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;嵌入类的字段作为实体上的属性存储，使用每个字段的名称以及对应属性的名称。如果类型为嵌入类的对象上有多个字段，则必须重命名这些字段以使它们不会互相冲突。您可以使用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;@Embedded&lt;/code&gt;&amp;nbsp;批注的参数来指定新的字段名称。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;类似地，对象上的字段不可以使用与嵌入类的字段冲突的名称，除非重命名嵌入的字段。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;因为嵌入类的持久属性存储在与其他字段相同的实体上，所以您可以在 JDOQL 查询过滤条件和排序顺序中使用嵌入类的持久字段。您可以使用外部字段的名称、点 (&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;.&lt;/code&gt;) 以及嵌入字段的名称来引用嵌入字段。不管是否使用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;@Column&lt;/code&gt;&amp;nbsp;批注更改了嵌入字段的属性名称，这都同样适用。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt;&lt;h2 id=&#34;Collections&#34;&gt;集合&lt;/h2&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;一个数据存储区属性可以具有多个值。在 JDO 中，这是通过集合类型的单一字段来表示的，其中集合为核心值类型之一或 Serializable 类。支持以下集合类型：&lt;/p&gt;   &lt;ul style=&#34;margin-top: 0.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 15px; line-height: 16px; padding: 0px;&#34;&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.ArrayList&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.HashSet&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.LinkedHashSet&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.LinkedList&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.List&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.Set&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.SortedSet&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.Stack&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.TreeSet&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.util.Vector&amp;lt;&amp;hellip;&amp;gt;&lt;/code&gt;&lt;/li&gt;   &lt;/ul&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;如果某个字段声明为 List，则数据存储区返回的对象将具有 ArrayList 值。如果某个字段声明为 Set，则数据存储区返回 HashSet。如果某个字段声明为 SortedSet，则数据存储区返回 TreeSet。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt;&lt;h2 id=&#34;Object_Fields_and_Entity_Properties&#34;&gt;对象字段和实体属性&lt;/h2&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;App Engine 数据存储区区分不具有指定属性的实体和该属性值为&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;null&lt;/code&gt;&amp;nbsp;的实体。JDO 不支持这种区分：对象的每个字段都有一个值，可能是&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;null&lt;/code&gt;。如果将某个具有可设为 null 的值类型（不同于&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;int&lt;/code&gt;&amp;nbsp;或&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;boolean&lt;/code&gt;&amp;nbsp;之类的内置类型）的字段设置为&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;null&lt;/code&gt;，则在保存对象时，所得实体会将该属性设置为 null 值。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;如果将一个数据存储区实体载入对象中，对于该对象中的某一个字段，实体中没有对应的属性，且该字段是可设为 null 的单值类型，则该字段将设置为&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;null&lt;/code&gt;。在将该对象保存回数据存储区时，&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;null&lt;/code&gt;&amp;nbsp;属性将在数据存储区中被设置为 null 值。如果该字段不是可设为 null 的值类型，则载入没有对应属性的实体将引发异常。如果实体是从用于重新创建实例的相同的 JDO 类创建的，则这种情况不会发生，但是如果 JDO 类发生变化，或者实体是使用低级别 API 而非 JDO 创建的，则会出现这种情况。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;如果某个字段的类型是核心数据类型的集合或 Serializable 类，而实体上的属性没有值，则会在数据存储区中将该属性设置为单一 null 值来表示该空集合。如果该字段的类型是数组类型，则会为其分配 0 个元素的数组。如果已载入对象而属性没有值，则将为该字段分配相应类型的空集合。在内部，数据存储区已知空集合与包含一个 null 值的集合之间的区别。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;如果实体具有一个在对象中没有对应字段的属性，则无法从该对象访问该属性。如果将对象保存回数据存储区，将删除这个额外的属性。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;如果某个实体具有一个值类型与对象中对应字段的类型不同的属性，则 JDO 会尝试将该值转换成字段类型。如果无法将该值转换成字段类型，则 JDO 将引发 ClassCastException。在值为数字（长整型或双精度浮点型）的情况下，将对该值进行转换 (convert)，而不是对类型进行转换 (cast)。如果数字属性值超出字段类型的表示范围，则转换将溢出，而不会引发异常。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt;&lt;h1 class=&#34;page_title&#34;&gt;创建、获取和删除数据&lt;/h1&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;将 JDO 数据对象保存到数据存储区只需调用 PersistenceManager 实例的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;makePersistent()&lt;/code&gt;&amp;nbsp;方法。App Engine JDO 实现使用对象的主键字段来跟踪哪个数据存储区实体与该数据对象对应，并可以为新对象自动生成键。您可以使用键快速地检索实体，并从已知值（例如帐户 ID）构造键。&lt;/p&gt;   &lt;ul style=&#34;margin-top: 0.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 15px; line-height: 16px; padding: 0px;&#34;&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/creatinggettinganddeletingdata.html#Making_Objects_Persistent&#34;&gt;使对象持久&lt;/a&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/creatinggettinganddeletingdata.html#Keys&#34;&gt;键&lt;/a&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/creatinggettinganddeletingdata.html#Creating_and_Using_Keys&#34;&gt;创建和使用键&lt;/a&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/creatinggettinganddeletingdata.html#Getting_an_Object_By_Key&#34;&gt;通过键获取对象&lt;/a&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/creatinggettinganddeletingdata.html#Updating_an_Object&#34;&gt;更新对象&lt;/a&gt;&lt;/li&gt;    &lt;li style=&#34;margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding: 0px;&#34;&gt;&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/creatinggettinganddeletingdata.html#Deleting_an_Object&#34;&gt;删除对象&lt;/a&gt;&lt;/li&gt;   &lt;/ul&gt;&lt;h2 id=&#34;Making_Objects_Persistent&#34;&gt;使对象持久&lt;/h2&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;要将简单数据对象存储到数据存储区中，您可以调用 PersistenceManager 的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;makePersistent()&lt;/code&gt;&amp;nbsp;方法，将实例传递给该方法。&lt;/p&gt;&lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;PersistenceManager&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; pm &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; PMF&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;getPersistenceManager&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; e &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;Alfred&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;Smith&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pm&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;makePersistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;finally&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pm&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;对&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;makePersistent()&lt;/code&gt;&amp;nbsp;的调用是同步的，直到保存对象并更新索引后才会返回。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;要在 JDO 中保存多个对象，请对一组对象调用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;makePersistentAll(&amp;hellip;)&lt;/code&gt;&amp;nbsp;方法。在目前的版本中，该方法的实现类似对&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;makePersistent()&lt;/code&gt;&amp;nbsp;的一系列调用。在未来的版本中，该方法将对数据存储区执行更高效的批量调用。&lt;/p&gt;&lt;p class=&#34;note&#34; style=&#34;padding-top: 0.2em; padding-right: 0.5em; padding-bottom: 0.2em; padding-left: 0.9em; margin-top: 1em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; line-height: 16px; background-color: #efefef; border-top-width: 1px; border-top-style: solid; border-bottom-width: 1px; border-bottom-style: solid; border-color: #bbbbbb;&#34;&gt;&lt;strong&gt;注意：&lt;/strong&gt;如果有任何数据对象的持久字段是对其他持久数据对象的引用，且任何这些对象自加载后从未保存过或已发生更改，则引用的对象也将保存到数据存储区。请参阅&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/relationships.html&#34;&gt;关系&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;Keys&#34;&gt;键&lt;/h2&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;每个实体都具有一个在 App Engine 的所有实体中唯一的键。一个完整的键包含若干条信息，其中包括应用程序 ID、类型和实体 ID。（键也包含有关实体组的信息，有关详细信息，请参阅&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/transactions.html&#34;&gt;事务&lt;/a&gt;。）&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;对象的键存储在实例的某一个字段中。您可以使用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;@PrimaryKey&lt;/code&gt;&amp;nbsp;批注来标识主键字段。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;应用程序可在创建对象时以字符串形式提供键的 ID 部分，也可以允许数据存储区自动生成数字 ID。完整的键在数据存储区的所有实体中必须是唯一的。换句话说，在类型相同且具有相同父实体组（如果有）的所有对象中，一个对象必须具有唯一的 ID。您可以使用字段类型和批注来选择所需的键的行为。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;如果类用作关系中的“子”类，则键字段必须为能够代表父实体组的类型：Key 实例或编码为字符串的键值。有关实体组的详细信息，请参阅&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/transactions.html&#34;&gt;事务&lt;/a&gt;；有关关系的详细信息，请参阅&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/relationships.html&#34;&gt;关系&lt;/a&gt;。&lt;/p&gt;&lt;p class=&#34;note&#34; style=&#34;padding-top: 0.2em; padding-right: 0.5em; padding-bottom: 0.2em; padding-left: 0.9em; margin-top: 1em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; line-height: 16px; background-color: #efefef; border-top-width: 1px; border-top-style: solid; border-bottom-width: 1px; border-bottom-style: solid; border-color: #bbbbbb;&#34;&gt;&lt;strong&gt;提示：&lt;/strong&gt;如果应用程序创建一个新对象，并为其指定了与类型相同（且具有相同父实体组）的另一对象相同的字符串 ID，则保存该新对象时将覆盖数据存储区中的另一对象。要在创建新对象前检测字符串 ID 是否已经被使用，您可以使用事务尝试获取具有指定 ID 的实体，如果该实体不存在，则您可以继续创建。请参阅&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/transactions.html&#34;&gt;事务&lt;/a&gt;。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;主键字段有 4 种类型：&lt;/p&gt;   &lt;dl style=&#34;line-height: 16px; padding: 0px; margin: 0px;&#34;&gt;    &lt;dt style=&#34;font-weight: bold; margin-top: 0.75em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px;&#34;&gt;     长整型    &lt;/dt&gt;    &lt;dd style=&#34;margin-top: 0.4em; margin-right: 0px; margin-bottom: 0px; margin-left: 2em; font-weight: normal; padding: 0px;&#34;&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;长整型 (&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.lang.Long&lt;/code&gt;)：由数据存储区自动生成的实体 ID。对于没有父实体组、其 ID 应由数据存储区自动生成的对象，请使用此类型。实例的长整型键字段在该实例保存时填充。&lt;/p&gt;     &lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;IdGeneratorStrategy&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Persistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;PrimaryKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// &amp;hellip;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@PrimaryKey&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@Persistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;valueStrategy &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;IdGeneratorStrategy&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;IDENTITY&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; id&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;    &lt;/dd&gt;    &lt;dt style=&#34;font-weight: bold; margin-top: 0.75em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px;&#34;&gt;     未编码字符串    &lt;/dt&gt;    &lt;dd style=&#34;margin-top: 0.4em; margin-right: 0px; margin-bottom: 0px; margin-left: 2em; font-weight: normal; padding: 0px;&#34;&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;一个字符串 (&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;java.lang.String&lt;/code&gt;)：对象创建时由应用程序提供的实体 ID（“键名”）。对于没有父实体组、其 ID 应由应用程序提供的对象，请使用此类型。应用程序在保存前将此域设置为所需的 ID。&lt;/p&gt;     &lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;PrimaryKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// &amp;hellip;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@PrimaryKey&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; name&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;    &lt;/dd&gt;    &lt;dt style=&#34;font-weight: bold; margin-top: 0.75em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px;&#34;&gt;     键    &lt;/dt&gt;    &lt;dd style=&#34;margin-top: 0.4em; margin-right: 0px; margin-bottom: 0px; margin-left: 2em; font-weight: normal; padding: 0px;&#34;&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;Key 实例 (&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;com.google.appengine.api.datastore.Key&lt;/code&gt;)。键值包括父实体组（如果有）的键以及应用程序分配的字符串 ID 或系统生成的数字 ID。要创建带应用程序分配的字符串 ID 的对象，请创建带有该 ID 的键值并将字段设置为该值。要创建带系统分配的数字 ID 的对象，请将键字段留为 null。有关如何使用父实体组的信息，请参阅&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/transactions.html&#34;&gt;事务&lt;/a&gt;。&lt;/p&gt;     &lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;IdGeneratorStrategy&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Persistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;PrimaryKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; com&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;google&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;appengine&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;datastore&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// &amp;hellip;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@PrimaryKey&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@Persistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;valueStrategy &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;IdGeneratorStrategy&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;IDENTITY&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; setKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;key &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;应用程序可以使用 KeyFactory 类创建 Key 实例：&lt;/p&gt;     &lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; com&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;google&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;appengine&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;datastore&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; com&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;google&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;appengine&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;datastore&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;KeyFactory&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// &amp;hellip;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; key &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;KeyFactory&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;createKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;getSimpleName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;Alfred.Smith@example.com&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; e &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;setKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pm&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;makePersistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;);&lt;/span&gt;&lt;/pre&gt;    &lt;/dd&gt;    &lt;dt style=&#34;font-weight: bold; margin-top: 0.75em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px;&#34;&gt;     编码字符串形式的键    &lt;/dt&gt;    &lt;dd style=&#34;margin-top: 0.4em; margin-right: 0px; margin-bottom: 0px; margin-left: 2em; font-weight: normal; padding: 0px;&#34;&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;与键类似，但值是键的编码字符串形式。编码字符串键允许您以便携方式编写应用程序且仍可以利用 App Engine 数据存储区实体组。&lt;/p&gt;     &lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Extension&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;IdGeneratorStrategy&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Persistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; javax&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;jdo&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;PrimaryKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; com&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;google&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;appengine&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;datastore&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// &amp;hellip;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@PrimaryKey&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@Persistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;valueStrategy &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;IdGeneratorStrategy&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;IDENTITY&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@Extension&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;vendorName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;datanucleus&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;gae.encoded-pk&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; value&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; encodedKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;应用程序可以在保存前使用带名称的键填充该值，或将它留为 null。如果编码的键字段为 null，则将在保存对象时使用系统生成的键填充该字段。&lt;/p&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;Key 实例和编码字符串表示可以通过 KeyFactory 方法&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;keyToString()&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;stringToKey()&lt;/code&gt;&amp;nbsp;进行相互转换。&lt;/p&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;当使用编码键字符串时，您可以通过一个额外的字段提供对对象的字符串 ID 或数字 ID 的访问：&lt;/p&gt;     &lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@PrimaryKey&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@Persistent&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;valueStrategy &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;IdGeneratorStrategy&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;IDENTITY&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@Extension&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;vendorName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;datanucleus&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;gae.encoded-pk&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; value&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; encodedKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@Extension&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;vendorName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;datanucleus&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;gae.pk-name&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; value&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; keyName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// OR:&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;@Extension&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;vendorName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;datanucleus&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;gae.pk-id&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; value&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; keyId&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;&amp;quot;gae.pk-name&amp;quot;&lt;/code&gt;&amp;nbsp;字段可以在保存对象前设置为键名称。保存对象时，将使用包括键名称的完整键填充编码键字段。其类型必须为 String。&lt;/p&gt;     &lt;p style=&#34;padding-top: 0.5em; padding-right: 0px; padding-bottom: 0.6em; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;&amp;quot;gae.pk-id&amp;quot;&lt;/code&gt;&amp;nbsp;字段在对象保存时填充，且无法修改。其类型必须为 Long。&lt;/p&gt;    &lt;/dd&gt;   &lt;/dl&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;创建带生成的键（使用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;valueStrategy = IdGeneratorStrategy.IDENTITY&lt;/code&gt;&amp;nbsp;的键字段）的新对象时，其键值初始为&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;null&lt;/code&gt;。键字段在对象写入数据存储区时填充。如果使用事务，则对象在事务提交时写入。否则，如果创建对象，则对象在调用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;makePersistent()&lt;/code&gt;&amp;nbsp;方法时写入；如果更新对象，则对象在调用 PersistenceManager 实例的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;close()&lt;/code&gt;&amp;nbsp;方法时写入。&lt;/p&gt;&lt;h2 id=&#34;Creating_and_Using_Keys&#34;&gt;创建和使用键&lt;/h2&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;如果应用程序已知实体的完整键的所有元素，则应用程序可以在没有对象的情况下创建对应的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;Key&lt;/code&gt;&amp;nbsp;对象。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;对于没有父实体组的实体的键，您可以使用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;KeyFactory&lt;/code&gt;&amp;nbsp;类的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;createKey()&lt;/code&gt;&amp;nbsp;静态方法。该方法采用类型（类的简单名称）和应用程序分配的字符串 ID 或系统分配的数字 ID，并返回&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;Key&lt;/code&gt;&amp;nbsp;对象。例如，要重新创建键名称为&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;&amp;quot;Alfred.Smith@example.com&amp;quot;&lt;/code&gt;&amp;nbsp;的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;&amp;quot;Employee&amp;quot;&lt;/code&gt;&amp;nbsp;类型的实体的键（无父实体组）：&lt;/p&gt;&lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; com&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;google&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;appengine&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;datastore&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; com&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;google&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;appengine&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;datastore&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;KeyFactory&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// &amp;hellip;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; k &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;KeyFactory&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;createKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;getSimpleName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;Alfred.Smith@example.com&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;);&lt;/span&gt;&lt;/pre&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;要重新创建系统分配的数字 ID 为&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;52234&lt;/code&gt;&amp;nbsp;的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;&amp;quot;Employee&amp;quot;&lt;/code&gt;&amp;nbsp;类型的实体的键（无父实体组）：&lt;/p&gt;&lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; k &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;KeyFactory&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;createKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;getSimpleName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;52234&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;);&lt;/span&gt;&lt;/pre&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;可以使用 KeyFactory 类的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;keyToString()&lt;/code&gt;&amp;nbsp;方法将键转换为字符串表示，使用&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;stringToKey()&lt;/code&gt;&amp;nbsp;方法将字符串表示转换为键。（请注意，这与 Key 类的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;toString()&lt;/code&gt;&amp;nbsp;方法不同，该方法返回适用于调试的用户可读的值。）&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;对于具有父实体组的实体的键，您可以使用 KeyFactory.Builder 类：&lt;/p&gt;&lt;pre class=&#34;prettyprint&#34;&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; com&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;google&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;appengine&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;datastore&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; com&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;google&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;appengine&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;datastore&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;KeyFactory&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;com&#34; style=&#34;color: #880000;&#34;&gt;// &amp;hellip;&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; k &lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;KeyFactory&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Builder&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;getSimpleName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;lit&#34; style=&#34;color: #006666;&#34;&gt;52234&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;addChild&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;typ&#34; style=&#34;color: #660066;&#34;&gt;ExpenseReport&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kwd&#34; style=&#34;color: #000088;&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;getSimpleName&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt; &lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color: #008800;&#34;&gt;&amp;quot;A23Z79&amp;quot;&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;pln&#34; style=&#34;color: #000000;&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;pun&#34; style=&#34;color: #666600;&#34;&gt;();&lt;/span&gt;&lt;/pre&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;Builder 实例的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;addChild()&lt;/code&gt;&amp;nbsp;方法返回 Builder，因此您可以连锁调用以添加键路径的每一个元素。要获取指定 Builder 的完整键值，您可以调用该 Builder 的&amp;nbsp;&lt;code style=&#34;font-family: monospace; color: #007000; font-size: 10pt;&#34;&gt;getKey()&lt;/code&gt;&amp;nbsp;方法。&lt;/p&gt;&lt;p style=&#34;padding-top: 1em; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; line-height: 16px; margin: 0px;&#34;&gt;有关实体组的详细信息，请参阅&lt;a style=&#34;color: #0000cc;&#34; href=&#34;http://code.google.com/intl/zh-CN/appengine/docs/java/datastore/transactions.html&#34;&gt;事务&lt;/a&gt;。&lt;/p&gt;&lt;h2 id=&#34;Getting_an_Object_By_Key&#34;&gt;&lt;br /&gt;&lt;/h2&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>junit 4.4测试</title>
      <link>https://helao.net/2011/69.html</link>
      <pubDate>2011-01-13 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    项目中使用junit4.4，虽然一直在用，但对testcase 的执行细节却不大清楚，我做了一些例子来测试一下&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;white-space:pre;&#34;&gt; JunitTest.java&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;white-space:pre;&#34;&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;private Logger logger = Logger.getLogger(JunitTest.class);&#xA;    public JunitTest() {&#xA;        super(&#34;junit test&#34;);&#xA;        logger.info(&#34;junit test contruct&#34;);&#xA;    }&#xA;    public void setUp() {&#xA;        logger.info(&#34;setUp&#34;);&#xA;    }&#xA;    public void testMethod1() {&#xA;        logger.info(&#34;method1&#34;);&#xA;    }&#xA;    public void testMethod2() {&#xA;        logger.info(&#34;method2&#34;);&#xA;    }&#xA;    @Test&#xA;    public void method3() {&#xA;        logger.info(&#34;annotion method3&#34;);&#xA;    }&#xA;    private void testMethod4() {&#xA;        logger.info(&#34;private method4&#34;);&#xA;    }&#xA;    @Test&#xA;    private void testMethod5() {&#xA;        // error Test method isn&#39;t public&#xA;        logger.info(&#34;annotion private method5&#34;);&#xA;    }&#xA;    public void mthod6() {&#xA;        logger.info(&#34;method6&#34;);&#xA;    }&#xA;    private void mthod7() {&#xA;        logger.info(&#34;method6&#34;);&#xA;    }&#xA;    public void tearDown() {&#xA;        logger.info(&#34;tear down&#34;);&#xA;    }&lt;/pre&gt;&#xA;&lt;br /&gt;&#xA;&lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    日志输出：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-js linenums&#34;&gt;        01-13 10:58:44,439 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.JunitTest.(JunitTest.java:15) junit test contruct&#xA;    01-13 10:58:44,439 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.JunitTest.(JunitTest.java:15) junit test contruct&#xA;    01-13 10:58:44,455 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.JunitTest.setUp(JunitTest.java:18) setUp&#xA;    01-13 10:58:44,455 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.JunitTest.testMethod1(JunitTest.java:21) method&#xA;    01-13 10:58:44,455 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.JunitTest.tearDown(JunitTest.java:45) tear down&#xA;    01-13 10:58:44,455 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.JunitTest.setUp(JunitTest.java:18) setUp&#xA;    01-13 10:58:44,455 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.JunitTest.testMethod2(JunitTest.java:24) method2&#xA;    01-13 10:58:44,455 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.JunitTest.tearDown(JunitTest.java:45) tear down&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    junit执行结果&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    testMethod1 &amp;nbsp; success;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    testMethod2 &amp;nbsp; success;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    warning &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 这个什么错也没有，我又测试了一下 发现是 testMethod4 的问题&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    warning &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 这个报错了， Test Method isn&#39;t public: testMethod5&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    test 3 没有出现 &amp;nbsp;，难道junit4中方法必需要有 test前缀吗，&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    从日志分析：&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    JunitTest &amp;nbsp;执行了 两次 构造函数，这个原因还不知道，需要看具体的执行代码。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    执行每个TestMethod 时 都会 执行一次setUp() 和 tearDown(); 应该是为method清理环境&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    还有 测试方法应该有 test 前缀 ，而且为public&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    乌龙了，确实是junit4的包，不过确实junit3的用法。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面是 junit 4的用法；&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public class Junittest4 {&#xA;    private static Logger logger = Logger.getLogger(Junittest4.class);&#xA;    @Before&#xA;    public void before() {&#xA;        logger.info(&#34;before setUp&#34;);&#xA;    }&#xA;    @After&#xA;    public void after() {&#xA;        logger.info(&#34;After teardown&#34;);&#xA;    }&#xA;    public void testMethod1() {&#xA;        logger.info(&#34;no test annotion public method&#34;);&#xA;    }&#xA;    @Test&#xA;    public void Method2() {&#xA;        logger.info(&#34;test annotion public method&#34;);&#xA;    }&#xA;    @Ignore(&#34;not complete&#34;)&#xA;    @Test&#xA;    public void Method3() {&#xA;        logger.info(&#34;test annotion private method&#34;);&#xA;    }&#xA;    @Test(timeout = 5)&#xA;    public void testMethod4() throws InterruptedException {&#xA;        Thread.sleep(4);&#xA;        logger.info(&#34;test annotion public has test method&#34;);&#xA;    }&#xA;    @Test(timeout = 5)&#xA;    public void testMethod5() throws InterruptedException {&#xA;        Thread.sleep(5);&#xA;        logger.info(&#34;test annotion public has test method&#34;);&#xA;    }&#xA;    @Test(timeout = 5)&#xA;    public void testMethod6() throws InterruptedException {&#xA;        Thread.sleep(6);&#xA;        logger.info(&#34;test annotion public has test method&#34;);&#xA;    }&#xA;}&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    日志输出&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;01-13 11:45:50,502 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.before(Junittest4.java:13) before setUp&#xA;01-13 11:45:50,517 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.Method2(Junittest4.java:24) test annotion public method&#xA;01-13 11:45:50,517 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.after(Junittest4.java:17) After teardown&#xA;01-13 11:45:50,564 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.before(Junittest4.java:13) before setUp&#xA;01-13 11:45:50,580 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.testMethod4(Junittest4.java:34) test annotion public has test method&#xA;01-13 11:45:50,580 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.after(Junittest4.java:17) After teardown&#xA;01-13 11:45:50,580 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.before(Junittest4.java:13) before setUp&#xA;01-13 11:45:50,595 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.after(Junittest4.java:17) After teardown&#xA;01-13 11:45:50,595 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.before(Junittest4.java:13) before setUp&#xA;01-13 11:45:50,611 INFO  test.com.hiksoft.prototype.modules.advancedtemplate.junittest.Junittest4.after(Junittest4.java:17) After teardown&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    测试结果&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    method2 &amp;nbsp;suucess&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    method3 &amp;nbsp;ignore&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    method4 &amp;nbsp;success&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    method5 &amp;nbsp;fail&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    method6 &amp;nbsp;fail&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring 详细配置</title>
      <link>https://helao.net/2011/68.html</link>
      <pubDate>2011-01-13 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: Arial, sans-serif, Helvetica, Tahoma; line-height: 18px;&#34;&gt;PROPAGATION_REQUIRED -- 支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。&amp;nbsp;&lt;br /&gt;PROPAGATION_SUPPORTS -- 支持当前事务，如果当前没有事务，就以非事务方式执行。&amp;nbsp;&lt;br /&gt;PROPAGATION_MANDATORY -- 支持当前事务，如果当前没有事务，就抛出异常。&amp;nbsp;&lt;br /&gt;PROPAGATION_REQUIRES_NEW -- 新建事务，如果当前存在事务，把当前事务挂起。&amp;nbsp;&lt;br /&gt;PROPAGATION_NOT_SUPPORTED -- 以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。&amp;nbsp;&lt;br /&gt;PROPAGATION_NEVER -- 以非事务方式执行，如果当前存在事务，则抛出异常。&amp;nbsp;&lt;br /&gt;PROPAGATION_NESTED -- 如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则进行与PROPAGATION_REQUIRED类似的操作。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; color: #4b4b4b; line-height: 19px;&#34;&gt;   &lt;div class=&#34;postTitle&#34; style=&#34;font-size: 14.7px; font-weight: bold; margin-bottom: 10px;&#34;&gt;   &lt;a id=&#34;viewpost1_TitleUrl&#34; class=&#34;postTitle2&#34; style=&#34;text-decoration: none; color: #1a8bc8;&#34; href=&#34;http://www.blogjava.net/robbie/archive/2009/04/05/264003.html&#34;&gt;Spring事务配置的五种方式&lt;/a&gt;  &lt;/div&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 前段时间对Spring的事务配置做了比较深入的研究，在此之间对Spring的事务配置虽说也配置过，但是一直没有一个清楚的认识。通过这次的学习发觉Spring的事务配置只要把思路理清，还是比较好掌握的。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 总结如下：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Spring配置文件中关于事务配置总是由三个组成部分，分别是DataSource、TransactionManager和代理机制这三部分，无论哪种配置方式，一般变化的只是代理机制这部分。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; DataSource、TransactionManager这两部分只是会根据数据访问方式有所变化，比如使用Hibernate进行数据访问时，DataSource实际为SessionFactory，TransactionManager的实现为HibernateTransactionManager。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 具体如下图：&lt;/p&gt; &lt;p&gt;&lt;a style=&#34;color: #1a8bc8; text-decoration: none;&#34; href=&#34;http://www.blogjava.net/images/blogjava_net/robbie/WindowsLiveWriter/Spring_9C9C/Spring%E4%BA%8B%E5%8A%A1%E9%85%8D%E7%BD%AE%20(2).jpg&#34;&gt;&lt;img style=&#34;&#34; src=&#34;http://www.blogjava.net/images/blogjava_net/robbie/WindowsLiveWriter/Spring_9C9C/Spring%E4%BA%8B%E5%8A%A1%E9%85%8D%E7%BD%AE%20(2)_thumb.jpg&#34; border=&#34;0&#34; alt=&#34;Spring事务配置 (2)&#34; width=&#34;654&#34; height=&#34;378&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 根据代理机制的不同，总结了五种Spring事务的配置方式，配置文件如下：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 第一种方式：每个Bean都有一个代理&lt;/p&gt;   &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; width: 1080px; font-size: 13px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;?&lt;/span&gt;   &lt;span style=&#34;color: #ff00ff;&#34;&gt;xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;?&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;xmlns&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:xsi&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:context&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/context&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:aop&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/aop&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xsi:schemaLocation&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context/spring-context-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configLocation&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;classpath:hibernate.cfg.xml&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configurationClass&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.hibernate.cfg.AnnotationConfiguration&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;定义事务管理器（声明式的事务）&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.HibernateTransactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;配置DAO&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;userDaoTarget&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;com.bluesky.spring.dao.UserDaoImpl&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;userDao&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;配置事务管理器&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;target&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;userDaoTarget&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;proxyInterfaces&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;com.bluesky.spring.dao.GeneratorDao&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;配置事务属性&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionAttributes&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;props&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;prop&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;key&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;*&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;PROPAGATION_REQUIRED&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;prop&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;props&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;/div&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 第二种方式：所有Bean共享一个代理基类&lt;/p&gt;   &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; width: 1080px; font-size: 13px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;?&lt;/span&gt;   &lt;span style=&#34;color: #ff00ff;&#34;&gt;xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;?&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;xmlns&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:xsi&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:context&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/context&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:aop&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/aop&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xsi:schemaLocation&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context/spring-context-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configLocation&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;classpath:hibernate.cfg.xml&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configurationClass&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.hibernate.cfg.AnnotationConfiguration&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;定义事务管理器（声明式的事务）&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.HibernateTransactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionBase&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.transaction.interceptor.TransactionProxyFactoryBean&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; lazy-init&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;true&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;abstract&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;true&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;配置事务管理器&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;配置事务属性&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionAttributes&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;props&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;prop&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;key&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;*&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;PROPAGATION_REQUIRED&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;prop&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;props&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;配置DAO&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;userDaoTarget&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;com.bluesky.spring.dao.UserDaoImpl&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;userDao&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;parent&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionBase&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;target&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;userDaoTarget&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;/div&gt; &lt;p&gt;第三种方式：使用拦截器&lt;/p&gt;   &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; width: 1080px; font-size: 13px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;?&lt;/span&gt;   &lt;span style=&#34;color: #ff00ff;&#34;&gt;xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;?&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;xmlns&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:xsi&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:context&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/context&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:aop&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/aop&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xsi:schemaLocation&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context/spring-context-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configLocation&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;classpath:hibernate.cfg.xml&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configurationClass&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.hibernate.cfg.AnnotationConfiguration&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;定义事务管理器（声明式的事务）&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.HibernateTransactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionInterceptor&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.transaction.interceptor.TransactionInterceptor&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;配置事务属性&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionAttributes&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;props&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;prop&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;key&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;*&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;PROPAGATION_REQUIRED&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;prop&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;props&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;beanNames&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;list&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;*Dao&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;list&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;interceptorNames&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;list&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;transactionInterceptor&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;list&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;配置DAO&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;userDao&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;com.bluesky.spring.dao.UserDaoImpl&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;/div&gt; &lt;p&gt;第四种方式：使用tx标签配置的拦截器&lt;/p&gt;   &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; width: 1080px; font-size: 13px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;?&lt;/span&gt;   &lt;span style=&#34;color: #ff00ff;&#34;&gt;xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;?&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;xmlns&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:xsi&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:context&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/context&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:aop&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/aop&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:tx&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/tx&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xsi:schemaLocation&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context/spring-context-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;context:annotation-config&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;context:component-scan&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;base-package&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;com.bluesky&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configLocation&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;classpath:hibernate.cfg.xml&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configurationClass&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.hibernate.cfg.AnnotationConfiguration&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;定义事务管理器（声明式的事务）&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.HibernateTransactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;tx:advice&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;txAdvice&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;transaction-manager&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;tx:attributes&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;tx:method&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;*&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;propagation&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;REQUIRED&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;tx:attributes&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;tx:advice&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;aop:config&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;aop:pointcut&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;interceptorPointCuts&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; expression&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;execution(* com.bluesky.spring.dao.*.*(..))&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;aop:advisor&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;advice-ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;txAdvice&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; pointcut-ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;interceptorPointCuts&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;aop:config&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;/div&gt; &lt;p&gt;第五种方式：全注解&lt;/p&gt;   &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; width: 1080px; font-size: 13px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;?&lt;/span&gt;   &lt;span style=&#34;color: #ff00ff;&#34;&gt;xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;?&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;xmlns&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:xsi&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:context&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/context&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:aop&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/aop&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmlns:tx&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/tx&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; xsi:schemaLocation&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;http://www.springframework.org/schema/beans&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/context/spring-context-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;context:annotation-config&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;context:component-scan&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;base-package&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;com.bluesky&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;tx:annotation-driven&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;transaction-manager&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configLocation&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;classpath:hibernate.cfg.xml&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;configurationClass&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;value&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.hibernate.cfg.AnnotationConfiguration&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;lt;!--&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;&amp;nbsp;定义事务管理器（声明式的事务）&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #008000;&#34;&gt;--&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;transactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; class&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;org.springframework.orm.hibernate3.HibernateTransactionManager&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;property&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;name&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;ref&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;=&amp;quot;sessionFactory&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;/&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;bean&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;lt;/&lt;/span&gt;   &lt;span style=&#34;color: #800000;&#34;&gt;beans&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;/div&gt; &lt;p&gt;此时在DAO上需加上@Transactional注解，如下：&lt;/p&gt;   &lt;div style=&#34;padding-top: 4px; padding-right: 5px; padding-bottom: 4px; padding-left: 4px; background-color: #eeeeee; width: 1080px; font-size: 13px; border: 1px solid #cccccc;&#34;&gt;    &lt;span style=&#34;color: #0000ff;&#34;&gt;package&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;com.bluesky.spring.dao;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;import&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;java.util.List;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;import&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;org.hibernate.SessionFactory;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;import&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;org.springframework.beans.factory.annotation.Autowired;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;import&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;org.springframework.orm.hibernate3.support.HibernateDaoSupport;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;import&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;org.springframework.stereotype.Component;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;import&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;com.bluesky.spring.domain.User;&lt;br /&gt;&lt;br /&gt;@Transactional&lt;br /&gt;@Component(&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;userDao&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;)&lt;br /&gt;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;public&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;class&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;UserDaoImpl&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;extends&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;HibernateDaoSupport&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;implements&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;UserDao {&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;public&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;List&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;lt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;User&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;listUsers() {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;return&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;nbsp;&lt;/span&gt;   &lt;span style=&#34;color: #0000ff;&#34;&gt;this&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;.getSession().createQuery(&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;from User&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;&amp;quot;&lt;/span&gt;   &lt;span style=&#34;color: #000000;&#34;&gt;).list();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img style=&#34;&#34; src=&#34;http://www.blogjava.net/Images/dot.gif&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;}&lt;/span&gt;   &lt;/div&gt;   &lt;div&gt;   &lt;br /&gt;  &lt;/div&gt;   &lt;div&gt;   转载&amp;nbsp;   &lt;span style=&#34;color: #000000; font-family: Verdana, Arial, Helvetica, sans-serif; line-height: normal; font-size: 12px;&#34;&gt;&lt;a href=&#34;http://www.blogjava.net/robbie/archive/2009/04/05/264003.html&#34;&gt;http://www.blogjava.net/robbie/archive/2009/04/05/264003.html&lt;/a&gt;&lt;/span&gt;   &lt;/div&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring 事务 不能rollback的问题终于解决了</title>
      <link>https://helao.net/2011/67.html</link>
      <pubDate>2011-01-13 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;项目中虽然配置了事务，但是总感觉没起作用。&lt;/p&gt; &lt;p&gt;尤其是我在测试service方法时，总是报出一个异常 &amp;nbsp;transaction not successfully started .&lt;/p&gt; &lt;p&gt;我开始以为是事务配置的问题，经过反复的检查，发现没错。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;开始在网上漫无目的的搜索解决方案， 在一片帖子中看到，有人说 使用SessionFactory.getCurrentSession爆出了这个异常，解决办法是改为 SessionFactory.openSession() ,这个倒是给了我灵感。&lt;/p&gt; &lt;p&gt;于是我去检查 hibernateDao(项目中封装的唯一dao)，结果发现 session 都是通过 HibernateDaoSupport.getSession() 得到的，而save，update,delete 等是通过get HibernateTemplate() 来实现的，根本没有涉及到 SessionFactory.本来已经放弃这个方法了。一不小心在 save方法中发现了一行代码&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;this.getSession().beginTransaction().commit(); &amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;当时就震惊了，这句话根本就没用嘛，估计以前没配置事务时 自己写着玩的。赶紧把这个注掉，又在 commit（）方法中发现了这行代码，注掉。&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;然后运行测试，通过了，事务正常回滚了。&lt;/p&gt; &lt;p&gt;总结一下，在spring使用了声明式事务 ，就不应该在 拦截的 类中 自己维护事务。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>用eclipse管理maven jetty插件</title>
      <link>https://helao.net/2011/62.html</link>
      <pubDate>2011-01-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;color: #555b6e; font-family: Arial; line-height: 18px;&#34;&gt; &lt;/span&gt;&lt;/p&gt; &lt;div class=&#34;tit&#34; style=&#34;font-family: Arial; font-size: 14px; line-height: 26px; font-weight: bold; text-align: left; border-left-width: 5px; border-left-style: solid; border-left-color: #8b97a1; text-indent: 8px;&#34;&gt; maven jetty eclipse run stop debug 调试java web项目&lt;/div&gt; &lt;div class=&#34;date&#34; style=&#34;font-family: Verdana; font-size: 10px; line-height: 18px; margin-top: 0px; margin-right: 0px; margin-bottom: 8px; margin-left: 12px; color: #888888; text-align: left;&#34;&gt; 2010-04-12 15:41&lt;/div&gt; &lt;table style=&#34;width: 900px;&#34; border=&#34;0&#34;&gt; &lt;tbody&gt;  &lt;tr&gt;    &lt;td style=&#34;font-family: Arial; font-size: 12px; line-height: 18px;&#34;&gt;     &lt;div id=&#34;blog_text&#34; class=&#34;cnt&#34; style=&#34;font-family: Arial; font-size: 12px; line-height: 18px;&#34;&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;Maven 摆在眼前最明显的优点就是对peoject的jar包的的管理。当然Maven的优点远远不止这些。&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;在Eclipse下，可以使用m2eclipse加快对Maven project的开发。&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;这几天对Maven的web项目进行调试的时候，发现对已经运行的web项目无法关闭，只能在在任务管理器中&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;结束进程。这就郁闷了，网上找了找，也顺便总结了一下。&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;Start》》》》》》》》》》》》》》》》》》》》&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;步骤1。如何启动web项目，进行调试：&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.1我采用的是jetty容器。首先要在pom.xml中配置plugin&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;!-- jetty插件 --&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;plugin&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;groupId&amp;gt;org.mortbay.jetty&amp;lt;/groupId&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;artifactId&amp;gt;maven-jetty-plugin&amp;lt;/artifactId&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/plugin&amp;gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.2下面配置一个外部工具来运行jetty。&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;选择菜单Run-&amp;gt;External Tools-&amp;gt;External Tools Configurations&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-----------------》&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 图1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;左边选择Program，再点右键New：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;配置Location为mvn命令行路径。&lt;br style=&#34;line-height: normal;&#34; /&gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 选择Working Directory为当前需要运行的项目。&lt;br style=&#34;line-height: normal;&#34; /&gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Arguments填写：jetty:run 如图2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 图2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 进过如此操作之后，点击run，或者点图3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 图3&lt;br style=&#34;line-height: normal;&#34; /&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; 便可运行该项目。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 但此时也仅仅是运行项目，还没达到debug的要求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2.对web项目进行debug调试，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2.1在点击图2中的Environment选择项，新增一个，Environment varibles。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;加入MAVEN_OPTS变量，值为&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2.2下面进行debug运行配置，点击Debug-&amp;gt;Debug Configuration&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在配置中选择相应的project，端口要设置为与MAVEN_OPTS变量中的address=4000相同。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&lt;/span&gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 配置完成之后，就可以设置断点进行debug调试了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 首先按照步骤1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;启动web项目，然后运行刚刚新建的Remote Java Application.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 如下图：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;font-size: 14px;&#34;&gt;&amp;nbsp;3.最后是jetty的shutdown。&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3.1首先在pom.xml中&lt;br style=&#34;line-height: normal;&#34; /&gt;&lt;span style=&#34;line-height: normal; font-family: Arial;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;!-- jetty插件 --&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;plugin&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;groupId&amp;gt;org.mortbay.jetty&amp;lt;/groupId&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;artifactId&amp;gt;maven-jetty-plugin&amp;lt;/artifactId&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal; font-family: Arial;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 修改为-------------------&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&lt;span style=&#34;line-height: normal; font-family: Arial;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;!-- jetty插件 --&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;plugin&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;groupId&amp;gt;org.mortbay.jetty&amp;lt;/groupId&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;artifactId&amp;gt;maven-jetty-plugin&amp;lt;/artifactId&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;configuration&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;stopPort&amp;gt;9966&amp;lt;/stopPort&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;stopKey&amp;gt;foo&amp;lt;/stopKey&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/configuration&amp;gt;&lt;br style=&#34;line-height: normal;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先如图1，新建&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br style=&#34;line-height: normal;&#34; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然后运行该新建的program就可以了将运行的jetty项目shutdowm了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&amp;nbsp;&lt;/p&gt;      &lt;p style=&#34;line-height: normal;&#34;&gt;&lt;span&gt;&lt;span style=&#34;line-height: 21px; font-size: 14px; text-align: left;&#34;&gt;&lt;span style=&#34;line-height: normal;&#34;&gt;END 《《《《《《《《《《《《《《《《《《《《《《《《《《《《&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;     &lt;/div&gt; &lt;/td&gt;   &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>抛开myeclipse ,使用maven jetty 插件运行调试 web项目</title>
      <link>https://helao.net/2011/61.html</link>
      <pubDate>2011-01-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;maven是非常不错的项目管理工具，为了能使其直接调试web程序，可以使用 maven jetty 插件 ，只需要在项目的pom中添加：：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- jetty插件 --&amp;gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;&amp;lt;plugin&amp;gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;&amp;lt;groupId&amp;gt;org.mortbay.jetty&amp;lt;/groupId&amp;gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;&amp;lt;artifactId&amp;gt;maven-jetty-plugin&amp;lt;/artifactId&amp;gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;&amp;lt;/plugin&amp;gt;&lt;/p&gt; &lt;p&gt;即可。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;运行 mvn jetty:run &amp;nbsp;这样项目就能运行了， mvn jetty:stop 可以关闭jetty。很方便吧。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;这篇文章介绍了 如何将jetty和 eclipse结合起来。这样就能抛弃庞大的 myeclipse 了。直接用eclipse就能方便的运行，测试web项目&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>filter 的执行顺序</title>
      <link>https://helao.net/2011/60.html</link>
      <pubDate>2011-01-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;我记得是按 filter-mapping的顺序来执行的， 心里总是觉的不放心，于是查了下资料，确实是这样的，一会去做实验验证一下，我还有一些疑惑：如果在filter中将 request 转发 或者重定向， 是直接返回呢，还是继续执行其他的filter呢，做实验。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring security遇到的一些问题</title>
      <link>https://helao.net/2011/59.html</link>
      <pubDate>2011-01-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;昨天整理了 maven + jetty的环境，感觉还不错，非常适合自己07年买的本。&lt;/p&gt; &lt;p&gt;使用m2eclipse 插件可以非常方便的添加 &amp;nbsp;依赖和插件，要不然自己手动写是很麻烦的，有点小遗憾，添加依赖时不能多选。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;今天终于能用eclipse管理maven的 jetty了，可以run,stop,debug。 可以抛弃myeclipse了。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;下午一直在弄security 2.0的例子，郁闷了好半天。&lt;/p&gt; &lt;p&gt;当加上这句话时 会出错 &amp;nbsp;，不信你们试试&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;lt;intercept-url pattern=&amp;quot;/*&amp;quot; filters=&amp;quot;none&amp;quot; /&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;加上&amp;nbsp;&amp;lt;intercept-url pattern=&amp;quot;/**&amp;quot; filters=&amp;quot;none&amp;quot; /&amp;gt;这个反而没错。&lt;/p&gt; &lt;p&gt;我很无语，还遇到一个问题是： &amp;nbsp;no bean name springsecurityfilterchain 这个错误，&lt;/p&gt; &lt;p&gt;解决方案： &amp;nbsp;首先保证有 &amp;lt;http&amp;gt; 标签， 还有可能是applicationContext文件没有找到，&lt;/p&gt; &lt;p&gt;比如当 web.xml 中为 &amp;nbsp;&amp;lt;param-value&amp;gt;classpath*:applicationContext.xml&amp;lt;/param-value&amp;gt;&lt;/p&gt; &lt;p&gt;这样时 就会出现上面的问题。&lt;/p&gt; &lt;p&gt;把 * 号去掉后 回复正常。这个可能是 web服务器的问题，有的帖子上让加*，有的不加也没问题。记下来备用。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-family: Arial, sans-serif, Helvetica, Tahoma; line-height: 18px;&#34;&gt;这个问题已经解决了，看了security的源码也弄明白了问题是怎样产生的。&lt;br /&gt;上面的配置应该是可以启动服务器，并且不报错的。&lt;br /&gt;问题出在 filter的执行上。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 首先security是通过一系列的过滤器来进行认证和权限管理的&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; filter处理的顺序请参考其他文章，&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在FilterChainProxy中 有这样一句 getFilters(url);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这样会根据你配置的 intecepter-url 和filter来进行查询的。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 比如&amp;nbsp; /login.jsp&amp;nbsp;&amp;nbsp; filters=&amp;quot;none&amp;quot;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /**&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; access=&amp;quot;role_user&amp;quot;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 当你 访问login。jsp时 getFilters() 就会返回 null&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 于是不进行权限控制，任何人都能访问到了。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 其他类似所有的 /admin/** access=&amp;quot;role_admin&amp;quot;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这种都会被 /**来进行匹配，在最后的filter进行权限验证。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 当配置 /*&amp;nbsp; filters=“none” 时 这样所有的/* 就不会进入 VirtrualFilterChain&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 而用户认证，和生成 登录界面都是在 VirtrualFilterChain 中进行生成的，&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这样spring security 就默认的 登录认证，注销等url都不能起作用了&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>关于单元测试的一些想法</title>
      <link>https://helao.net/2011/58.html</link>
      <pubDate>2011-01-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;项目中采用了 ssh 框架，并将dao层封装为 一个 hibernateDao,预留接口： 查询和分页，删除，更新，保存，和 hqlquery,sqlquery, 同时pojo中采用annotion，所以一般查询时不需要写hql语句，感觉非常方便。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;涉及到的测试问题：如何测试 hql，sql，和一般性查询&lt;/span&gt;。sql语句很好测试，可以使用dbunit来进行。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;项目中 将hbm.xml 文件都配置到了 application-dbaccess.xml中，自动将xml生成数据库的表，当xml修改后，也会自动修改表结构。这是依赖spring容器的，所以给测试hql带来了麻烦。必须启动spring容器才能进行测试，尤其是项目中的bean非常多，启动很慢，差不多都可以启动weblogic了。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;本来myeclipse 下有一个hql编辑器，可以直接测试hql，如果单独使用hibernate来测试hql，同样需要 hibernate.revert.xml这个文件，但我们项目中没有这个文件，需要将application-dbaccess.xml 中的 hbm.xml 数据添加到 &amp;nbsp;hibernate.revert.xml中才行。&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;解决办法： 生成 hibernate.revert.xml ，不测试dao层，直接测试 service即可。&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;测试service方法，这里有两个测试&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 开发时的测试： mock掉dao层，测试非常快。&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;集成测试： &amp;nbsp;使用dao层，需要使用测试数据库，使用springtransactiondatasourcetestcase 这个类，&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;测试完后可以将数据回滚， 应避免脏数据的产生，在每次集成测试前，需要初始化 db,保证测试结果一致性。&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;实际遇到的问题： 如何mock掉dao层？ &amp;nbsp;测试完数据不回滚？加载xml非常慢？&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p&gt;加载xml慢： 解决办法，开启懒加载，避免不必要的bean浪费时间。其他的 正在研究&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;测试action层：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 有strutstestcase 包可以测试action， 测试的内容有 request path， forward ，request attribute，tile/input&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 遇到最多的问题是 配置文件，建议尽量将 url == module +class+ method 这个结构，比较好。不容易出错。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 这确实是个问题。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;遇到的测试的问题： &amp;nbsp;启动速度问题，mock service 层&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; action一般我是启动web容器来测试，这样效率非常的慢，不能批量测试，每遇到一个问题 ，基本都要重启一次。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 以后将这部分进行批量测试。&amp;nbsp;&lt;/p&gt; &lt;p&gt;解决办法 &amp;nbsp;mock service,将spring 启用懒加载。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 测试项： &amp;nbsp;request path--&amp;gt; forward - input - data, 然后jsp中的错误可以一遍改一遍测。&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre;&#34;&gt; &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring junit集成测试</title>
      <link>https://helao.net/2011/57.html</link>
      <pubDate>2011-01-04 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; &lt;div class=&#34;showHead&#34; style=&#34;margin-top: 5px; margin-right: 12px; margin-bottom: 0px; margin-left: 12px; height: 60px; border-bottom-width: 1px; border-bottom-style: dashed; border-bottom-color: #cccccc; padding: 0px;&#34;&gt;  &lt;div class=&#34;showTitleBOx&#34; style=&#34;padding-top: 20px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-align: center; margin: 0px;&#34;&gt;   &lt;div class=&#34;showTitle&#34;&gt;   &lt;br /&gt;  &lt;/div&gt;  &lt;/div&gt; &lt;/div&gt; &lt;div class=&#34;showContent&#34; style=&#34;margin-top: 20px; margin-right: 15px; margin-bottom: 20px; margin-left: 15px; line-height: 2; font-size: 14px; border-bottom-width: 1px; border-bottom-style: dashed; border-bottom-color: #d9d9d9; padding: 0px;&#34;&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;利用spring来进行集成测试&lt;/strong&gt;：&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;1、AbstractSpringContextTests类[1],该类全部方法是protected的，通常不使用这个类，而使用它的子类们。&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;2、AbstractDependencyInjectionSpringContextTests类[2]：继承于类[1]：名字N长的。如果仅仅使用Spring依赖注入功能，可以让测试用例继承该类。&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;3、AbstractTransactionalSpringContextTests类[3]:继承于类[2]，继承该类的测试用例在spring管理的事务中进行，测试完后对数据库的记录不会造成任何影响。你对数据库进行一些操作后，它会自动把数据库回滚，这样就保证了你的测试对于环境没有任何影响&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;4、AbstractTransactionalDataSourceSpringContextTests：继承于类[3]，功能更强大，用于测试持久层组件,看其源代码，有一行&amp;quot;protected JdbcTemplate jdbcTemplate;&amp;quot;，提供了一个JdbcTemplate的变量，通过该对象可以直接操作数据库。&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;   &lt;a style=&#34;color: #015f91; text-decoration: none; padding: 0px; margin: 0px;&#34; href=&#34;http://lighter.iteye.com/blog/41733&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;[url]http://lighter.iteye.com/blog/41733[/url]&lt;/span&gt;&lt;/a&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;还提供了两个用spring来进行集成测试(对数据库操作进行测试)，业务测试(对业务层进行测试)的例子供下载。&lt;/span&gt;  &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;***如何在你的TestCase Class里取得spring context (注意路径问题)？***&lt;/strong&gt;&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;你的TestCase Class必须继承的是上述四个AbstractXXXSpringContextTests中的其中一个，那么就必须实现下面这个方法来取得spring context：&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; protected abstract String[]&amp;nbsp;&lt;strong style=&#34;color: black; background-color: #ffff66; padding: 0px; margin: 0px;&#34;&gt;getConfigLocations&lt;/strong&gt;();&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;例如：&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;public String[]&amp;nbsp;&lt;strong style=&#34;color: black; background-color: #ffff66; padding: 0px; margin: 0px;&#34;&gt;getConfigLocations&lt;/strong&gt;() {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; String[] configLocations = { &amp;quot;applicationContext.xml&amp;quot;,&amp;quot;hibernate-context.xml&amp;quot; };&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return configLocations;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;}&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;   &lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;  &lt;span style=&#34;color: #000000; font-size: medium; padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;请 注意要加载的context xml file的路径问题：上述的代码是基于classpath，因此applicationContext.xml和hibernate- context.xml必须放在classpath里（方法一是把xml files放到WEB-INF/classes目录下，另一种方法就是在project properties里把xml files的路径加到classpath里）&lt;/strong&gt;&lt;/span&gt;  &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;那么&lt;span style=&#34;font-size: small; padding: 0px; margin: 0px;&#34;&gt;&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;如果你一定要把context xml files放到WEB-INF目录下，也是可以的，那么应该基于file(基于file的相对路径是相对于project root folder)，代码如下：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;public String[]&amp;nbsp;&lt;strong style=&#34;color: black; background-color: #ffff66; padding: 0px; margin: 0px;&#34;&gt;getConfigLocations&lt;/strong&gt;() {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; String[] configLocations = { &amp;quot;file:WebContent/WEB-INF/applicationContext.xml&amp;quot;};&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return configLocations;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;}&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;AbstractXXXSpringContextTests就会根据根据&lt;strong style=&#34;color: black; background-color: #ffff66; padding: 0px; margin: 0px;&#34;&gt;getConfigLocations&lt;/strong&gt;方法返回的context xml位置的数组来加载并且对加载的Context提供缓存。 这是非常重要的，因为如果你在从事一个大项目时，启动时间可能成为一个问题－－这不是Spring自身的开销，而是被Spring容器实例化的对象在实例 化自身时所需要的时间。例如，一个包括50-100个Hibernate映射文件的项目可能需要10-20秒的时间来加载上述的映射文件，如果在运行每个 测试fixture里的每个测试案例前都有这样的开销，将导致整个测试工作的延时，最终有可能（实际上很可能）降低效率。&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;在某种极偶然的情况下，某个测试可能“弄脏”了配置场所，并要求重新加载－－例如改变一个bean的定义或者一个应用对象的状态－－你可以调用&amp;nbsp;&lt;code class=&#34;classname&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span&gt;AbstractDependencyInjectionSpringContextTests&lt;/span&gt;&lt;/code&gt;&amp;nbsp;上的&amp;nbsp;&lt;code class=&#34;literal&#34; style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;span&gt;setDirty()&lt;/span&gt;&lt;/code&gt;&amp;nbsp;方法来重新加载配置并在执行下一个测试案例前重建application context&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &amp;nbsp; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;当类 AbstractDependencyInjectionSpringContextTests（及其子类）装载你的Application Context时，你可以通过Setter方法来注入你想要的来自context的bean,而不需要显式的调用applicationContext.getBean(XXX)。因为AbstractDependencyInjectionSpringContextTests会从&lt;strong style=&#34;color: black; background-color: #ffff66; padding: 0px; margin: 0px;&#34;&gt;getConfigLocations&lt;/strong&gt;()方法指定的配置文件中帮你自动注入&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;下面的例子就是通过setter方法来获得context里的ProductManager bean：&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;public class MyTest extends AbstractDependencyInjectionSpringContextTests {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ProductManager productManager;&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public String[]&amp;nbsp;&lt;strong style=&#34;color: black; background-color: #ffff66; padding: 0px; margin: 0px;&#34;&gt;getConfigLocations&lt;/strong&gt;() {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; String[] configLocations = { &amp;quot;file:WebContent/WEB-INF/applicationContext.xml&amp;quot; };&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return configLocations;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public void testGetProduct() {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; assertEquals(&amp;quot;tomson&amp;quot;,productManager.getProductByName(&amp;quot;tomson&amp;quot;).getName());&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; //通过setter方法自动从context里注入productManager bean，而不用显示调用applicationContext.getBean(XXX)&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public void setProductManager(ProductManager productManager) {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; this.productManager = productManager;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;}&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;但是&lt;strong style=&#34;padding: 0px; margin: 0px;&#34;&gt;如 果context里有多个bean都定义为一个类型（例如有多个bean都是ProductManager class类型的），那么对这些bean就无法通过setter方法来自动依赖注入（因为有多个bean同一个类型，不知要自动注入哪个）。在这种情况下 你需要显示的调用applicationContext.getBean(XXX)来注入&lt;/strong&gt;。如：&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;public class MyTest extends AbstractDependencyInjectionSpringContextTests {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp; ProductManager productManager;&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; public String[]&amp;nbsp;&lt;strong style=&#34;color: black; background-color: #ffff66; padding: 0px; margin: 0px;&#34;&gt;getConfigLocations&lt;/strong&gt;() {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; String[] configLocations = { &amp;quot;file:WebContent/WEB-INF/applicationContext.xml&amp;quot; };&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return configLocations;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp; }&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void onSetUp() {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; productManager = (ProductManager) applicationContext.getBean(&amp;quot;productManager&amp;quot;);&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp; }&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; public void testGetProduct() {&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; assertEquals(&amp;quot;tomson&amp;quot;,productManager.getProductByName(&amp;quot;tomson&amp;quot;).getName());&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&amp;nbsp; }&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&amp;nbsp;&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;}&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;  &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;如果你的TestCase不使用依赖注入，只要不定义任何setters方法即可。或者你可以继承 AbstractSpringContextTests －－这个 org.springframework.test 包中的根类，而不是继承AbstractDependencyInjectionSpringContextTests（及其子类）。这是因为AbstractSpringContextTests 只包括用来加载Spring Context的便利方法但没有自动依赖注入的功能。&lt;/span&gt; &lt;/div&gt;  &lt;div style=&#34;padding: 0px; margin: 0px;&#34;&gt;   &lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;另外还有一篇文章介绍了spring单元测试的策略，见&lt;/span&gt;  &lt;a style=&#34;color: #015f91; text-decoration: none; padding: 0px; margin: 0px;&#34; href=&#34;http://blog.csdn.net/wangjian5748/archive/2006/09/09/1199549.aspx&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;color: #000000; padding: 0px; margin: 0px;&#34;&gt;[url]http://blog.csdn.net/wangjian5748/archive/2006/09/09/1199549.aspx[/url]&lt;/span&gt;&lt;/a&gt;  &lt;/div&gt; &lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>一点感想</title>
      <link>https://helao.net/2010/56.html</link>
      <pubDate>2010-12-27 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;在去年我开始接触java的时候 ，我就在想要是有个平板电脑该多好啊，那该多酷啊，当时还在网上搜了一下，说早就有过平板电脑了，不过失败了。可我觉得 平板电脑确实很酷。结果苹果出来了。&lt;/p&gt; &lt;p&gt;10年初，看pdf让我很头疼，想找个大屏幕的能看pdf的手持终端，当时好像有手机能看pdf，但屏幕太小，3.2的，价格也太高，终于 在7，8月份的时候，电子书市场开始火热，现在我也终于如愿的找到了7寸的能看pdf的电子书。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>log4j 详解</title>
      <link>https://helao.net/2010/55.html</link>
      <pubDate>2010-12-23 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;&#34;&gt;1、Log4j 是什么？&amp;nbsp;&lt;br /&gt; Log4j可以帮助调试（有时候debug是发挥不了作 用的）和分析，要下载和了解更详细的内容，还&amp;nbsp;&lt;br /&gt;是访问其官方网站吧： http://jakarta.apache.org/log4j .&amp;nbsp;&lt;br /&gt;2、Log4j 的概念&amp;nbsp;&lt;br /&gt; Log4j中有三个主要的组件，它们分别是 Logger、Appender和Layout，Log4j 允许开发人员定&amp;nbsp;&lt;br /&gt;义多个Logger，每个Logger拥有自己的名字，Logger之间通过名字来表明隶属关系。有一个Logger&amp;nbsp;&lt;br /&gt;称为Root，它永远 存在，且不能通过名字检索或引用，可以通过Logger.getRootLogger（）方法获&amp;nbsp;&lt;br /&gt;得，其它Logger 通过 Logger.getLogger（String name）方法。&amp;nbsp;&lt;br /&gt; Appender则是用来指明将所有的log信息存放到什么地方，Log4j中支持多种appender，如&amp;nbsp;&lt;br /&gt;console、files、GUI components、NT Event Loggers等，一个Logger可以拥有多个&amp;nbsp;&lt;br /&gt;Appender，也就是你既可以将Log信息输出到屏幕，同时存储到一个文件中。&amp;nbsp;&lt;br /&gt; Layout的作用是控制Log信息的输出方式，也就是格式化输出的信息。&amp;nbsp;&lt;br /&gt; Log4j中将要输出的Log信息定义了5种级别，依次为DEBUG、INFO、WARN、ERROR和FATAL，&amp;nbsp;&lt;br /&gt;当输出时，只有级别高过配置中规定的 级别的信息才能真正的输出，这样就很方便的来配置不同情况下&amp;nbsp;&lt;br /&gt;要输出的内容，而不需要更改代码，这点实在是方便啊。&amp;nbsp;&lt;br /&gt;3、Log4j 的配置文件&amp;nbsp;&lt;br /&gt; 虽然可以不用配置文件，而在程序中实现配置，但这种方法在如今的系统开发中显然是不可取的，&amp;nbsp;&lt;br /&gt;能采用配置文件的地方一定一定要用配置文件。Log4j 支持两 种格式的配置文件：XML格式和Java 的&amp;nbsp;&lt;br /&gt;property格式，本人更喜欢后者，首先看一个简单的例子吧，如下：&amp;nbsp;&lt;br /&gt;log4j.rootLogger=debug, stdout, R&amp;nbsp;&lt;br /&gt;log4j.appender.stdout=org.apache.log4j.ConsoleAppender&amp;nbsp;&lt;br /&gt;log4j.appender.stdout.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;# Pattern to output the caller&#39;s file name and line number.&amp;nbsp;&lt;br /&gt;log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n&amp;nbsp;&lt;br /&gt;log4j.appender.R=org.apache.log4j.RollingFileAppender&amp;nbsp;&lt;br /&gt;log4j.appender.R.File=example.log&amp;nbsp;&lt;br /&gt;log4j.appender.R.MaxFileSize= 100KB&amp;nbsp;&lt;br /&gt;# Keep one backup file&amp;nbsp;&lt;br /&gt;log4j.appender.R.MaxBackupIndex=1&amp;nbsp;&lt;br /&gt;log4j.appender.R.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n&amp;nbsp;&lt;br /&gt; 首先，是设置root，格式为 log4j.rootLogger=[level]，appenderName， ……，其中&amp;nbsp;&lt;br /&gt;level就是设置需要输出信息的级别，后面是appender的输出的目的地，appenderName就是指定日&amp;nbsp;&lt;br /&gt;志信息输出到哪个地方。您 可以同时指定多个输出目的地。 配置日志信息输出目的地Appender，其语&amp;nbsp;&lt;br /&gt;法为&amp;nbsp;&lt;br /&gt;log4j.appender.appenderName = fully.qualified.name.of.appender.class&amp;nbsp;&lt;br /&gt;log4j.appender.appenderName.option1 = value1&amp;nbsp;&lt;br /&gt;...&amp;nbsp;&lt;br /&gt;log4j.appender.appenderName.option = valueN&amp;nbsp;&lt;br /&gt; Log4j提供的appender有以下几种：&amp;nbsp;&lt;br /&gt; org.apache.log4j.ConsoleAppender（控制台）&amp;nbsp;&lt;br /&gt; org.apache.log4j.FileAppender（文件）&amp;nbsp;&lt;br /&gt; org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）&amp;nbsp;&lt;br /&gt; org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生新文件）&amp;nbsp;&lt;br /&gt; org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）&amp;nbsp;&lt;br /&gt; 配置日志信息的格式（布局），其语法为：&amp;nbsp;&lt;br /&gt;log4j.appender.appenderName.layout = fully.qualified.name.of.layout.class&amp;nbsp;&lt;br /&gt;log4j.appender.appenderName.layout.option1 = value1&amp;nbsp;&lt;br /&gt;....&amp;nbsp;&lt;br /&gt;log4j.appender.appenderName.layout.option = valueN&amp;nbsp;&lt;br /&gt; Log4j提供的layout有以下几种：&amp;nbsp;&lt;br /&gt; org.apache.log4j.HTMLLayout（以HTML表格形式布局），&amp;nbsp;&lt;br /&gt; org.apache.log4j.PatternLayout（可以灵活地指定布局模式），&amp;nbsp;&lt;br /&gt; org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），&amp;nbsp;&lt;br /&gt; org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）&amp;nbsp;&lt;br /&gt; Log4J采用类似C语言中的printf函数的打印格式格式化日志信息，打印参数如下： %m 输出代&amp;nbsp;&lt;br /&gt;码中指定的消息&amp;nbsp;&lt;br /&gt; %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL&amp;nbsp;&lt;br /&gt; %r 输出自应用启动到输出该log信息耗费的毫秒数&amp;nbsp;&lt;br /&gt; %c 输出所属的类目，通常就是所在类的全名&amp;nbsp;&lt;br /&gt; %t 输出产生该日志事件的线程名&amp;nbsp;&lt;br /&gt; %n 输出一个回车换行符，Windows 平台为“\r\n”，Unix平台为“\n”&amp;nbsp;&lt;br /&gt; %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy&amp;nbsp;&lt;br /&gt;MMM dd HH：mm：ss，SSS}，输出类似： 2002年10月18 日 22：10：28，921&amp;nbsp;&lt;br /&gt; %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：&amp;nbsp;&lt;br /&gt;Testlog4.main（TestLog4.java：10）&amp;nbsp;&lt;br /&gt;4、Log4j 在程序中的使用&amp;nbsp;&lt;br /&gt; 要在自己的程序中使用Log4j，首先需要将commons- logging.jar和logginglog4j-&amp;nbsp;&lt;br /&gt;1.2.9.jar导入到构建路径中。然后再将log4j.properties放到src根目录 下。这样就可&amp;nbsp;&lt;br /&gt;以在程序中使用log4j了。在类中使用log4j，首先声明一个静态变量&amp;nbsp;&lt;br /&gt;Logger logger=Logger.getLog（&amp;quot;classname&amp;quot;）；现在就可以使用了，用法如下：&amp;nbsp;&lt;br /&gt;logger.debug（&amp;quot;debug message&amp;quot;）或者logger.info（&amp;quot;info message&amp;quot;），看下面一个小例子：&amp;nbsp;&lt;br /&gt;import com.foo.Bar;&amp;nbsp;&lt;br /&gt;import org.apache.log4j.Logger;&amp;nbsp;&lt;br /&gt;import org.apache.log4j.PropertyConfigurator;&amp;nbsp;&lt;br /&gt;public class MyApp {&amp;nbsp;&lt;br /&gt;static Logger logger = Logger.getLogger(MyApp.class.getName());&amp;nbsp;&lt;br /&gt;public static void main(String[] args) {&amp;nbsp;&lt;br /&gt;// BasicConfigurator replaced with PropertyConfigurator.&amp;nbsp;&lt;br /&gt;PropertyConfigurator.configure(args[0]);&amp;nbsp;&lt;br /&gt;logger.info(&amp;quot;Entering application.&amp;quot;);&amp;nbsp;&lt;br /&gt;Bar bar = new Bar();&amp;nbsp;&lt;br /&gt;bar.doIt();&amp;nbsp;&lt;br /&gt;logger.info(&amp;quot;Exiting application.&amp;quot;);&amp;nbsp;&lt;br /&gt;}&amp;nbsp;&lt;br /&gt;}&amp;nbsp;&lt;br /&gt;5、log4j.properties配置文件&amp;nbsp;&lt;br /&gt;# Set root category priority to info and its only appender to #console.&amp;nbsp;&lt;br /&gt;log4j.rootCategory=info,console,R&amp;nbsp;&lt;br /&gt;#log4j.debug=true&amp;nbsp;&lt;br /&gt;&lt;br /&gt;# console is set to be a ConsoleAppender using a PatternLayout.&amp;nbsp;&lt;br /&gt;log4j.appender.console=org.apache.log4j.ConsoleAppender&amp;nbsp;&lt;br /&gt;log4j.appender.console.Threshold=info&amp;nbsp;&lt;br /&gt;log4j.appender.console.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;log4j.appender.console.layout.ConversionPattern=- %m%n&amp;nbsp;&lt;br /&gt;&lt;br /&gt;# R is set to be a File appender using a PatternLayout.&amp;nbsp;&lt;br /&gt;log4j.appender.R=org.apache.log4j.RollingFileAppender&amp;nbsp;&lt;br /&gt;log4j.appender.R.Append=true&amp;nbsp;&lt;br /&gt;log4j.appender.R.Threshold=info&amp;nbsp;&lt;br /&gt;log4j.appender.R.MaxFileSize=1024KB&amp;nbsp;&lt;br /&gt;log4j.appender.R.MaxBackupIndex=10&amp;nbsp;&lt;br /&gt;log4j.appender.R.File=d\:/log/bookconsole.log&amp;nbsp;&lt;br /&gt;log4j.appender.R.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;log4j.appender.R.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss} [%c]-[%p] %m%n&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>log4j 详解 （全）</title>
      <link>https://helao.net/2010/54.html</link>
      <pubDate>2010-12-23 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: Verdana, Helvetica, Arial; color: #303030; line-height: 18px;&#34;&gt;&lt;span style=&#34;color: #0000ff; font-size: x-small;&#34;&gt;&lt;strong&gt;&amp;nbsp;Log4j日志管理系统简单使用说明&lt;br /&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 通常，我们都提供一个名为 log4j.properties的文件，在第一次调用到Log4J时，Log4J会在类路径（../web-inf/class/当然也可以放到其它任 何目录，只要该目录被包含到类路径中即可）中定位这个文件，并读入这个文件完成的配置。这个配置文件告 诉Log4J以什么样的格式、把什么样的信息、输出到什么地方。&lt;br /&gt; Log4j有三个主要的组件：Loggers(记录器)，Appenders (输出源)和Layouts(布局)，这里可简单理解为日志类别，日志要输出的地方和日志以何种形式输出。综合使用这三个组件可以轻松的记录信息的类型和 级别，并可以在运行时控制日志输出的样式和位置。下面对三个组件分别进行说明：&lt;br /&gt; &lt;br /&gt; &lt;strong&gt;1、 Loggers&lt;br /&gt;&lt;/strong&gt; Loggers组件在此系统中被分为五个级别：DEBUG、INFO、WARN、ERROR和FATAL。这五个级别是有顺序的，DEBUG &amp;lt; INFO &amp;lt; WARN &amp;lt; ERROR &amp;lt; FATAL，分别用来指定这条日志信息的重要程度,明白这一点很重要，这里Log4j有一个规则：假设Loggers级别为P，如果在Loggers中发 生了一个级别Q比P高，则可以启动，否则屏蔽掉。&lt;br /&gt;假设你定义的级别是info，那么error和warn的日志可以显示而比他低的debug信息就不显示了。&lt;br /&gt;&amp;nbsp; &lt;br /&gt; Java程序举例来说：&lt;br /&gt; &lt;br /&gt; //建立Logger的一个实例，命名为“com.foo”&lt;br /&gt; Logger logger = Logger.getLogger(&amp;quot;com.foo&amp;quot;); //&amp;quot;com.foo&amp;quot;是实例进行命名，也可以任意&lt;br /&gt; //设置logger的级别。通常不在程序中设置logger的级别。一般在配置文件中设置。&lt;br /&gt; logger.setLevel(Level.INFO);&lt;br /&gt; Logger barlogger = Logger.getLogger(&amp;quot;com.foo.Bar&amp;quot;);&lt;br /&gt; //下面这个请求可用，因为WARN &amp;gt;= INFO&lt;br /&gt; logger.warn(&amp;quot;Low fuel level.&amp;quot;);&lt;br /&gt; //下面这个请求不可用，因为DEBUG &amp;lt; INFO&lt;br /&gt; logger.debug(&amp;quot;Starting search for nearest gas station.&amp;quot;);&lt;br /&gt; //命名为“com.foo.bar”的实例barlogger会继承实例“com.foo”的级别。因此，下面这个请求可用，因为INFO &amp;gt;= INFO&lt;br /&gt; barlogger.info(&amp;quot;Located nearest gas station.&amp;quot;);&lt;br /&gt; //下面这个请求不可用，因为DEBUG &amp;lt; INFO&lt;br /&gt; barlogger.debug(&amp;quot;Exiting gas station search&amp;quot;);&lt;br /&gt; 这里“是否可用”的意思是能否输出Logger信息。&lt;br /&gt; 在对Logger实例进行命名时，没有限制，可以取任意自己感兴趣的名字。一般情况下建议以类的所在位置来命名Logger实例，这是目前来讲比较有效的Logger命名方式。这样可以使得每个类建立自己的日志信息，便于管理。比如：&lt;br /&gt; &lt;br /&gt; static Logger logger = Logger.getLogger(ClientWithLog4j.class.getName());&lt;br /&gt; &lt;br /&gt; &lt;strong&gt; 2、Appenders&lt;br /&gt;&lt;/strong&gt; 禁用与使用日志请求只是Log4j其中的一个小小的地方，Log4j日志系统允许把日志输出到不同的地方，如控制台（Console）、文件（Files）、根据天数或者文件大小产生新的文件、以流的形式发送到其它地方等等。&lt;br /&gt; &lt;br /&gt; 其语法表示为：&lt;br /&gt; &lt;br /&gt; org.apache.log4j.ConsoleAppender（控制台）&lt;br /&gt; org.apache.log4j.FileAppender（文件）&lt;br /&gt; org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）&lt;br /&gt; org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）&lt;br /&gt; &lt;br /&gt; 配置时使用方式为：&lt;br /&gt; log4j.appender.appenderName = fully.qualified.name.of.appender.class&lt;br /&gt; log4j.appender.appenderName.option1 = value1&lt;br /&gt; …&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; log4j.appender.appenderName.option = valueN&lt;br /&gt; 这样就为日志的输出提供了相当大的便利。&lt;br /&gt; &lt;br /&gt;&lt;strong&gt; 3、Layouts&lt;/strong&gt;&lt;br /&gt; 有时用户希望根据自己的喜好格式化自己的日志输出。Log4j可以在Appenders的后面附加Layouts来完成这个功能。Layouts提供了 四种日志输出样式，如根据HTML样式、自由指定样式、包含日志级别与信息的样式和包含日志时间、线程、类别等信息的样式等等。&lt;br /&gt; &lt;br /&gt; 其语法表示为：&lt;br /&gt; &lt;br /&gt; org.apache.log4j.HTMLLayout（以HTML表格形式布局），&lt;br /&gt; org.apache.log4j.PatternLayout（可以灵活地指定布局模式），&lt;br /&gt; org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），&lt;br /&gt; org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）&lt;br /&gt; &lt;br /&gt; 配置时使用方式为：&lt;br /&gt; &lt;br /&gt; log4j.appender.appenderName.layout =fully.qualified.name.of.layout.class&lt;br /&gt; log4j.appender.appenderName.layout.option1 = value1&lt;br /&gt; …&lt;br /&gt; log4j.appender.appenderName.layout.option = valueN&lt;/span&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&lt;strong&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;nbsp;Log4j的配置&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt; &lt;br /&gt; 以上是从原理方面说明Log4j的使用方法，在具体Java编程使用Log4j可以参照以下示例：&lt;br /&gt; &lt;br /&gt; &lt;strong&gt;1、 建立Logger实例&lt;/strong&gt;：&lt;br /&gt; 语法表示：public static Logger getLogger( String name)&lt;br /&gt; 实际使用：static Logger logger = Logger.getLogger(ServerWithLog4j.class.getName ()) ;&lt;br /&gt; &lt;br /&gt; &lt;strong&gt;2、 读取配置文件&lt;/strong&gt;：&lt;br /&gt; 获得了Logger的实例之后，接下来将配置Log4j使用环境：&lt;br /&gt; 语法表示：&lt;br /&gt; BasicConfigurator.configure()：自动快速地使用缺省Log4j环境。&lt;br /&gt; PropertyConfigurator.configure(String configFilename)：读取使用Java的特性文件编写的配置文件。&lt;br /&gt; DOMConfigurator.configure(String filename)：读取XML形式的配置文件。&lt;br /&gt; 实际使用：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; PropertyConfigurator.configure(&amp;quot;ServerWithLog4j.properties&amp;quot;);&lt;br /&gt; &lt;br /&gt; &lt;strong&gt;3、 插入日志信息&lt;/strong&gt;&lt;br /&gt; 完成了以上连个步骤以后，下面就可以按日志的不同级别插入到你要记录日志的任何地方了。&lt;br /&gt; 语法表示：&lt;br /&gt; Logger.debug(Object message);//调试信息&lt;br /&gt; Logger.info(Object message);//一般信息&lt;br /&gt; Logger.warn(Object message);//警告信息&lt;br /&gt; Logger.error(Object message);//错误信息&lt;br /&gt; Logger.fatal(Object message);//致命错误信息&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt; 实际使用：logger.info(&amp;quot;ServerSocket before accept: &amp;quot; + server);&lt;br /&gt; &lt;br /&gt;&lt;strong&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;nbsp; 配置过程&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt; 在实际编程时，要使Log4j真正在系统中运行事先还要对配置文件进行定义。定义步骤就是对Logger、Appender及Layout的分别使用。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Log4j支持两种配置文件格式，一种是XML格式的文件，一种是java properties（key=value）【Java特性文件（键=值）】。下面我们介绍使用Java特性文件做为配置文件的方法&lt;br /&gt;&amp;nbsp;&amp;nbsp; 具体如下：&lt;br /&gt; &lt;br /&gt; &lt;strong&gt;1、配置根Logger，&lt;/strong&gt;其语法为：&lt;br /&gt; log4j.rootLogger = [ level ] , appenderName1, appenderName2, …&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; level : 是日志记录的优先级，分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者您定义的级别。Log4j建议只使用四个级别，优 先级从高到低分别是ERROR、WARN、INFO、DEBUG。通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。比如在这里定 义了INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来。&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; appenderName:就是指定日志信息输出到哪个地方。您可以同时指定多个输出目的地。&lt;br /&gt;&amp;nbsp;&amp;nbsp; 例如：log4j.rootLogger＝info,A1,B2,C3&lt;br /&gt; &lt;br /&gt; &lt;strong&gt;2、配置日志信息输出目的地&lt;/strong&gt;，其语法为：&lt;br /&gt; log4j.appender.appenderName = fully.qualified.name.of.appender.class&amp;nbsp; //&lt;br /&gt; &amp;nbsp; &amp;quot;fully.qualified.name.of.appender.class&amp;quot; 可以指定下面五个目的地中的一个：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1.org.apache.log4j.ConsoleAppender（控制台）&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2.org.apache.log4j.FileAppender（文件）&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3.org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4.org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 5.org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;1.ConsoleAppender选项&lt;br /&gt;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Threshold=WARN:指定日志消息的输出最低层次。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Target=System.err：默认情况下是：System.out,指定输出控制台&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;2.FileAppender&lt;/strong&gt;&amp;nbsp;选项&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Threshold=WARN:指定日志消息的输出最低层次。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; File=mylog.txt:指定消息输出到mylog.txt文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3.&lt;strong&gt;DailyRollingFileAppender&lt;/strong&gt;&amp;nbsp;选项&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Threshold=WARN:指定日志消息的输出最低层次。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;File=mylog.txt:指定消息输出到 mylog.txt文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; DatePattern=&#39;.&#39;yyyy-ww:每周滚动一次文件，即每周产生一个新的文件。当然也可以指定按月、周、天、时和分。即对应的格式如下：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1)&#39;.&#39;yyyy-MM: 每月&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2)&#39;.&#39;yyyy-ww: 每周&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3)&#39;.&#39;yyyy-MM-dd: 每天&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4)&#39;.&#39;yyyy-MM-dd-a: 每天两次&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 5)&#39;.&#39;yyyy-MM-dd-HH: 每小时&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 6)&#39;.&#39;yyyy-MM-dd-HH-mm: 每分钟&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4.&lt;strong&gt;RollingFileAppender&lt;/strong&gt;&amp;nbsp;选项&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Threshold=WARN:指定日志消息的输出最低层次。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ImmediateFlush=true:默认值是true,意 谓着所有的消息都会被立即输出。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; File=mylog.txt:指定消息输出到mylog.txt文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; MaxFileSize=100KB: 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; MaxBackupIndex=2:指定可以产生的滚动文件的最大数。&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;实际应用：&lt;br /&gt; log4j.appender.A1=org.apache.log4j.ConsoleAppender //这里指定了日志输出的第一个位置A1是控制台ConsoleAppender&lt;br /&gt; &lt;br /&gt; &lt;strong&gt;3、配置日志信息的格式&lt;/strong&gt;，其语法为：&lt;br /&gt; &lt;strong&gt;A.&lt;/strong&gt;&lt;strong&gt;log4j.appender.appenderName.layout = fully.qualified.name.of.layout.class&lt;br /&gt;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;quot;fully.qualified.name.of.layout.class&amp;quot; 可以指定下面4个格式中的一个：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.org.apache.log4j.HTMLLayout（以HTML表格形式布局），&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2.org.apache.log4j.PatternLayout（可以灵活地指定布局模式），&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3.org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4.org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.HTMLLayout 选项&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LocationInfo=true:默认值是false,输出java文件名称和行号&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Title=my app file: 默认值是 Log4J Log Messages.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2.PatternLayout 选项&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ConversionPattern=%m%n :指定怎样格式化指定的消息。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3.XMLLayout&amp;nbsp; 选项&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LocationInfo=true:默认值是false,输出java文件和行号&lt;br /&gt;&amp;nbsp;&amp;nbsp; 实际应用：&lt;br /&gt;&amp;nbsp;&amp;nbsp; log4j.appender.A1.layout=org.apache.log4j.PatternLayout&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;B&lt;/strong&gt;.&lt;strong&gt;&amp;nbsp;log4j.appender.A1.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ssS} %c %m%n&lt;br /&gt;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这里需要说明的就是日志信息格式中几个符号所代表的含义：&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; －X号: X信息输出时左对齐；&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %r: 输出自应用启动到输出该log信息耗费的毫秒数&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %c: 输出日志信息所属的类目，通常就是所在类的全名&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %t: 输出产生该日志事件的线程名&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main (TestLog4.java:10)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %%: 输出一个&amp;quot;%&amp;quot;字符&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %F: 输出日志消息产生时所在的文件名称&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;%L: 输出代码中的行号&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %m: 输出代码中指定的消息,产生的日志具体信息&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; %n: 输出一个回车换行符，Windows平台为&amp;quot;\r\n&amp;quot;，Unix平台为&amp;quot;\n&amp;quot;输出日志信息换行&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1)%20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2)%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，&amp;quot;-&amp;quot;号指定左对齐。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3)%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的 话也不会有空格。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4)%20.30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边交远销出的字符截掉。&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt; 这里上面三个步骤是对前面Log4j组件说明的一个简化；下面给出一个具体配置例子，在程序中可以参照执行：&lt;br /&gt; log4j.rootLogger=INFO,A1，B2&lt;br /&gt; log4j.appender.A1=org.apache.log4j.ConsoleAppender&lt;br /&gt; log4j.appender.A1.layout=org.apache.log4j.PatternLayout&lt;br /&gt; log4j.appender.A1.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ssS} %c %m%n&lt;br /&gt;&amp;nbsp; 根据上面的日志格式，某一个程序的输出结果如下：&lt;br /&gt; 0 INFO 2003-06-13 13:23:46968 ClientWithLog4j Client socket: Socket[addr=localhost/127.0.0.1,port=8002,localport=2014]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j Server says: &#39;Java server with log4j, Fri Jun 13 13:23:46 CST 2003&#39;&lt;br /&gt; 16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j GOOD&lt;br /&gt; 16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j Server responds: &#39;Command &#39;HELLO&#39; not understood.&#39;&lt;br /&gt; 16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j HELP&lt;br /&gt; 16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j Server responds: &#39;Vocabulary: HELP QUIT&#39;&lt;br /&gt; 16 DEBUG 2003-06-13 13:23:46984 ClientWithLog4j QUIT&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;&amp;nbsp;4. # 当输出信息于回滚文件时&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender&amp;nbsp;&amp;nbsp; //指定以文件的方式输出日志&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log4j.appender.ROLLING_FILE.Threshold=ERROR&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log4j.appender.ROLLING_FILE.File=rolling.log&amp;nbsp; //文件位置,也可以用变量${java.home}、rolling.log&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log4j.appender.ROLLING_FILE.Append=true&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log4j.appender.ROLLING_FILE.MaxFileSize=10KB&amp;nbsp; //文件最大尺寸&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log4j.appender.ROLLING_FILE.MaxBackupIndex=1&amp;nbsp; //备份数&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log4j.appender.ROLLING_FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&amp;nbsp; &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&amp;times;&lt;br /&gt;&lt;strong&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&amp;nbsp;Log4j比较全面的配置&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;LOG4J的配置之简单使它遍及于越来越多的应用中了：Log4J配置文件实现了输出到控制台、文件、回滚文件、发送日志邮件、输出到数据库日志表、自定义标签等全套功能。择其一二使用就够用了，&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;log4j.rootLogger=DEBUG,CONSOLE,A1,im&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.addivity.org.apache=true&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;# 应用于控制台&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.Threshold=DEBUG&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.CONSOLE.Target=System.out&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.CONSOLE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&amp;nbsp;&lt;br /&gt;&amp;nbsp;#log4j.appender.CONSOLE.layout.ConversionPattern=[start]%d{DATE}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD] n%c[CATEGORY]%n%m[MESSAGE]%n%n&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;#应用于文件&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;log4j.appender.FILE=org.apache.log4j.FileAppender&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.FILE.File=file.log&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.FILE.Append=false&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.FILE.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&amp;nbsp;&lt;br /&gt;&amp;nbsp;# Use this layout for LogFactor 5 analysis&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;# 应用于文件回滚&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.ROLLING_FILE.Threshold=ERROR&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.ROLLING_FILE.File=rolling.log&amp;nbsp; //文件位置,也可以用变量${java.home}、rolling.log&lt;br /&gt;&amp;nbsp;log4j.appender.ROLLING_FILE.Append=true&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //true:添加&amp;nbsp; false:覆盖&lt;br /&gt;&amp;nbsp;log4j.appender.ROLLING_FILE.MaxFileSize=10KB&amp;nbsp;&amp;nbsp; //文件最大尺寸&lt;br /&gt;&amp;nbsp;log4j.appender.ROLLING_FILE.MaxBackupIndex=1&amp;nbsp; //备份数&lt;br /&gt;&amp;nbsp;log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.ROLLING_FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&lt;br /&gt;&amp;nbsp;#应用于socket&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.SOCKET=org.apache.log4j.RollingFileAppender&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.SOCKET.RemoteHost=localhost&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.SOCKET.Port=5001&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.SOCKET.LocationInfo=true&amp;nbsp;&lt;br /&gt;&amp;nbsp;# Set up for Log Facter 5&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.SOCKET.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.SOCET.layout.ConversionPattern=[start]%d{DATE}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD]%n%c[CATEGORY]%n%m[MESSAGE]%n%n&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&lt;br /&gt;&amp;nbsp;# Log Factor 5 Appender&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.LF5_APPENDER=org.apache.log4j.lf5.LF5Appender&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.LF5_APPENDER.MaxNumberOfRecords=2000&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;# 发送日志给邮件&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.MAIL.Threshold=FATAL&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.MAIL.BufferSize=10&amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;a style=&#34;color: #366900; text-decoration: none;&#34; href=&#34;mailto:log4j.appender.MAIL.From=web@www.wuset.com&#34;&gt;log4j.appender.MAIL.From=web@www.wuset.com&lt;/a&gt;&lt;br /&gt;&amp;nbsp;log4j.appender.MAIL.SMTPHost=www.wusetu.com&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.MAIL.Subject=Log4J Message&amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;a style=&#34;color: #366900; text-decoration: none;&#34; href=&#34;mailto:log4j.appender.MAIL.To=web@www.wusetu.com&#34;&gt;log4j.appender.MAIL.To=web@www.wusetu.com&lt;/a&gt;&lt;br /&gt;&amp;nbsp;log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.MAIL.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;# 用于数据库&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.DATABASE.URL=jdbc:mysql://localhost:3306/test&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.DATABASE.driver=com.mysql.jdbc.Driver&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.DATABASE.user=root&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.DATABASE.password=&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.DATABASE.sql=INSERT INTO LOG4J (Message) VALUES (&#39;[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&#39;)&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&lt;br /&gt;&amp;nbsp;log4j.appender.A1=org.apache.log4j.DailyRollingFileAppender&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.A1.File=SampleMessages.log4j&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.A1.DatePattern=yyyyMMdd-HH&#39;.log4j&#39;&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.A1.layout=org.apache.log4j.xml.XMLLayout&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;#自定义Appender&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;log4j.appender.im = net.cybercorlin.util.logger.appender.IMAppender&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;log4j.appender.im.host = mail.cybercorlin.net&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.im.username = username&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.im.password = password&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.im.recipient =&amp;nbsp;&lt;a style=&#34;color: #366900; text-decoration: none;&#34; href=&#34;mailto:corlin@cybercorlin.net&#34;&gt;corlin@cybercorlin.net&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&amp;nbsp;log4j.appender.im.layout=org.apache.log4j.PatternLayout&amp;nbsp;&lt;br /&gt;&amp;nbsp;log4j.appender.im.layout.ConversionPattern =[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&lt;/span&gt;&lt;/p&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>java reflect 系列1</title>
      <link>https://helao.net/2010/53.html</link>
      <pubDate>2010-12-23 12:00:00 +0800</pubDate>
      <description>&lt;p&gt; &lt;/p&gt; &lt;pre name=&#34;code&#34; class=&#34;java&#34;&gt;class Dog{          private     List&amp;lt;SmallDog&amp;gt; sons;          public void setSons(List&amp;lt;SmallDog&amp;gt; sons){                this.sons = sons;          }    }&lt;/pre&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; Method m = Dog.class.getMethod(&amp;quot;setSons&amp;quot;,List.class); &amp;nbsp;right&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &lt;span style=&#34;color: #ff0000;&#34;&gt;Method m = Dog.class.getMethod(&amp;quot;setSons&amp;quot;,ArrayList.class) &amp;nbsp; wrong&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; 我将reflect简单封装了一下，结果遇到了一个问题，查了半天才发现是这里出错了，记录下来&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; 如果有谁能告诉我这是为什么 &amp;nbsp;非常感谢&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>nutz 初体验</title>
      <link>https://helao.net/2010/52.html</link>
      <pubDate>2010-12-16 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;昨天晚上花时间看看nutz，代码很少只有800K,里面的代码很简洁，个人用来快速开发 ssh很好。&lt;/p&gt; &lt;p&gt;按照文档上的介绍，自己动手整合了一个ssh的例子，使用了dbcp连接池，本来我想用jdbc直连的，结果发现用连接池更简单^_^!!!。从开始看文档算起 一共用了1个小时，例子很顺利，一点错都没出，^_^。还顺便考虑了一下模块开发的问题。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;nutz使用json作为配置文件， 比xml简单多了，只是缺少一些提示什么的，但nutz需要记住的东西真的很少，基本看一遍就能记住了。同样properties参数文件也可以用json配置文件代替，因为我没有在nutz中发现器其对properties的支持，暂时先用json代替。 &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;mvc中有一个很好的 本地化支持，没有配置文件，全部用注解搞定，很简单。感觉url解析做的非常棒，长知识了，第一次知道web中url是怎么转发的。nutz的性能暂时还不知道，不过从我做的例子上来看 &amp;nbsp;貌似比struts要快，可能是心里作用，没有具体数据证明，你们想知道可以去找nutz的作者要相关数据。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;下面附上我做的小例子 环境是 eclipse j2ee 3.5 &amp;nbsp;tomcat 6.0.20&lt;/p&gt; &lt;p&gt;直接将解压文件 复制进 workplace 中即可。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>我要精通spring</title>
      <link>https://helao.net/2010/51.html</link>
      <pubDate>2010-12-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;刚学spring的时候就是按视频上的教的那样做着 ，遇到不会的东西就在网上查一下，知道现在依然觉的spring中还有好多自己不会用的东西，自己一直用的那些也不知道为什么那么做，spring很不错，开始系统的学习spring了，争取把它的文档看一遍，把心得整理一下。有时间的话可以研究一下源码，学东西要知其然 更要知其所以然。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>google地图 示例</title>
      <link>https://helao.net/2010/50.html</link>
      <pubDate>2010-12-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    有遮罩层 有标记提示，可以动态查询 地址的 经纬度。下面是代码&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-html linenums&#34;&gt;&amp;lt;meta name=&#34;viewport&#34; content=&#34;initial-scale=1.0, user-scalable=yes&#34; /&amp;gt;&#xA;&#xA;&amp;lt;script type=&#34;text/javascript&#34; src=&#34;http://maps.google.com/maps/api/js?sensor=false&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;script type=&#34;text/javascript&#34;&amp;gt;var geocoder;  var map;    function createMap(address){        if(address == null || address==&#34;&#34;) return false;        geocoder = new google.maps.Geocoder();      if(geocoder){           geocoder.geocode({address:address},function(results,status){                if(status == google.maps.GeocoderStatus.OK){                     var location = results[0].geometry.location;                    var options = {                         zoom:16,                        center:location,                        mapTypeId:google.maps.MapTypeId.ROADMAP                     };                  map =new google.maps.Map(document.getElementById(&#34;map_canvas&#34;),options);                    var marker = new google.maps.Marker({                      map: map,                       position: location,                     title:address                   });                 var infowindow = new google.maps.InfoWindow({                       content: &#34;&#xA;&amp;lt;div&amp;gt;&#xA;    &#34;+address+&#34;&#xA;&amp;lt;/div&amp;gt;&#xA;&#34;,                      size: new google.maps.Size(50,20),                      position:location,                      pixelOffset:new google.maps.Size(5,5)                   });                 infowindow.open(map);               }else {                 alert(&#34;Geocode was not successful for the following reason: &#34; + status);                }                       });             }         }    function initialize() {    createMap(&#34;your address  e.g: 北京&#34;);  }  function codeAddress() {    var address = document.getElementById(&#34;address&#34;).value;    if (geocoder) {      geocoder.geocode( { &#39;address&#39;: address}, function(results, status) {        if (status == google.maps.GeocoderStatus.OK) {          map.setCenter(results[0].geometry.location);        map.setZoom(16);          var marker = new google.maps.Marker({              map: map,               position: results[0].geometry.location,            title:address          });          var infowindow = new google.maps.InfoWindow({                 content: &#34;&amp;lt;span&amp;gt;&#34;+address+&#34;&amp;lt;/span&amp;gt;&#34;,                size: new google.maps.Size(40,10),                position: results[0].geometry.location,               pixelOffset:new google.maps.Size(5,5)          });      infowindow.open(map);       }     });  } else {          alert(&#34;Geocode was not successful for the following reason: &#34; + status);        }  }&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;div id=&#34;map_canvas&#34; style=&#34;width:800px;height:600px;margin:0 auto;&#34;&amp;gt;&#xA;    &#xA;&amp;lt;/div&amp;gt;&#xA;&#xA;&amp;lt;div&amp;gt;&#xA;    &amp;lt;input id=&#34;address&#34; type=&#34;textbox&#34; value=&#34;your address eg:北京&#34; /&amp;gt; &amp;lt;input type=&#34;button&#34; value=&#34;Encode&#34; onclick=&#34;codeAddress()&#34; /&amp;gt; &#xA;&amp;lt;/div&amp;gt;&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>lucene 查询语法 详解</title>
      <link>https://helao.net/2010/49.html</link>
      <pubDate>2010-12-02 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Lucene提供了丰富的API来组合定制你所需要的查询器，同时也可以利用 Query Parser提供的强大的查询语法解析来构造你想要的查询器。本文章详细的介绍了Lucene的查询语法。通过Java语法分析器把一个查询字符串解析成 Lucene的查询器。在你选择使用Query Parser前，请考虑以下事项：&lt;br /&gt;&lt;br /&gt; 如果你打算在程序中拼接查询语法串然后再利用Query Parser转换，那么强烈建议你利用相应的API来自己构造查询器。也就是说，&lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;strong&gt;Query Parser是为手工输入高级查询设计的，而不是为程序拼接语法串而设计的&lt;/strong&gt; &lt;/span&gt; 。 不分词的字段也最好通过相应的API添加到查询器中，而不是通过Query Parser。Query Parser 使用的Analyser分析器，作用是将用户手工输入的文本转化为相应的Term。如果一个字段的值是通过程序生成的（例如日期字段，关键词字段等），那 么在查询的时候也应该保持前后一致，利用程序生成相应的格式来查询。&lt;br /&gt;&lt;br /&gt; 在查询的目标中，如果字段全部是程序生成的文本，（例如补齐的日期字段等），最好使用Query Parser以便查询的时候也是一致的格式。至于其它的，例如日期范围查询，关键字查询等，最好调用相应的API来构建查询器。目标字段中如果仅仅拥有有 限的枚举值时，最好通过下拉列表提供给用户选择，然后利用TermQuery添加到查询器中，而不是而其拼接到查询字符串然后利用Query Parser来解析。&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Terms &lt;/strong&gt; &lt;br /&gt; 一个查询将分解为若干Term以及操作符，有两种Term，其一是单一Term，其二为短语。单一Term是经过分析器分词后的最小单元，他就是一个简单 的词，例如“Test”和“Hello”。短语则是一组被双引号括起来的一组词，例如：“Hello dolly”，多个Term可以通过布尔操作合并在一个更加复杂的查询器中。&lt;br /&gt; 注意：一般来说，创建索引的分析器和查询的分析器最好保持一致（当然也有特殊情况，比如单字索引，分词组合查询），所以选择一个不会干扰查询词的分析器是很重要的。&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Fields &lt;/strong&gt; &lt;br /&gt; Lucene支持多字段数据，当你在查询的时候你可以指定一个字段查询，也可以使用默认的字段。你可以使用 字段名 + “：” + 查询词来指定字段名搜索。举个例子，让我们假定Lucene的索引中含有两个字段，Title字段和Text字段，其中Text字段是默认字段，当你想找 到一篇文档其中标题包含“The Right Way”同时文本中包含“go”，你可以输入：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;title:&amp;quot;The Right Way&amp;quot; AND text:go &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 或者：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;title:&amp;quot; The Right Way &amp;quot; AND go &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 如果字段是默认字段的话，在查询语法中可以不需要显式指定。注意，使用默认字段有可能会造成如下的结果：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;title:Do it right &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 以上查询将查找标题中含有“Do”，Text字段字段中含有“it”和“right”的文档，因为Text是默认字段，所以如果想要查找Title中完整包含的很用引号引起来。&lt;br /&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;&lt;strong&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;strong&gt;&lt;/strong&gt; &lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;二、模糊查询&lt;/span&gt; &lt;/strong&gt; &lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;strong&gt;Term Modifiers&lt;/strong&gt; &lt;br /&gt; Lucene支持在Term中使用通配符来支持模糊查询。&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;&lt;strong&gt;Wildcard Searches [&lt;span style=&#34;color: #ff0000;&#34;&gt;类：org.apache.lucene.search.WildcardQuery&lt;/span&gt; ]&lt;/strong&gt; &lt;br /&gt; Lucene支持单个或者多个字符的通配符查询，匹配单一字符使用符号“?”，匹配多个字符使用符号“*”。&lt;br /&gt; “?”通配符将查找所有满足通过一个字符替换后符合条件的文档。比如：搜索“test”和“text”你可以使用：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;te?t &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; “*”通配符将查询0个或者多个字符替换后符合条件的。举例来说，查询test，tests或者tester，你可以使用一下字符串来搜索：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;test*&lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 当然，你也可以将“*”放在字符的中间&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;te*t &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 注意：你不能将“*”和“?”放在第一个字符来查询。（Lucene应该是出于性能考虑，所以不支持该功能）&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Fuzzy Searches&lt;span style=&#34;color: #ff0000;&#34;&gt; [&lt;/span&gt; &lt;/strong&gt; &lt;/span&gt; &lt;span style=&#34;color: #ff0000; font-size: small;&#34;&gt;&lt;strong&gt;org.apache.lucene.search.&lt;/strong&gt; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;strong&gt;FuzzyQuery]&lt;/strong&gt; &lt;/span&gt; &lt;br /&gt; Lucene支持基于编辑距离算法的模糊搜索，你可以使用波浪符号“~”放在查询词的后面，比如搜索一个与“roam”拼写相近的词可以使用：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;roam~ &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 该查询将寻找类似“foam”和“roams”等的词语。也可以说是相似度查询。&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Proximity Searches [&lt;/strong&gt; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;strong&gt;&lt;/strong&gt; &lt;/span&gt; &lt;span style=&#34;color: #ff0000; font-size: small;&#34;&gt;&lt;strong&gt;org.apache.lucene.search.PrefixQuery&lt;/strong&gt; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;strong&gt;]&lt;/strong&gt; &lt;br /&gt; Lucene支持指定距离查询，你可以使用波浪号“~”加数字在查询词后。举例来说搜索“apache”和“jakarta”距离10个字符以内，你可以使用如下语法：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;&amp;quot;jakarta apache&amp;quot;~10 &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 通过这个语法支持，我们可以单字索引，分词查询，分词完后，满足每个词的单字必须间距为1。这样可以保证100%的召回率，但是在索引方面将造成索引臃肿，同时查询速度也将在某程度上降低，一般来说，在150W文章数据到200W数据的时候性能将会明显的降低。&lt;br /&gt;&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-size: small;&#34;&gt;&lt;strong&gt;Range Searches &lt;/strong&gt; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;strong&gt;&lt;/strong&gt; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;strong&gt;&lt;/strong&gt; &lt;/span&gt; &lt;strong&gt;&lt;span style=&#34;color: #ff0000; font-size: small;&#34;&gt;&lt;strong&gt;org.apache.lucene.search.&lt;/strong&gt; &lt;/span&gt; &lt;/strong&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;strong&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;RangeQuery&lt;/span&gt; &lt;/strong&gt; ]&lt;br /&gt; 范围查询允许你指定某个字段最大值和最小值，查询在二者之间的所有文档。范围查询可以包含或者不包含最大值和最小值，排序是按照字典顺序来排序的。&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;mod_date:[20020101 TO 20030101] &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 这个将查找满足mode_date字段在大于等于20020101，小于等于20030101范围的所有文档，注意：范围查询并不是为日期字段专设的，你也可以对非日期字段进行范围查询。&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;title:{Aida TO Carmen} &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 这个将查找所有标题在Aida和Carmen之间但不包含Aida和Carmen的文档。包含最大值和最小值的查询使用方括号，排除则使用花括号。&lt;br /&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;strong&gt;三、优先级&lt;/strong&gt; &lt;/span&gt; &lt;br /&gt;&lt;strong&gt;Boosting a Term &lt;/strong&gt; &lt;br /&gt; Lucene支持给不同的查询词设置不同的权重。设置权重使用“^”符号，将“^”放于查询词的尾部，同时跟上权重值，权重因子越大，该词越重要。设置权重允许你通过给不同的查询词设置不同的权重来影响文档的相关性，假如你在搜索：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;jakarta apache &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 如果你认为“jakarta”在查询时中更加重要，你可以使用如下语法：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;jakarta^4 apache &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 这将使含有Jakarta的文档具有更高的相关性，同样你也可以给短语设置权重如下：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;&amp;quot;jakarta apache&amp;quot;^4 &amp;quot;jakarta lucene&amp;quot; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 在默认情况下，权重因子为1，当然权重因子也可以小于1。&lt;br /&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;strong&gt;四、Term操作符&lt;/strong&gt; &lt;/span&gt; &lt;br /&gt;&lt;strong&gt;Boolean operators &lt;/strong&gt; &lt;br /&gt; 布尔操作符可以将多个Term合并为一个复杂的逻辑查询。Lucene支持AND，&lt;br /&gt; +，OR，NOT， -作为操作符号。注意，所有的符号必须为大写。&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;OR &lt;/strong&gt; &lt;br /&gt; OR操作符默认的连接操作符。这意味着，当没有给多个Term显式指定操作符时，将使用OR，只要其中一个Term含有，则可以查询出文档，这跟逻辑符 号||的意思相似。假设我们查询一个文档含有“jakarta apache”或者“jakarta”时，我们可以使用如下语法：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;&amp;quot;jakarta apache&amp;quot; jakarta &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 或者&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;&amp;quot;jakarta apache&amp;quot; OR jakarta &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;AND &lt;/strong&gt; &lt;br /&gt; AND操作符规定必须所有的Term都出现才能满足查询条件，这跟逻辑符号&amp;amp;&amp;amp;意思相似。如果我们要搜索一个文档中同时含有“jakarta apache”和“jakarta lucene”，我们可以使用如下语法：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;quot;jakarta apache&amp;quot; AND &amp;quot;jakarta lucene&amp;quot; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;+&lt;/strong&gt; &lt;br /&gt; +操作符规定在其后的Term必须出现在文档中，也就是查询词中的MUST属性。举个例子来说，当我们要查询一个文档必须包含“jakarta”，同时可以包含也可以不包含“lucene”时，我们可以使用如下语法：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;+jakarta apache &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;NOT &lt;/strong&gt; &lt;br /&gt; NOT操作符规定查询的文档必须不包含NOT之后的Term，这跟逻辑符号中的!相似。当我们要搜索一篇文档中必须含有“jakarta apache”同时不能含有“Jakarta lucene”时，我们可以使用如下查询；&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;&amp;quot;jakarta apache&amp;quot; NOT &amp;quot;jakarta lucene&amp;quot; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 注意：NOT操作符不能使用在单独Term中，举例来说，以下查询将返回无结果：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;NOT &amp;quot;jakarta apache&amp;quot; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;- &lt;/strong&gt; &lt;br /&gt; -操作符排除了包含其后Term的文档，跟NOT有点类似，假设我们要搜索“Jakarta apache”但不包含“Jakarta lucene”时，我们使用如下语法：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;&amp;quot;jakarta apache&amp;quot; -&amp;quot;jakarta lucene&amp;quot; &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Grouping &lt;/strong&gt; &lt;br /&gt; Lucene支持使用圆括号来将查询表达式分组，这将在控制布尔控制查询中非常有用。举例来说：当搜索必须含有“website”，另外必须含有“jakarta”和“apache”之一，我们可以用如下语法：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;(jakarta OR apache) AND website &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 这种语法对消除歧义，确保查询表达式的正确性具有很大的意义。&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Field Grouping &lt;/strong&gt; &lt;br /&gt; Lucene支持对字段用圆括号来进行分组，当我们要查询标题中含有“return”和“pink ranther”时，我们可以使用如下语法：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;title:(+return +&amp;quot;pink panther&amp;quot;) &lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Escaping Special Characters &lt;/strong&gt; &lt;br /&gt; Lucene支持转义查询中的特殊字符，以下是Lucene的特殊字符清单：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;+ - &amp;amp;&amp;amp; || ! ( ) { } [ ] ^ &amp;quot; ~ * ? : \&lt;/span&gt; &lt;span style=&#34;font-size: small;&#34;&gt;&lt;br /&gt; 转义特殊字符我们可以使用符号“\”放于字符之前。比如我们要搜索(1+1):2，我们可以使用如下语法：&lt;br /&gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-size: small;&#34;&gt;\(1\+1\)\:2 &lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;strong&gt;Tips&lt;/strong&gt; &lt;/span&gt; : QueryParser.escape(q)&amp;nbsp; 可转换q中含有查询关键字的字符！如：* ,? 等&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;英文原文地址：&lt;a href=&#34;http://lucene.apache.org/java/2_4_0/queryparsersyntax.html&#34; target=&#34;_blank&#34;&gt;http://lucene.apache.org/java/2_4_0/queryparsersyntax.html&lt;/a&gt; &lt;/span&gt; &lt;/strong&gt; &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>终于能进了</title>
      <link>https://helao.net/2010/48.html</link>
      <pubDate>2010-11-24 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;终于进来了，今天用了一下maven，和eclipse结合起来挺方便的，只不过没找到关于maven的命令手册，maven的书里也没有详细的命令解释，争取找个maven的详细命令的chm。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>补昨天的东西</title>
      <link>https://helao.net/2010/47.html</link>
      <pubDate>2010-11-24 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;发现springside，原来springside 是常用框架的集合，只是对这些框架进行了整合，使企业开发更方便。&lt;/p&gt; &lt;p&gt;这个项目可以让我对框架的整合 进行熟悉，让我了解一些目前还不知道的框架。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>maven常用命令</title>
      <link>https://helao.net/2010/46.html</link>
      <pubDate>2010-11-24 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;mvn help:describe -Dplugin=&lt;span style=&#34;color: #ff0000;&#34;&gt;help&lt;/span&gt; &amp;nbsp;查看插件的详细情况&lt;/p&gt; &lt;p&gt;mvn archetype：create &lt;span style=&#34;color: #ff0000;&#34;&gt;-DgroupId=yougroup -DartifactId=yourartid&lt;/span&gt; -DpackageName=yourpackage &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -Dversion=yourversion &amp;nbsp; 生成一个新项目 ，红色的两个参数是必须的，可选参数可以用 help查看&lt;/p&gt; &lt;p&gt;mvn &amp;nbsp;install &amp;nbsp; &amp;nbsp;编译 &amp;nbsp;，单元测试，打包项目， &amp;nbsp;-X 可以打开调试开关，查看包的依赖关系，当包冲突时可以用来查看。&lt;/p&gt; &lt;p&gt;mvn &amp;nbsp;test &amp;nbsp; &amp;nbsp; 对项目进行单元测试&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;mvn exec:java -DmainClass=yourmainclass &amp;nbsp;执行项目，只需要指定main类就行，该插件会自动寻找jar包&lt;/p&gt; &lt;p&gt;mvn dependency:resolve &amp;nbsp; &amp;nbsp; :tree &amp;nbsp; &amp;nbsp;输出项目对包的依赖， 后面是树形显示&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;我再仔细看看文档争取把使用命令详细的整理出来，以后查着方便&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>lucene 使用总结</title>
      <link>https://helao.net/2010/45.html</link>
      <pubDate>2010-11-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;终于全文检索这块弄完了，在此总结一下。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;先介绍一下为什么要用全文检索，当数据库查询字符串时 通常用like 来进行比较，当有大量文本时，从中检索出有用的信息会产生大量的性能开销，而全文检索，则是先对文本进行分词，然后对词进行索引，因此你搜索一个词时 ，速度会很快。&lt;/p&gt; &lt;p&gt;不过建立索引的过程 也是一个很大的开销,^_^。索引只需要建立一次，以后就可以很方便的进行查询了。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;lucene是一个用java编写的全文检索的组件，是对上面的全文检索原理的实现，可以很方便的集成到自己的系统中，实现自己的全文检索。lucene对中文支持不好，需要使用其他的中文分词包，目前比较好的 有:ik,paoding,je 等。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; lucene的基本存储单位是 &amp;nbsp;document ，可以将其和record等价，因此你可以写convert方法，将record转换成document就能进行索引了。field可以看成字段&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;lucene有 &amp;nbsp;delete，save,search三个基本操作。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;delete操作， &amp;nbsp;indexReader.delete(term),indexReader(int doc)&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;indexwriter 中也有相应的方法&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;save 操作，只能通过indexwriter 来进行 &amp;nbsp;indexwrite.addDocument()&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;查询 &amp;nbsp; &amp;nbsp;. &amp;nbsp;indexsearch.search(query ,topcollector)&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;有 termquery 可以查询一个字段，booleanquery可以查询多个字段&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;lucene还支持查询语法，常用的有 &amp;nbsp;and &amp;nbsp;or &amp;nbsp;not 其他的我没去记 &amp;nbsp;^_^&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;topcollector 中有一个topdocs（）方法，这个方法是生成 topdoc[] 只能调用一次。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>spring事物和db连接池的一些想法</title>
      <link>https://helao.net/2010/44.html</link>
      <pubDate>2010-11-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;当用spring的事物来管理 hibernate的session时，如果在事物中进行了 delete，save，update等操作，则连接不会释放，需要等到事物完成后才会进行关闭，所以当事物中有大量连接时 可想而知 ，这是个灾难。&lt;/p&gt; &lt;p&gt;按照我的想法，只对特定标识的 方法进行事物控制，这需要一个命名规则的问题。其他的方法不需要进行控制，没必要，要不然事物粒度太小了。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;我遇到了两个问题： updateA( &amp;nbsp;调用1000次 &amp;nbsp;updateB) &amp;nbsp;; &amp;nbsp;updateB（ updateC,updateD,...）&lt;/p&gt; &lt;p&gt;我将update开头的方法都进行了事物拦截， &amp;nbsp; updateB是private的。&lt;/p&gt; &lt;p&gt;每次我调用updateA时 ，就会产生几千个数据库连接 ，于是连接池爆满，然后挂掉。&lt;/p&gt; &lt;p&gt;这里是能理解的 &amp;nbsp;，updateB中产生了 数据操作， 于是连接不会关闭，等待事物关闭后才能释放。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;我去掉数据库连接池，采用直连的方式，连接数据库，则连接就不会超过10个，当数据库连接调用完后，连接释放了。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;我一直搞不明白这是怎么回事，貌似在 直连和连接池下，事物的实现方式是不一样的 &amp;nbsp;。唉去研究他们的源码。郁闷&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>谷歌地图，要研究谷歌地图了</title>
      <link>https://helao.net/2010/43.html</link>
      <pubDate>2010-11-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;要研究谷歌地图了，争取周一能将简单教程添加上啊&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>正则表达式基础</title>
      <link>https://helao.net/2010/42.html</link>
      <pubDate>2010-11-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt; &lt;/p&gt; &lt;p&gt;元字符:&lt;/p&gt; &lt;p&gt;/b 代表着单词的开头或结尾，也就是单词的分界处.如果要精确地查找hi这个单词的话，我们应该使用/bhi/b.&lt;/p&gt; &lt;p&gt;.是另一个元字符，匹配除了换行符以外的任意字符,*同样是元字符，它指定*前边的内容可以重复任意次以使整个表达式得到匹配。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;.*连在一起就意味着任意数量的不包含换行的字符。&lt;/p&gt; &lt;p&gt;/d是一个新的元字符，匹配任意的数字,0/d/d-/d/d/d/d/d/d/d/d也就是中国的电话号码.为了避免那么多烦人的重复，我们也可以这样写这个表达式：0/d{2}-/d{8}。&lt;/p&gt; &lt;p&gt;/s匹配任意的空白符，包括空格，制表符(Tab)，换行符，中文全角空格等。/w匹配字母或数字或下划线或汉字。&lt;/p&gt; &lt;p&gt;/b/w{6}/b 匹配刚好6个字母/数字的单词。&lt;/p&gt; &lt;p&gt;字符转义：使用/来取消这些字符的特殊意义。因此，你应该使用/.和/*。当然，要查找/本身，你也得用//。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;代码 &amp;nbsp; &amp;nbsp; 说明&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; . &amp;nbsp;匹配除换行符以外的任意字符&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;/w &amp;nbsp;匹配字母或数字或下划线或汉字&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;/s &amp;nbsp;匹配任意的空白符&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;/d &amp;nbsp;匹配数字&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;/b &amp;nbsp;匹配单词的开始或结束&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;^ &amp;nbsp; 匹配字符串的开始&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;$ &amp;nbsp; 匹配字符串的结束&lt;/p&gt; &lt;p&gt;重复：&lt;/p&gt; &lt;p&gt;常用的限定符&amp;nbsp;&lt;/p&gt; &lt;p&gt;代码/语法 &amp;nbsp;说明&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; * &amp;nbsp;重复零次或更多次&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; + &amp;nbsp;重复一次或更多次&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; ? &amp;nbsp;重复零次或一次&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;{n} 重复n次&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;{n,} 重复n次或更多次&amp;nbsp;&lt;/p&gt; &lt;p&gt;{n,m} 重复n到m次&lt;/p&gt; &lt;p&gt;要想查找数字，字母或数字，你只需要在中括号里列出它们就行了，像[aeiou]就匹配任何一个元音字母，[.?!]匹配标点符号(.或?或!)&lt;/p&gt; &lt;p&gt;反义：&lt;/p&gt; &lt;p&gt;&amp;nbsp;常用的反义代码&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;代码/语法 &amp;nbsp; 说明&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; /W &amp;nbsp; 匹配任意不是字母，数字，下划线，汉字的字符&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; /S &amp;nbsp; 匹配任意不是空白符的字符&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; /D &amp;nbsp; 匹配任意非数字的字符&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; /B &amp;nbsp; 匹配不是单词开头或结束的位置&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;[^x] &amp;nbsp; 匹配除了x以外的任意字符&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;[^aeiou] &amp;nbsp; 匹配除了aeiou这几个字母以外的任意字符&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;替换：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; 正则表达式里的替换指的是有几种规则，如果满足其中任意一种规则都应该当成匹配，具体方法是用|把不同的规则分隔开。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; 0/d{2}-/d{8}|0/d{3}-/d{7}这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8位本地号(如010-12345678)，一种是4位区号，7位本地号(0376-2233445)。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; /(0/d{2}/)[- ]?/d{8}|0/d{2}[- ]?/d{8}这个表达式匹配3位区号的电话号码，其中区号可以用小括号括起来，也可以不用，区号与本地号间可以用连字号或空格间隔，也可以没有间隔。你可以试试用替换|把这个表达式扩展成也支持4位区号的。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; /d{5}-/d{4}|/d{5}这个表达式用于匹配美国的邮政编码。美国邮编的规则是5位数字，或者用连字号间隔的9位数字。之所以要给出这个例子是因为它能说明一个问题：使用替换时，顺序是很重要的。如果你把它改成/d{5}|/d{5}-/d{4}的话，那么就只会匹配5位的邮编(以及9位邮编的前5位)。原因是匹配替换时，将会从左到右地测试每个分枝条件，如果满足了某个分枝的话，就不会去管其它的替换条件了。&lt;/p&gt; &lt;p&gt;分组：&lt;/p&gt; &lt;p&gt;如果想要重复一个字符串又该怎么办？你可以用小括号来指定子表达式(也叫做分组)，然后你就可以指定这个子表达式的重复次数了。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; (/d{1,3}/.){3}/d{1,3}是一个简单的IP地址匹配表达式。要理解这个表达式，请按下列顺序分析它：/d{1,3}匹配1到3位的数字，(/d{1,3}/.}{3}匹配三位数字加上一个英文句号(这个整体也就是这个分组)重复3次，最后再加上一个一到三位的数字(/d{1,3})。不幸的是，它也将匹配256.300.888.999这种不可能存在的IP地址(IP地址中每个数字都不能大于255)。如果能使用算术比较的话，或许能简单地解决这个问题，但是正则表达式中并不提供关于数学的任何功能，所以只能使用冗长的分组，选择，字符类来描述一个正确的IP地址：((2[0-4]/d|25[0-5]|[01]?/d/d?)/.){3}(2[0-4]/d|25[0-5]|[01]?/d/d?)。&lt;/p&gt; &lt;p&gt;后向引用：&lt;/p&gt; &lt;p&gt;后向引用用于重复搜索前面某个分组匹配的文本。例如，/1代表分组1匹配的文本。难以理解？请看示例：&lt;/p&gt; &lt;p&gt;/b(/w+)/b/s+/1/b可以用来匹配重复的单词，像go go, kitty kitty。首先是一个单词，也就是单词开始处和结束处之间的多于一个的字母或数字(/b(/w+)/b)，然后是1个或几个空白符(/s+，最后是前面匹配的那个单词(/1)。&lt;/p&gt; &lt;p&gt;懒惰限定符&amp;nbsp;&lt;/p&gt; &lt;p&gt;*? 重复任意次，但尽可能少重复&amp;nbsp;&lt;/p&gt; &lt;p&gt;+? 重复1次或更多次，但尽可能少重复&amp;nbsp;&lt;/p&gt; &lt;p&gt;?? 重复0次或1次，但尽可能少重复&amp;nbsp;&lt;/p&gt; &lt;p&gt;{n,m}? 重复n到m次，但尽可能少重复&amp;nbsp;&lt;/p&gt; &lt;p&gt;{n,}? 重复n次以上，但尽可能少重复&lt;/p&gt; &lt;p&gt;位置指定:&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;接下来的四个用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们用于指定一个位置，就像/b,^,$那样，因此它们也被称为零宽断言。最好还是拿例子来说明吧：&lt;/p&gt; &lt;p&gt;(?=exp)也叫零宽先行断言，它匹配文本中的某些位置，这些位置的后面能匹配给定的后缀exp。比如/b/w+(?=ing/b)，匹配以ing结尾的单词的前面部分(除了ing以外的部分)，如果在查找I&#39;m singing while you&#39;re dancing.时，它会匹配sing和danc。&lt;/p&gt; &lt;p&gt;(?&amp;lt;=exp)也叫零宽后行断言，它匹配文本中的某些位置，这些位置的前面能给定的前缀匹配exp。比如(?&amp;lt;=/bre)/w+/b会匹配以re开头的单词的后半部分(除了re以外的部分)，例如在查找reading a book时，它匹配ading。&lt;/p&gt; &lt;p&gt;假如你想要给一个很长的数字中每三位间加一个逗号(当然是从右边加起了)，你可以这样查找需要在前面和里面添加逗号的部分：((?&amp;lt;=/d)/d{3})*/b。请仔细分析这个表达式，它可能不像你第一眼看出来的那么简单。&lt;/p&gt; &lt;p&gt;下面这个例子同时使用了前缀和后缀：(?&amp;lt;=/s)/d+(?=/s)匹配以空白符间隔的数字(再次强调，不包括这些空白符)。&lt;/p&gt; &lt;p&gt;负向位置指定:&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;前面我们提到过怎么查找不是某个字符或不在某个字符类里的字符的方法(反义)。但是如果我们只是想要确保某个字符没有出现，但并不想去匹配它时怎么办？例如，如果我们想查找这样的单词--它里面出现了字母q,但是q后面跟的不是字母u,我们可以尝试这样：&lt;/p&gt; &lt;p&gt;/b/w*q[^u]/w*/b匹配包含后面不是字母u的字母q的单词。但是如果多做测试(或者你思维足够敏锐，直接就观察出来了)，你会发现，如果q出现在单词的结尾的话，像Iraq,Benq，这个表达式就会出错。这是因为[^u]总是匹配一个字符，所以如果q是单词的最后一个字符的话，后面的[^u]将会匹配q后面的单词分隔符(可能是空格，或者是句号或其它的什么)，后面的/w+/b将会匹配下一个单词，于是/b/w*q[^u]/w*/b就能匹配整个Iraq fighting。负向位置指定能解决这样的问题，因为它只匹配一个位置，并不消费任何字符。现在，我们可以这样来解决这个问题：/b/w*q(?!u)/w*/b。&lt;/p&gt; &lt;p&gt;零宽负向先行断言(?!exp)，只会匹配后缀exp不存在的位置。/d{3}(?!/d)匹配三位数字，而且这三位数字的后面不能是数字。&lt;/p&gt; &lt;p&gt;同理，我们可以用(?&amp;lt;!exp),零宽负向后行断言来查找前缀exp不存在的位置：(?&amp;lt;![a-z])/d{7}匹配前面不是小写字母的七位数字(实验时发现错误？注意你的“区分大小写”先项是否选中)。&lt;/p&gt; &lt;p&gt;一个更复杂的例子：(?&amp;lt;=&amp;lt;(/w+)&amp;gt;).*(?=&amp;lt;///1&amp;gt;)匹配不包含属性的简单HTML标签内里的内容。(&amp;lt;?(/w+)&amp;gt;)指定了这样的前缀：被尖括号括起来的单词(比如可能是&amp;lt;b&amp;gt;)，然后是.*(任意的字符串),最后是一个后缀(?=&amp;lt;///1&amp;gt;)。注意后缀里的//，它用到了前面提过的字符转义；/1则是一个反向引用，引用的正是捕获的第一组，前面的(/w+)匹配的内容，这样如果前缀实际上是&amp;lt;b&amp;gt;的话，后缀就是&amp;lt;/b&amp;gt;了。整个表达式匹配的是&amp;lt;b&amp;gt;和&amp;lt;/b&amp;gt;之间的内容(再次提醒，不包括前缀和后缀本身)。&lt;/p&gt; &lt;p&gt;注释:&lt;/p&gt; &lt;p&gt;小括号的另一种用途是能过语法(?#comment)来包含注释。例如：2[0-4]/d(?#200-249)|25[0-5](?#250-255)|[01]?/d/d?(?#0-199)。&lt;/p&gt; &lt;p&gt;要包含注释的话，最好是启用“忽略模式里的空白符”选项，这样在编写表达式时能任意的添加空格，Tab，换行，而实际使用时这些都将被忽略。启用这个选项后，在#后面到这一行结束的所有文本都将被当成注释忽略掉。&lt;/p&gt; &lt;p&gt;例如，我们可以前面的一个表达式写成这样：&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;(?&amp;lt;= &amp;nbsp; &amp;nbsp;# 查找前缀，但不包含它&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;(/w+)&amp;gt; # 查找尖括号括起来的字母或数字(标签)&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;) &amp;nbsp; &amp;nbsp; &amp;nbsp; # 前缀结束&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;.* &amp;nbsp; &amp;nbsp; &amp;nbsp;# 匹配任意文本&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;(?= &amp;nbsp; &amp;nbsp; # 查找后缀，但不包含它&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;///1&amp;gt; &amp;nbsp;# 查找尖括号括起来的内容：前面是一个&amp;quot;/&amp;quot;，后面是先前捕获的标签&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;) &amp;nbsp; &amp;nbsp; &amp;nbsp; # 后缀结束&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;贪婪与懒惰:&lt;/p&gt; &lt;p&gt;当正则表达式中包含能接受重复的限定符(指定数量的代码，例如*,{5,12}等)时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符。考虑这个表达式：a.*b，它将会匹配最长的以a开始，以b结束的字符串。如果用它来搜索aabab的话，它会匹配整个字符串aabab。这被称为贪婪匹配。&lt;/p&gt; &lt;p&gt;有时，我们更需要懒惰匹配，也就是匹配尽可能少的字符。前面给出的限定符都可以被转化为懒惰匹配模式，只要在它后面加上一个问号?。这样.*?就意味着匹配任意数量的重复，但是在能使整个匹配成功的前提下使用最少的重复。现在看看懒惰版的例子吧：&lt;/p&gt; &lt;p&gt;a.*?b匹配最短的，以a开始，以b结束的字符串。如果把它应用于aabab的话，它会匹配aab和ab（为什么第一个匹配是aab而不是ab？简单地说，最先开始的区配最有最大的优先权——The Match That Begins Earliest Wins）。&lt;/p&gt; &lt;p&gt;表5.懒惰限定符 *? 重复任意次，但尽可能少重复&amp;nbsp;&lt;/p&gt; &lt;p&gt;+? 重复1次或更多次，但尽可能少重复&amp;nbsp;&lt;/p&gt; &lt;p&gt;?? 重复0次或1次，但尽可能少重复&amp;nbsp;&lt;/p&gt; &lt;p&gt;{n,m}? 重复n到m次，但尽可能少重复&amp;nbsp;&lt;/p&gt; &lt;p&gt;{n,}? 重复n次以上，但尽可能少重复&amp;nbsp;&lt;/p&gt; &lt;p&gt;-------------------------------------------------------&lt;/p&gt; &lt;p&gt;下面是一些常用的正则表达式:&lt;/p&gt; &lt;p&gt;匹配中文字符的正则表达式： [/u4e00-/u9fa5]&lt;/p&gt; &lt;p&gt;评注：匹配中文还真是个头疼的事，有了这个表达式就好办了&lt;/p&gt; &lt;p&gt;匹配双字节字符(包括汉字在内)：[^/x00-/xff]&lt;/p&gt; &lt;p&gt;评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）&lt;/p&gt; &lt;p&gt;匹配空白行的正则表达式：/n/s*/r&lt;/p&gt; &lt;p&gt;评注：可以用来删除空白行&lt;/p&gt; &lt;p&gt;匹配HTML标记的正则表达式：&amp;lt;(/S*?)[^&amp;gt;]*&amp;gt;.*?&amp;lt;//1&amp;gt;|&amp;lt;.*? /&amp;gt;&lt;/p&gt; &lt;p&gt;评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力&lt;/p&gt; &lt;p&gt;匹配首尾空白字符的正则表达式：^/s*|/s*$&lt;/p&gt; &lt;p&gt;评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式&lt;/p&gt; &lt;p&gt;匹配Email地址的正则表达式：/w+([-+.]/w+)*@/w+([-.]/w+)*/./w+([-.]/w+)*&lt;/p&gt; &lt;p&gt;评注：表单验证时很实用&lt;/p&gt; &lt;p&gt;匹配网址URL的正则表达式：[a-zA-z]+://[^/s]*&lt;/p&gt; &lt;p&gt;评注：网上流传的版本功能很有限，上面这个基本可以满足需求&lt;/p&gt; &lt;p&gt;匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$&lt;/p&gt; &lt;p&gt;评注：表单验证时很实用&lt;/p&gt; &lt;p&gt;匹配国内电话号码：/d{3}-/d{8}|/d{4}-/d{7}&lt;/p&gt; &lt;p&gt;评注：匹配形式如 0511-4405222 或 021-87888822&lt;/p&gt; &lt;p&gt;匹配腾讯QQ号：[1-9][0-9]{4,}&lt;/p&gt; &lt;p&gt;评注：腾讯QQ号从10000开始&lt;/p&gt; &lt;p&gt;匹配中国邮政编码：[1-9]/d{5}(?!/d)&lt;/p&gt; &lt;p&gt;评注：中国邮政编码为6位数字&lt;/p&gt; &lt;p&gt;匹配身份证：/d{15}|/d{18}&lt;/p&gt; &lt;p&gt;评注：中国的身份证为15位或18位&lt;/p&gt; &lt;p&gt;匹配ip地址：/d+/./d+/./d+/./d+&lt;/p&gt; &lt;p&gt;评注：提取ip地址时有用&lt;/p&gt; &lt;p&gt;匹配特定数字：&lt;/p&gt; &lt;p&gt;^[1-9]/d*$ //匹配正整数&lt;/p&gt; &lt;p&gt;^-[1-9]/d*$ //匹配负整数&lt;/p&gt; &lt;p&gt;^-?[1-9]/d*$ //匹配整数&lt;/p&gt; &lt;p&gt;^[1-9]/d*|0$ //匹配非负整数（正整数 + 0）&lt;/p&gt; &lt;p&gt;^-[1-9]/d*|0$ //匹配非正整数（负整数 + 0）&lt;/p&gt; &lt;p&gt;^[1-9]/d*/./d*|0/./d*[1-9]/d*$ //匹配正浮点数&lt;/p&gt; &lt;p&gt;^-([1-9]/d*/./d*|0/./d*[1-9]/d*)$ //匹配负浮点数&lt;/p&gt; &lt;p&gt;^-?([1-9]/d*/./d*|0/./d*[1-9]/d*|0?/.0+|0)$ //匹配浮点数&lt;/p&gt; &lt;p&gt;^[1-9]/d*/./d*|0/./d*[1-9]/d*|0?/.0+|0$ //匹配非负浮点数（正浮点数 + 0）&lt;/p&gt; &lt;p&gt;^(-([1-9]/d*/./d*|0/./d*[1-9]/d*))|0?/.0+|0$ //匹配非正浮点数（负浮点数 + 0）&lt;/p&gt; &lt;p&gt;评注：处理大量数据时有用，具体应用时注意修正&lt;/p&gt; &lt;p&gt;匹配特定字符串：&lt;/p&gt; &lt;p&gt;^[A-Za-z]+$ //匹配由26个英文字母组成的字符串&lt;/p&gt; &lt;p&gt;^[A-Z]+$ //匹配由26个英文字母的大写组成的字符串&lt;/p&gt; &lt;p&gt;^[a-z]+$ //匹配由26个英文字母的小写组成的字符串&lt;/p&gt; &lt;p&gt;^[A-Za-z0-9]+$ //匹配由数字和26个英文字母组成的字符串&lt;/p&gt; &lt;p&gt;^/w+$ //匹配由数字、26个英文字母或者下划线组成的字符串&lt;/p&gt; &lt;p&gt;评注：最基本也是最常用的一些表达式&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>lucene 入门的小例子</title>
      <link>https://helao.net/2010/41.html</link>
      <pubDate>2010-11-16 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    lucene 是一个全文检索的纯java的工具，对中文分词支持不好，需要其他分词组件支持 如 ikanalysize , paoding ，je 等。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    lucene 的基本流程，首先需要建立索引 &amp;nbsp;index , 然后就是搜索索引 search 。&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    下面放出一个入门的例子&#xA;&lt;/p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public void testIndexAndSearchold() throws CorruptIndexException, LockObtainFailedException, IOException, ParseException{&#xA;  Analyzer analyzer = new StandardAnalyzer();&#xA;&#xA;  // Store the index in memory:&#xA;  Directory directory = new RAMDirectory();&#xA;  // To store an index on disk, use this instead:&#xA;  //Directory directory = FSDirectory.getDirectory(&#34;/tmp/testindex&#34;);&#xA;  IndexWriter iwriter = new IndexWriter(directory, analyzer, IndexWriter.MaxFieldLength.LIMITED);&#xA;  Document doc = new Document();&#xA;  String text = &#34;This is the text to be indexed.&#34;;&#xA;  doc.add(new Field(&#34;fieldname&#34;, text, Field.Store.YES,&#xA;  Field.Index.ANALYZED));&#xA;  iwriter.addDocument(doc);&#xA;  iwriter.optimize();&#xA;  iwriter.close();&#xA; &#xA;  // Now search the index:&#xA;  IndexSearcher isearcher = new IndexSearcher(directory);&#xA;  // Parse a simple query that searches for &#34;text&#34;:&#xA;  QueryParser parser = new QueryParser(&#34;fieldname&#34;, analyzer);&#xA;  Query query = parser.parse(&#34;text&#34;);&#xA;  TopDocCollector hits = new TopDocCollector(0);&#xA;  isearcher.search(query,hits);&#xA;  assertEquals(1, hits.getTotalHits());&#xA;  // Iterate through the results:&#xA;  for (int i = 0; i &amp;lt; hits.getTotalHits(); i++) {&#xA;  Document hitDoc = isearcher.doc(i);&#xA;  assertEquals(&#34;This is the text to be indexed.&#34;, hitDoc.get(&#34;fieldname&#34;));&#xA;  }&#xA;  isearcher.close();&#xA;  directory.close();&#xA;&lt;/pre&gt;&#xA;&lt;p&gt;&#xA;    &lt;span style=&#34;white-space:pre;&#34;&gt; &lt;/span&gt;}&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>今天遇到一个weblogic的 奇怪的问题</title>
      <link>https://helao.net/2010/40.html</link>
      <pubDate>2010-11-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;我用eclipse将项目部署到weblogic后，启动weblogic很快就起来了，我开始还很高兴，仔细一看 。。居然没启动我的项目。我用浏览器打开localhost:7001,果然出现了404错误。&amp;nbsp; 我进入控制台，发现已经有我的项目了，就是不能启动好像少什么东西。&lt;/p&gt; &lt;p&gt;1 我删除了项目，重新部署&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 失败&lt;/p&gt; &lt;p&gt;2 ，我删除domain， 重新建立一个，部署项目，启动失败&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;我试了好几次结果都一样。&amp;nbsp;&amp;nbsp; 我在网上搜了一会，并没有发现什么有价值的东西。&lt;/p&gt; &lt;p&gt;后来问同事，他问我在控制台 是不是没有点击 激活 或者保存。&amp;nbsp;&amp;nbsp; 他给我操作了一下，虽然仍然报错了，但万幸 weblogic终于加载项目了。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;我以前都是部署项目后，启动服务器就会自动部署使用项目的，不知道今天出什么了问题。&lt;/p&gt; &lt;p&gt;记在这里以后遇到这种问题可以查一查&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>今天用spring 事务出了一个很郁闷的问题</title>
      <link>https://helao.net/2010/39.html</link>
      <pubDate>2010-11-11 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;这个项目采用 ssh 框架，使用spring的声明式代理拦截器事务管理hibernate的session关闭，这样平时是很正常的。&lt;/p&gt; &lt;p&gt;可我有一个方法会产生几百条的查询语句，public&amp;nbsp; function&amp;nbsp;&amp;nbsp; a {for(1000)&amp;nbsp;&amp;nbsp; b()；} private&amp;nbsp; function&amp;nbsp; b(){querydb();} // 这只是一条查询语句&amp;nbsp; 。 一调用a方法&amp;nbsp;&amp;nbsp; 于是乎 就 “can not open connection”。从监视器能看到服务器打开了好几百个数据库连接。&lt;/p&gt; &lt;p&gt;我知道spring拦截器会拦截我的方法 并为其开一个事物 ，在配置文件里不配置这个方法，不拦截于是就不会有事物了，就不会再单独打开链接了，事物在这本来就是重复了，不应该在单独开启事物的。不知道spring有没有提供这个参数，去看文档了，先记下这么多，等解决了问题，再来详细整理。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;这个问题已经找到原因了， 这些没有释放的连接 是因为有语句执行了update 和inset，delete语句，先汗一个&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;操作数据的 那些语句提取出来，集中进行 commit，这样就ok了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>上周末用 grub 安装了ubuntu 10.10</title>
      <link>https://helao.net/2010/38.html</link>
      <pubDate>2010-11-01 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;上周末 终于安装了 ubuntu10.10&amp;nbsp; ，安装的是 kanas-ubuntu-10.10-desktop-i386.iso 中文定制版,&amp;nbsp; 算是减小了入门的难度吧，里面默认安装了中文字体输入法，flash，播放器，chm等，感兴趣的可以安装试试。&lt;/p&gt; &lt;p&gt;本来打算用wubi安装的，结果这个iso没提供这个选项，又没条件去刻一张dvd，只好查资料准备采用 grub安装，&lt;/p&gt; &lt;p&gt;安装教程 网上有很多，我用的是这个。&lt;/p&gt; &lt;p&gt;xp下安装和配置启动grub，以及grub【windows版】下载 看：&lt;a class=&#34;external free&#34; title=&#34;http://www.ylmf.net/read.php?tid=1329214&#34; rel=&#34;nofollow&#34; href=&#34;http://www.ylmf.net/read.php?tid=1329214&#34;&gt;http://www.ylmf.net/read.php?tid=1329214&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;下载并解压缩后，将目录中的 grldr , grldr.mbr ， grub.exe 三个文件复制到 C 盘根目录下&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;2、Grub安装Ubuntu在下载好的 ubuntu 10.10 系统 iso 文件中&lt;/strong&gt; ， casper 文件夹目录下，找到 vmlinuz 、 initrd.lz （注意： ubuntu9.04 文件名为 initrd.gz ）解压，并复制到 C 盘根目录下（无需解压整个 casper 文件夹，整个 casper 文件夹很大）&lt;/p&gt; &lt;p&gt;将iso 文件也放到C盘根目录上。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;新建 C:\menu.lst文件 打开C:menu.lst，在里面增加下面一段话。 &lt;/p&gt; &lt;pre&gt;    title Boot ubuntuISO    find --set-root /ubuntu-9.04-desktop-i386.iso    map --mem /ubuntu-9.04-desktop-i386.iso (hd32)    map --hook    chainloader (hd32)    boot&lt;/pre&gt; &lt;p&gt;保存并退出。 &lt;/p&gt; &lt;p&gt;&lt;a class=&#34;image&#34; title=&#34;Image:Grubiso.jpg&#34; href=&#34;http://wiki.ubuntu.org.cn/File:Grubiso.jpg&#34;&gt;&lt;br /&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;br /&gt; 六、下载ubuntu-9.04-desktop-i386.iso镜像文件，保存至X:\目录下，X代表xp下的任何一个盘符。记得一定要放到根目录下。至于为什么，大家应该都清楚吧。&amp;nbsp; &lt;/p&gt; &lt;p&gt; &lt;a id=&#34;.E5.A6.82.E6.9E.9C.E4.BD.A0.E4.B8.8B.E8.BD.BD.E7.9A.84.E6.98.AFDVD.E9.95.9C.E5.83.8F.E6.88.96.E6.89.93.E7.AE.97.E4.B8.8B.E8.BD.BDDVD.E9.95.9C.E5.83.8F&#34; name=&#34;.E5.A6.82.E6.9E.9C.E4.BD.A0.E4.B8.8B.E8.BD.BD.E7.9A.84.E6.98.AFDVD.E9.95.9C.E5.83.8F.E6.88.96.E6.89.93.E7.AE.97.E4.B8.8B.E8.BD.BDDVD.E9.95.9C.E5.83.8F&#34;&gt;&lt;/a&gt; &lt;/p&gt; &lt;h2&gt; &lt;span class=&#34;editsection&#34;&gt;[&lt;a title=&#34;编辑段落：如果你下载的是DVD镜像或打算下载DVD镜像&#34; href=&#34;http://wiki.ubuntu.org.cn/index.php?title=%E4%BD%BF%E7%94%A8Windows%E4%B8%8BGRUB%E5%BC%95%E5%AF%BC%E5%90%AF%E5%8A%A8ubuntu%E5%AE%89%E8%A3%85%E9%95%9C%E5%83%8F&amp;amp;action=edit&amp;amp;section=2&#34;&gt;编辑&lt;/a&gt; ]&lt;/span&gt; &lt;span class=&#34;mw-headline&#34;&gt; 如果你下载的是DVD镜像或打算下载DVD镜像 &lt;/span&gt; &lt;/h2&gt; &lt;p&gt;前面四步完全和CD镜像相同，下面将从第五步开始讲述&lt;br /&gt; 五、配置C:\menu.lst文件 打开C:menu.lst，在里面增加下面一段话。 &lt;/p&gt; &lt;pre&gt; title Boot UbuntuDVDfind --set-root /&lt;span style=&#34;color: #ff0000;&#34;&gt;ubuntu-10.10-dvd-i386.iso&lt;/span&gt;kernel vmlinuz iso-scan/filename=/&lt;span style=&#34;color: #ff0000;&#34;&gt;ubuntu-10.10-dvd-i386.iso&lt;/span&gt; boot=casper roinitrd initrd.gzboot&lt;/pre&gt; &lt;p&gt;六、把ubuntu-10.10-dvd-i386.iso放到一个分区的根目录下，再用虚拟光驱挂上，把光盘目录里的 /casper/initrd.gz和 /casper/vmlinuz 两个文件拷到和ubuntu-10.10-dvd-i386.iso同一分区下&lt;br /&gt; 下载就可以重启进入Grub选择Boot UbuntuDVD来安装Ubuntu了&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &lt;a class=&#34;image&#34; title=&#34;Image:Grubiso5.jpg&#34; href=&#34;http://wiki.ubuntu.org.cn/File:Grubiso5.jpg&#34;&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;进入 livecd 后 在终端 执行&amp;nbsp;&amp;nbsp; sudo umount -l /isoservice 将虚拟光驱卸载，要不然 你利用分区安装 时 会报错&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;安装完成后，会发现启动菜单上没有xp， 这个不用急，只需在终端 运行 sudo update-grub命令即可，然后重启就能在开机时看到 xp的选项了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>安装ubuntu之后</title>
      <link>https://helao.net/2010/37.html</link>
      <pubDate>2010-11-01 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;安装了ubuntu ,不知怎么回事， 我的本本开始不断的假死， 稍微有点什么操作就假死了，配置也没那么低啊，莫非是该清扫灰尘了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>想做点东西</title>
      <link>https://helao.net/2010/36.html</link>
      <pubDate>2010-11-01 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;想写一个桌面的blog 应用，不想每天都打开浏览器看了，尤其是在几个博客之间进行同步，很麻烦。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;其实我有一个计划的 ，写一个常用工具的桌面应用。如blog 同步更新，音乐，工作日志，工作安排，（任务跟踪），常用工具集。自己都计划好长时间了 一直因为自己懒 而没有开工。 从今天该开始了，不断学习才能不断进步。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>timer 计时器的使用</title>
      <link>https://helao.net/2010/35.html</link>
      <pubDate>2010-10-27 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;等等 一会出&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>ie6下 js 操作 window.location.href 不跳转 的解决方法</title>
      <link>https://helao.net/2010/34.html</link>
      <pubDate>2010-10-27 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;&#34;&gt; &lt;p style=&#34;margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; text-indent: 0px; padding: 0px;&#34;&gt;1、事件必须return false&lt;/p&gt; &lt;p style=&#34;margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; text-indent: 0px; padding: 0px;&#34;&gt; &amp;lt;a href=&amp;quot;javascript:;&amp;quot; onclick=&amp;quot;event();&lt;span style=&#34;color: red; padding: 0px; margin: 0px;&#34;&gt;return false;&lt;/span&gt;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; text-indent: 0px; padding: 0px;&#34;&gt;2、a标签的href属性设为一个锚点。&lt;br style=&#34;padding: 0px; margin: 0px;&#34; /&gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; text-indent: 0px; padding: 0px;&#34;&gt; &amp;lt;a&amp;nbsp;&lt;span style=&#34;color: red; padding: 0px; margin: 0px;&#34;&gt;href=&amp;quot;#&amp;quot;&lt;/span&gt;&amp;nbsp;onclick=&amp;quot;event();&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p&gt; &lt;p style=&#34;margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; text-indent: 0px; padding: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;p style=&#34;margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; text-indent: 0px; padding: 0px;&#34;&gt;必须在event（） 后添加 return false; 在event（）{return false;}不行。&lt;/p&gt; &lt;p style=&#34;margin-top: 5px; margin-right: auto; margin-bottom: 5px; margin-left: auto; text-indent: 0px; padding: 0px;&#34;&gt;实在想不明白其中的区别，就先记住吧。&lt;/p&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>抓取网页</title>
      <link>https://helao.net/2010/33.html</link>
      <pubDate>2010-10-22 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    public static String getHtmlByUrl(String url) throws IOException {&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt; URL htmlUrl = new URL(url);&#xA; BufferedReader reader = new BufferedReader(new InputStreamReader(htmlUrl.openStream()));&#xA; String temp = &#34;&#34;;&#xA; StringBuffer sb = new StringBuffer();&#xA; while((temp = reader.readLine())!= null) {&#xA; sb.append(temp);&#xA; }&#xA; return sb.toString();&#xA;}&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    简单实现下， 抓取还得用框架&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>html 后# 号的作用，及html 如何传参</title>
      <link>https://helao.net/2010/32.html</link>
      <pubDate>2010-10-20 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;经常在 网上看到一些静态网页后加着 #XXX 如&lt;a href=&#34;http://www.family168.com/tutorial/springsecurity3/html/introduction.html#spring-security-core&#34;&gt;http://www.family168.com/tutorial/springsecurity3/html/introduction.html#spring-security-core&lt;/a&gt;&lt;/p&gt; &lt;p&gt;这种形式。这个#spring-security-core 起的作用就是在 introduction 中定位锚点的作用。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;还有如一些如&lt;a href=&#34;http://www.family168.com/tutorial/springsecurity3/html/introduction.html#spring-security-core&#34;&gt;http://www.family168.com/tutorial/springsecurity3/html/introduction.html?v&lt;/a&gt;ersion=234234&lt;/p&gt; &lt;p&gt;或&lt;a href=&#34;http://www.family168.com/tutorial/springsecurity3/html/introduction.html#spring-security-core&#34;&gt;http://www.family168.com/tutorial/springsecurity3/html/introduction.html&lt;/a&gt;？200879384734&lt;/p&gt; &lt;p&gt;这类形式。这里有两种可能： 1这是伪静态页面，？ 后面在传递参数 &amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2.？是版本信息，用来更新浏览器中的缓存&lt;/p&gt; &lt;p&gt;还有一种形式&amp;nbsp;&lt;a href=&#34;http://www.family168.com/tutorial/springsecurity3/html/introduction.html#spring-security-core&#34;&gt;http://www.family168.com/tutorial/springsecurity3/html/introduction.html&lt;/a&gt;？key=value&amp;amp;key=value&lt;/p&gt; &lt;p&gt;这类url。这是用js读取的参数进行一些设置，也是一些小手段&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>一个类似uml画图 东西</title>
      <link>https://helao.net/2010/31.html</link>
      <pubDate>2010-10-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;正在做。。。 过一阵子才能出来。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>hibernate 中sql查询报错</title>
      <link>https://helao.net/2010/30.html</link>
      <pubDate>2010-10-13 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: verdana, sans-serif; font-size: 14px; line-height: 21px;&#34;&gt;createSQLQuery （sql）,当执行这个语句报错时，一般是sql语句中的字段没有添加类型映射，&lt;/span&gt;&lt;/p&gt; &lt;p&gt;如Long &amp;nbsp;Double 类型等，这是用 addScalar(&amp;quot;num&amp;quot;,Hibernate.LONG)&lt;/p&gt; &lt;p&gt;就不会报错了 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dialect.jdbc.之类的错误 就是这个原因引起的&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>打算开始学习flex和red5了</title>
      <link>https://helao.net/2010/29.html</link>
      <pubDate>2010-10-09 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;对于学习flex感到很矛盾，flex开发的待遇很高，但我感觉这个语言不会有很大的前途。由于在做java web开发，总觉得java博大精深，自己都不能完全掌握，又怎能贪心去学flex，担心学习会半途而废。今天突然顿悟，语言只是工具，只要能去使用就行了，要去了解它，深入是需要付出巨大代价的。这也许就是我在java上进步缓慢的原因吧。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>velocity基本语法</title>
      <link>https://helao.net/2010/28.html</link>
      <pubDate>2010-09-28 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: Arial, sans-serif, Helvetica, Tahoma; line-height: 18px;&#34;&gt; &lt;/span&gt;&lt;/p&gt; &lt;div class=&#34;blog_title&#34; style=&#34;margin-bottom: 15px;&#34;&gt;  &lt;h3 style=&#34;font-size: 16px; line-height: 1.5em; margin-top: 0px; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding-top: 10px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: black;&#34;&gt;&lt;br /&gt;&lt;/h3&gt; &lt;/div&gt; &lt;div class=&#34;blog_content&#34;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; 一个基于java的模板引擎（Template engine），它允许任何人仅仅简单的使用模板语言（template language）来引用java代码定义的对象。当velocity应用于web开发时，界面设计人员可以和Java程序开发人员同步开发一个基于MVC框架web站点。&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 也就是说，页面设计人员可以只关注页面的显示效果，而由java程序开发人员关注业务逻辑编码。Velocity将java代码从web页面中分离出来，这样为web站点的长期维护提供了便利，同时也为我们在JSP和PHP之外又提供了一种可选的方案。&amp;nbsp; &lt;br /&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先来看看velocity的语法：vtl也就是velocity的基本语言.用过脚本语言的，对于这个应该会很容易上手，其实，基本上，语法可以分为变量和关键词。&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;strong style=&#34;font-weight: bold;&#34;&gt;定义变量：&lt;/strong&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 变量使用$作为开头符号，$a 和${a}是一致的。在模版中声明一个变量是很容易的，使用set关键字，例如：&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; #set( $foo = &amp;quot;Velocity&amp;quot; )&amp;nbsp; &lt;br /&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 对于velocity中，感觉比较灵活的就是变量中，可以直接使用方法，和javabean属性一样方便使用：&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 如下：$customer.Address，$purchase.Total，$customer.Address.phone。不过好像不支持map语法，如：a[&amp;quot;key&amp;quot;]这种写法，但是可以使用方法代替：a.get(&amp;quot;key&amp;quot;)。而使用了方法，感觉就在使用java代码一样方便。当然变量中支持简单的表达式计算：$a+1等等。&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; 有一点需要注意的是，如果变量没有解析，还是会输出$a这个变量，而不是空白或者报错。&amp;nbsp; &lt;br /&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;strong style=&#34;font-weight: bold;&#34;&gt;关键字：&lt;/strong&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 关键字使用#开头。&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; 其关键字也不多，只有少数的几个，但是已经足够用了。如前面的声明变量：#set&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #if #elseif #else&amp;nbsp; #end 这是最常用的条件判断，每个判断使用#end结尾&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #if($a==1)true enough#{else}no way!#end&amp;nbsp; &lt;br /&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #foreach() #end用于循环输出&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #foreach( $key in $allProducts.keySet() )&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;li&amp;gt;Key: $key -&amp;gt; Value: $allProducts.get($key)&amp;lt;/li&amp;gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #end&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #include，用于包括一些资源文件，当然include是不会去解析资源文件，这和#parse不同&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #include( &amp;quot;one.txt&amp;quot; )&amp;nbsp; &lt;br /&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #parse，用于解析并且包括相应的资源文件&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #parse( &amp;quot;me.vm&amp;quot; )，和主文件共享相应的Context&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #stop,用于停止执行解析，并返回，主要用于调试功能。&amp;nbsp; &lt;br /&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp; 基本上，使用以上的语法，可以定义出任何的模版了。当然，为了简化模版的定义，velocity特意推出了#macro这个强大的功能.&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #macro，类似于宏定义，用于自定义相应的标记。&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; 如下定义了一段宏，用于输出表格中的列表&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #macro( tablerows $color $somelist )&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; #foreach( $something in $somelist )&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;tr&amp;gt;&amp;lt;td bgcolor=$color&amp;gt;$something&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; #end&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #end&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; 在模版中，只需要使用#tablerows($color $somelist)就可以取代里面的代码了：&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #set( $greatlakes = [&amp;quot;Superior&amp;quot;,&amp;quot;Michigan&amp;quot;,&amp;quot;Huron&amp;quot;,&amp;quot;Erie&amp;quot;,&amp;quot;Ontario&amp;quot;] )&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; #set( $color = &amp;quot;blue&amp;quot; )&amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;lt;table&amp;gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #tablerows( $color $greatlakes )&amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;lt;/table&amp;gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; 而且#macro 支持内嵌语法，所以对于模版的定义，就变得更加的灵活而简单了。&amp;nbsp;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>eclipse 下安装插件</title>
      <link>https://helao.net/2010/27.html</link>
      <pubDate>2010-09-21 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;&#34;&gt;&lt;span id=&#34;ArticleContent1_ArticleContent1_lblContent&#34;&gt;从别人那里搞的eclipse的安装tips&amp;nbsp;&lt;br /&gt;Eclipse的插件安装是很方便的，只需将插件目录拷贝到Eclipse安装目录下的Plugins子目录下即可，但有时候即使这样做了插件还是没有出来，目前来说可按下面几个步骤检查：&amp;nbsp;&lt;br /&gt;&lt;br /&gt;1.首先看一下About中的Plugin装载清单，如果没有则需先确认所安装的插件的依赖插件已经安装。Eclipse的插件是有依赖关系的，具体表现在每个插件Plugin.xml中的&amp;lt;requires&amp;gt;标记中，里面的每个&amp;lt;import&amp;gt;标记即表示所依赖的插件ID，Eclipse在启动时会按照插件的依赖关系逐个将插件装载，若找不到所依赖的插件，则所安装的插件运行就有可能不正常。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;2.若装载的Plugin清单里已经有了，那可能是没有打开此插件的View或者需要在Preference里配置一些东西才有效，这个最好看一下所安装插件的Plugin.xml，看它都扩展了哪些扩展点，菜单无非就是actionSets这个扩展点，界面都是views这个扩展点，可以在Show View里设置一下，还有其它一些扩展点，可以具体问题具体分析。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;3.最有效的办法：看Log。在Eclipse安装目录Workspace/.metadata子目录下（若没有使用默认的工作空间，则目录结构可能会不同）有一个.log文件，从这里面一般可以找到失败的原因。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;4.如果插件还是没有安装，则删除Eclipse安装目录Configuration子目录下的org.eclipse.update目录，然后重新启动。&amp;nbsp;&lt;br /&gt;&lt;br /&gt;若还是不行，那。。。去问Erich Gamma吧，^_^&amp;nbsp;&lt;br /&gt;&lt;br /&gt;分类管理plugins&amp;nbsp;&lt;br /&gt;一般来说，安装插件都是直接拷贝到Plugins子目录下，但是这样有个缺陷，若插件太多，会使内容非常混乱，而且分不清哪个是系统自带的，哪个是以后安装的。这里提供一个办法：&amp;nbsp;&lt;br /&gt;在Eclipse安装目录下新建一个子目录links，里面新建一个文件abcd.link，文件名随便取，文件里的内容为path=D:/MyPlugins（目录可换成自己的），而在Path中指定的目录，即刚才的D:/MyPlugins目录下，一定要有一个eclipse子目录，在此子目录下再有features及plugins子目录（同Eclipse安装目录一样），新插件在安装时即可以拷贝到此plugins目录下，这样就避免了所有插件都放在一起的缺点。而且links目录下可以建多个*.link文件，每个.link文件中的内容可有多行path=...，极大的方便了将插件按照功能来进行分门别类。&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>flex 入门学习 视频</title>
      <link>https://helao.net/2010/26.html</link>
      <pubDate>2010-09-21 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;地址 &amp;nbsp;&lt;a href=&#34;http://www.riameeting.com/channel/learnflexinaweek/&#34;&gt;http://www.riameeting.com/channel/learnflexinaweek/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;虽然是英文的 但是有中文字幕，内容挺不错的 ，建议花几天连续看完为好&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>freemarker 语法</title>
      <link>https://helao.net/2010/25.html</link>
      <pubDate>2010-09-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    &lt;span style=&#34;font-family:Arial;line-height:18px;&#34;&gt; &lt;/span&gt;&#xA;&lt;/p&gt;&#xA;&lt;div class=&#34;tit&#34; style=&#34;font-family:Arial;font-size:14px;line-height:26px;color:#2e3b00;font-weight:bold;text-align:left;border-left-width:5px;border-left-style:solid;border-left-color:#bcda15;text-indent:8px;&#34;&gt;&#xA;    freemarker常用语法&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;date&#34; style=&#34;font-family:Verdana;font-size:10px;line-height:18px;margin-top:0px;margin-right:0px;margin-bottom:8px;margin-left:12px;color:#888888;text-align:left;&#34;&gt;&#xA;    2007年12月25日 星期二 10:57&#xA;&lt;/div&gt;&#xA;&lt;table style=&#34;width:958px;&#34; border=&#34;0&#34; class=&#34;ke-zeroborder&#34;&gt;&#xA;    &lt;tbody&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td style=&#34;font-family:Arial;font-size:12px;line-height:18px;&#34;&gt;&#xA;                &lt;div id=&#34;blog_text&#34; class=&#34;cnt&#34; style=&#34;font-family:Arial;font-size:14px;line-height:18px;&#34;&gt;&#xA;                    常用语法 &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;EG.一个对象BOOK&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;1.输出 ${book.name}&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        空值判断：${book.name?if_exists },&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        ${book.name?default(‘xxx’)}//默认值xxx&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${ book.name!&#34;xxx&#34;}//默认值xxx&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        日期格式：${book.date?string(&#39;yyyy-MM-dd&#39;)}&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        数字格式：${book?string.number}--20&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${book?string.currency}--&amp;lt;#-- $20.00 --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${book?string.percent}—&amp;lt;#-- 20% --&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        插入布尔值：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#assign foo=ture /&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${foo?string(&#34;yes&#34;,&#34;no&#34;)} &amp;lt;#-- yes --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;exp1?exists将会被exp1??代替 &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;exp1?if_exists将会被exp1!代替 &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;exp1?default(exp2)将会被exp1!exp2.&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;2．逻辑判断&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;a:&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#if condition&amp;gt;...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#elseif condition2&amp;gt;...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#elseif condition3&amp;gt;......&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#else&amp;gt;...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;其中空值判断可以写成&amp;lt;#if book.name?? &amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#if--&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;b:&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#switch value&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#case refValue1&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#break&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#case refValue2&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#break&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#case refValueN&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#break&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#default&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#switch--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;3．循环读取&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#list sequence as item&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#list--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;空值判断&amp;lt;#if bookList?size = 0&amp;gt;&lt;!--#list--&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;e.g.&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#list employees as e&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${e_index}. ${e.name}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#list--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;输出:&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;1. Readonly&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;2. Robbin&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;4.FreeMarker&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;3 宏/模板&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        宏Macro&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        宏是在模板中使用macro指令定义&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;l.1 基本用法&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;宏是和某个变量关联的模板片断，以便在模板中通过用户定义指令使用该变量，下面是一个例子：&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;#macro greet&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;span style=&#34;font-size:x-small;&#34;&gt;Hello Joe!&lt;/span&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        调用宏时，与使用FreeMarker的其他指令类似，&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;只是使用@替代FTL标记中的#。&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;@greet&amp;gt;&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@greet&lt;/a&gt;&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;#--&amp;lt;@greet/&amp;gt;--&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;在macro指令中可以在宏变量之后定义参数，如：&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;#macro greet person&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;span style=&#34;font-size:x-small;&#34;&gt;Hello ${person}!&lt;/span&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;可以这样使用这个宏变量：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@greet person=&#34;Fred&#34;/&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;但是下面的代码具有不同的意思：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@greet person=Fred/&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;这意味着将Fred变量的值传给person参数，该值不仅是字符串，还可以是其它类型，甚至是复杂的表达式。&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;宏可以有多参数，下面是一个例子：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#macro greet person color&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;span style=&#34;font-size:x-small;color:${color};&#34;&gt;Hello ${person}!&lt;/span&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        可以这样使用该宏变量，其中参数的次序是无关的：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@greet person=&#34;Fred&#34; color=&#34;black&#34;/&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        可以在定义参数时指定缺省值，否则，在调用宏的时候，必须对所有参数赋值：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#macro greet person color=&#34;black&#34;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;span style=&#34;font-size:x-small;color:${color};&#34;&gt;Hello ${person}!&lt;/span&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        注意：宏的参数是局部变量，只能在宏定义中有效。&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br /&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;在宏里嵌套内容&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;FreeMarker的宏可以有嵌套内容，&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#nested&amp;gt;指令会执行宏调用指令开始和结束标记之间的模板片断，举一个简单的例子：&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;#macro border&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                        &lt;table border=&#34;4&#34; cellspacing=&#34;0&#34; cellpadding=&#34;4&#34;&gt;&#xA;                            &lt;tbody&gt;&#xA;                                &lt;tr&gt;&#xA;                                    &lt;td&gt;&#xA;                                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#nested&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                                    &lt;/td&gt;&#xA;                                &lt;/tr&gt;&#xA;                            &lt;/tbody&gt;&#xA;                        &lt;/table&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        执行宏调用：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@border&amp;gt;The bordered text&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@border&lt;/a&gt;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                        &lt;table border=&#34;4&#34; cellspacing=&#34;0&#34; cellpadding=&#34;4&#34;&gt;&#xA;                            &lt;tbody&gt;&#xA;                                &lt;tr&gt;&#xA;                                    &lt;td&gt;&#xA;                                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;The bordered text&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                                    &lt;/td&gt;&#xA;                                &lt;/tr&gt;&#xA;                            &lt;/tbody&gt;&#xA;                        &lt;/table&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;#nested&amp;gt;指令可以被多次调用，每次都会执行相同的内容。&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#macro do_thrice&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#nested&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#nested&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#nested&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@do_thrice&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;Anything.&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@do_thrice&lt;/a&gt;&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        FMPP 输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;Anything.&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;Anything.&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;Anything.&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        嵌套内容可以是有效的FTL，下面是一个有些复杂的例子，我们将上面三个宏组合起来：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@border&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;ul&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@do_thrice&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                        &lt;li&gt;&#xA;                            &amp;lt;@greet person=&#34;Joe&#34;/&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@do_thrice&lt;/a&gt;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                        &lt;/li&gt;&#xA;                    &lt;/ul&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@border&lt;/a&gt;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                    &lt;table border=&#34;4&#34; cellspacing=&#34;0&#34; cellpadding=&#34;4&#34;&gt;&#xA;                        &lt;tbody&gt;&#xA;                            &lt;tr&gt;&#xA;                                &lt;td&gt;&#xA;                                    &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                                    &lt;ul&gt;&#xA;                                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                                        &lt;li&gt;&#xA;                                            &lt;span style=&#34;font-size:x-small;&#34;&gt;Hello Joe!&lt;/span&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                                        &lt;/li&gt;&#xA;                                        &lt;li&gt;&#xA;                                            &lt;span style=&#34;font-size:x-small;&#34;&gt;Hello Joe!&lt;/span&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                                        &lt;/li&gt;&#xA;                                        &lt;li&gt;&#xA;                                            &lt;span style=&#34;font-size:x-small;&#34;&gt;Hello Joe!&lt;/span&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                                        &lt;/li&gt;&#xA;                                    &lt;/ul&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                                &lt;/td&gt;&#xA;                            &lt;/tr&gt;&#xA;                        &lt;/tbody&gt;&#xA;                    &lt;/table&gt;&#xA;                    &lt;p&gt;&#xA;                        &lt;br /&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        宏定义中的局部变量对嵌套内容是不可见的，例如：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#macro repeat count&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#local y = &#34;test&#34;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#list 1..count as x&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${y} ${count}/${x}: &amp;lt;#nested&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#list--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;@repeat count=3&amp;gt;${y?default(&#34;?&#34;)} ${x?default(&#34;?&#34;)} ${count?default(&#34;?&#34;)}&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@repeat&lt;/a&gt;&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;test 3/1: ? ? ?&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;test 3/2: ? ? ?&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;test 3/3: ? ? ?&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;在宏定义中使用循环变量&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;nestted指令也可以有循环变量（循环变量的含义见下节），调用宏的时候在宏指令的参数后面依次列出循环变量的名字，格式如下：&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;@ macro_name paramter list; loop variable list[,]&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        例如：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#macro repeat count&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#list 1..count as x&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#nested x, x/2, x==count&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#list--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;@repeat count=4 ; c, halfc, last&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${c}. ${halfc}&amp;lt;#if last&amp;gt; Last!&lt;!--#if--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@repeat&lt;/a&gt;&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        这里count是宏的参数，c, halfc,last则为循环变量，输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;1. 0.5&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;2. 1&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;3. 1.5&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;4. 2 Last!&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;循环变量和宏标记指定的不同不会有问题，如果调用时少指定了循环变量，那么多余的值不可见。调用时多指定了循环变量，多余的循环变量&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        不会被创建：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@repeat count=4 ; c, halfc, last&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${c}. ${halfc}&amp;lt;#if last&amp;gt; Last!&lt;!--#if--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@repeat&lt;/a&gt;&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;@repeat count=4 ; c, halfc&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${c}. ${halfc}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@repeat&lt;/a&gt;&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;@repeat count=4&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;Just repeat it...&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34;&gt;/@repeat&lt;/a&gt;&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        在模板中定义变量&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;在模板中定义的变量有三种类型：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;plain变量：可以在模板的任何地方访问，包括使用include指令插入的模板，使用assign指令创建和替换。&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;局部变量：在宏定义体中有效，使用local指令创建和替换。&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;循环变量：只能存在于指令的嵌套内容，由指令（如list）自动创建；宏的参数是局部变量，而不是循环变量&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;局部变量隐藏（而不是覆盖）同名的plain变量；循环变量隐藏同名的局部变量和plain变量，下面是一个例子：&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;#assign x = &#34;plain&#34;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${x} &amp;lt;#-- we see the plain var. here --&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &amp;lt;@test/&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;6. ${x} &amp;lt;#-- the value of plain var. was not changed --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#list [&#34;loop&#34;] as x&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;7. ${x} &amp;lt;#-- now the loop var. hides the plain var. --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#assign x = &#34;plain2&#34;&amp;gt; &amp;lt;#-- replace the plain var, hiding does not mater here --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;8. ${x} &amp;lt;#-- it still hides the plain var. --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#list--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;9. ${x} &amp;lt;#-- the new value of plain var. --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#macro test&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;2. ${x} &amp;lt;#-- we still see the plain var. here --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#local x = &#34;local&#34;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;3. ${x} &amp;lt;#-- now the local var. hides it --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#list [&#34;loop&#34;] as x&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;4. ${x} &amp;lt;#-- now the loop var. hides the local var. --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#list--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;5. ${x} &amp;lt;#-- now we see the local var. again --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;1. plain&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;2. plain&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;3. local&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;4. loop&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;5. local&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;6. plain&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;7. loop&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;8. loop&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;9. plain2&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;内部循环变量隐藏同名的外部循环变量，如：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#list [&#34;loop 1&#34;] as x&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${x}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#list [&#34;loop 2&#34;] as x&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${x}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#list [&#34;loop 3&#34;] as x&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${x}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#list--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${x}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#list--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${x}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#list--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;loop 1&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;loop 2&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;loop 3&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;loop 2&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;loop 1&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;模板中的变量会隐藏（而不是覆盖）数据模型中同名变量，如果需要访问数据模型中的同名变量，使用特殊变量global，下面的例子假设数据&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        模型中的user的值是Big Joe：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#assign user = &#34;Joe Hider&#34;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${user}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;#-- prints: Joe Hider --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${.globals.user} &amp;lt;#-- prints: Big Joe --&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;名字空间&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;通常情况，只使用一个名字空间，称为主名字空间，但为了创建可重用的宏、变换器或其它变量的集合（通常称库），必须使用多名字空间，&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        其目的是防止同名冲突&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;创建库&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;下面是一个创建库的例子（假设保存在lib/my_test.ftl中）：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#macro copyright date&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p&gt;&#xA;                        Copyright (C) ${date} Julia Smith. All rights reserved.&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br /&gt;&#xA;Email: ${mail}&#xA;                    &lt;/p&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt; &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#assign mail = &#34;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34; href=&#34;mailto:jsmith@acme.com&#34;&gt;jsmith@acme.com&lt;/a&gt;&#34;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;使用import指令导入库到模板中，Freemarker会为导入的库创建新的名字空间，并可以通过import指令中指定的散列变量访问库中的变量：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#import &#34;/lib/my_test.ftl&#34; as my&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#assign mail=&#34;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34; href=&#34;mailto:fred@acme.com&#34;&gt;fred@acme.com&lt;/a&gt;&#34;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@my.copyright date=&#34;1999-2002&#34;/&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${my.mail}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${mail}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                    &lt;p&gt;&#xA;                        Copyright (C) 1999-2002 Julia Smith. All rights reserved.&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;br /&gt;&#xA;Email: &lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34; href=&#34;mailto:jsmith@acme.com&amp;lt;/p&#34;&gt;jsmith@acme.com&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;/a&gt;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34; href=&#34;mailto:jsmith@acme.com&#34;&gt;jsmith@acme.com&lt;/a&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34; href=&#34;mailto:fred@acme.com&#34;&gt;fred@acme.com&lt;/a&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;可以看到例子中使用的两个同名变量并没有冲突，因为它们位于不同的名字空间。还可以使用assign指令在导入的名字空间中创建或替代变量&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        ，下面是一个例子：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#import &#34;/lib/my_test.ftl&#34; as my&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${my.mail}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#assign mail=&#34;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34; href=&#34;mailto:jsmith@other.com&#34;&gt;jsmith@other.com&lt;/a&gt;&#34; in my&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${my.mail}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34; href=&#34;mailto:jsmith@acme.com&#34;&gt;jsmith@acme.com&lt;/a&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34; href=&#34;mailto:jsmith@other.com&#34;&gt;jsmith@other.com&lt;/a&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;数据模型中的变量任何地方都可见，也包括不同的名字空间，下面是修改的库：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#macro copyright date&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p&gt;&#xA;                        Copyright (C) ${date} ${user}. All rights reserved.&#xA;                    &lt;/p&gt;&#xA;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&lt;!--#macro--&gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#assign mail = &#34;&lt;a style=&#34;color:#446400;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;font-weight:normal;text-decoration:none;line-height:normal;&#34; href=&#34;mailto:%24%7Buser%7D@acme.com&#34;&gt;${user}@acme.com&lt;/a&gt;&#34;&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;假设数据模型中的user变量的值是Fred，则下面的代码：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#import &#34;/lib/my_test.ftl&#34; as my&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@my.copyright date=&#34;1999-2002&#34;/&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;${my.mail}&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;输出结果：&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;                    &lt;p&gt;&#xA;                        Copyright (C) 1999-2002 Fred. All rights reserved.&#xA;                    &lt;/p&gt;&#xA;Fred@acme.com&#xA;                    &lt;p&gt;&#xA;                        &lt;br /&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br /&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;四．Freemarker与Struts结合&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        1.输出文件换成以ftl格式的文件&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        E.G.&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;a name=&#34;bookActionForm&#34;&gt;&lt;/a&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        validate=&#34;true&#34;&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;forward name=&#34;list&#34; path=&#34;/index.ftl&#34;&gt;&lt;/forward&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br /&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        2.使用struts，jstl等标签&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        a.导入à&amp;lt;#global html=JspTaglibs[&#34;/WEB-INF/tags/struts-html.tld&#34;]&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        或&amp;lt;#assign html=JspTaglibs[&#34;/WEB-INF/struts-html.tld&#34;]&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#assign bean=JspTaglibs[&#34;/WEB-INF/struts-bean.tld&#34;]&amp;gt;&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;#assign logic=JspTaglibs[&#34;/WEB-INF/struts-logic.tld&#34;]&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        b.使用à&amp;lt;@bean.page id=&#34;request&#34; property=&#34;request&#34;/&amp;gt;,&lt;br style=&#34;line-height:normal;&#34; /&gt;&#xA;&amp;lt;@html.text property=&#34;vo.newsTitle&#34; styleClass=&#34;input1&#34;/&amp;gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        五．用Freemarker生成Html页面&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        例子：MakeFileManager.java&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;br /&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;package example;&#xA;import freemarker.template.Configuration;&#xA;import java.text.SimpleDateFormat;&#xA;import java.io.File;&#xA;import freemarker.template.DefaultObjectWrapper;&#xA;import java.util.Map;&#xA;import java.util.HashMap;&#xA;import java.io.Writer;&#xA;import java.io.OutputStreamWriter;&#xA;import java.io.FileOutputStream;&#xA;import freemarker.template.TemplateException;&#xA;import java.io.IOException;&#xA;import freemarker.template.Template;&#xA;public class MakeFileManager {&#xA;public String make(Book book, BookFtl bookFtl) {&#xA;Configuration cfg = new Configuration();//配制&#xA;String realPath = bookFtl.getRealPath();&#xA;String templatePath = realPath + &#34;/WEB-INF/templates/book&#34;;&#xA;String cDateStr = &#34;book/&#34; +&#xA;new SimpleDateFormat(&#34;yyyyMMdd&#34;).format(new java.util.&#xA;Date());&#xA;String filePostfix = &#34;.html&#34;;&#xA;String path = realPath + &#34;/&#34; + cDateStr;&#xA;String fileTimeName = new SimpleDateFormat(&#34;yyyyMMddhhmmss&#34;).format(new&#xA;java.util.Date());&#xA;String returnFileName = cDateStr + &#34;/&#34; + fileTimeName + filePostfix;&#xA;String fileName = &#34;&#34;;&#xA;File bookDir = new File(path);&#xA;if (bookDir.exists()) {&#xA;fileName = path + &#34;/&#34; + fileTimeName + filePostfix;&#xA;} else {&#xA;bookDir.mkdirs();&#xA;fileName = path + &#34;/&#34; + fileTimeName + filePostfix;&#xA;}&#xA;try {&#xA;//设置freemarker的参数&#xA;cfg.setNumberFormat(&#34;0.##########&#34;);//生成html文件时web.xml配制无效&#xA;//cfg.setEncoding();&#xA;cfg.setDirectoryForTemplateLoading(new File(templatePath));&#xA;cfg.setObjectWrapper(new DefaultObjectWrapper());&#xA;Template bookTemplate = cfg.getTemplate(bookFtl.getTemplateName());//模板对象&#xA;Map root = new HashMap();&#xA;root.put(&#34;book&#34;, book);&#xA;root.put(&#34;book2&#34;,book);&#xA;Writer out = new OutputStreamWriter(new FileOutputStream(fileName));&#xA;try {&#xA;bookTemplate.process(root, out);&#xA;} catch (TemplateException e) {&#xA;e.printStackTrace();&#xA;}&#xA;out.flush();&#xA;} catch (IOException e) {&#xA;e.printStackTrace();&#xA;}&#xA;return returnFileName;&#xA;}&#xA;}&lt;/pre&gt;&#xA;                    &lt;/p&gt;&#xA;                    &lt;p style=&#34;line-height:normal;&#34;&gt;&#xA;                        &lt;span&gt;表达式是&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;的核心功能，&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;中的插值支持多种表达式。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;一、直接指定值&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;直接指定值可以是字符串、数值、布尔值、集合及Map对象。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;1. 字符串&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;直接指定字符串值使用单引号或双引号限定。字符串中可以使用转义字符”\&#34;。如果字符串内有大量的特殊字符，则可以在引号的前面加上一个字母r，则字符串内的所有字符都将直接输出。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;2. 数值&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;数值可以直接输入，不需要引号。&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;不支持科学计数法。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;3. 布尔值 &lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;直接使用true或false，不使用引号。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;4. 集合&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;集合用中括号包括，集合元素之间用逗号分隔。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;使用数字范围也可以表示一个数字集合，如1..5等同于集合[1, 2, 3, 4, 5]；同样也可以用5..1来表示[5, 4, 3, 2, 1]。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;5. Map对象&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;Map对象使用花括号包括，Map中的key-value对之间用冒号分隔，多组key-value对之间用逗号分隔。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;注意：Map对象的key和value都是表达式，但key必须是字符串。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;二、输出变量值&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;的表达式输出变量时，这些变量可以是顶层变量，也可以是Map对象的变量，还可以是集合中的变量，并可以使用点（.）语法来访问Java对象的属性。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;1. 顶层变量&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;所谓顶层变量就是直接放在数据模型中的值。输出时直接用${variableName}即可。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;2. 输出集合元素&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;可以根据集合元素的索引来输出集合元素，索引用中括号包括。如： 输出[“1”， “2”， “3”]这个名为number的集合，可以用${number[0]}来输出第一个数字。&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;还支持用number[1..2]来表示原集合的子集合[“2”， “3”]。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;3. 输出Map元素&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;对于JavaBean实例，&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;一样把它看作属性为key，属性值为value的Map对象。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;输出Map对象时，可以使用点语法或中括号语法，如下面的几种写法的效果是一样的：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;book.author.name &lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;book.author[&#34;name&#34;] &lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;book[&#34;author&#34;].name &lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;book[&#34;author&#34;][&#34;name&#34;] &lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;使用点语法时，变量名字有和顶层变量一样的限制，但中括号语法没有任何限制。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;三、字符串操作&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;1. 字符串连接&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;字符串连接有两种语法：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;（1） 使用${..}或#{..}在字符串常量内插入表达式的值；&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;(2)&amp;nbsp; 直接使用连接运算符“+”连接字符串。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;如，下面两种写法等效：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;${&#34;Hello, ${user}&#34;} &lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;${&#34;Hello, &#34; + user + &#34;!&#34;} &lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;有一点需要注意： ${..}只能用于文本部分作为插值输出，而不能用于比较等其他用途，如：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&amp;lt;#if ${isBig}&amp;gt;Wow!&lt;!--#if--&gt; &lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&amp;lt;#if &#34;${isBig}&#34;&amp;gt;Wow!&lt;!--#if--&gt; &lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;应该写成：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&amp;lt;#if isBig&amp;gt;Wow!&lt;!--#if--&gt; &lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;2. 截取子串&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;截取子串可以根据字符串的索引来进行，如果指定一个索引值，则取得字符串该索引处的字符；如果指定两个索引值，则截取两个索引中间的字符串子串。如：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&amp;lt;#assign number=&#34;01234&#34;&amp;gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;${number[0]} &amp;lt;#-- 输出字符0 --&amp;gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;${number[0..3]} &amp;lt;#-- 输出子串“0123” --&amp;gt;&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;四、集合连接操作&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&lt;/strong&gt; 连接集合的运算符为“+”&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;五、Map连接操作&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;Map连接操作的运算符为“+”&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;六、算术运算符&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;表达式中支持“+”、“－”、“*”、“/”、“%”运算符。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;七、比较运算符&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;表达式中支持的比较运算符有如下几种：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;1. =（或者==）： 判断两个值是否相等；&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;2. !=： 判断两个值是否不相等；&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;注： =和!=可以用作字符串、数值和日期的比较，但两边的数据类型必须相同。而且&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;的比较是精确比较，不会忽略大小写及空格。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;3. &amp;gt;（或者gt）： 大于&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;4. &amp;gt;=（或者gte）： 大于等于&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;5. &amp;lt;（或者lt）： 小于&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;6. &amp;lt;=（或者lte）： 小于等于&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;注： 上面这些比较运算符可以用于数字和日期，但不能用于字符串。大部分时候，使用gt比&amp;gt;有更好的效果，因为&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;会把&amp;gt;解释成标签的结束字符。可以使用括号来避免这种情况，如：&amp;lt;#if (x&amp;gt;y)&amp;gt;。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;八、逻辑运算符&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;1. &amp;amp;&amp;amp;： 逻辑与；&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;2. ||： 逻辑或；&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;3. !： 逻辑非&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;逻辑运算符只能用于布尔值。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;九、内建函数&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;提供了一些内建函数来转换输出，可以在任何变量后紧跟?，?后紧跟内建函数，就可以通过内建函数来转换输出变量。字符串相关常用的内建函数：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;1. html： 对字符串进行HTML编码；&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;2. cap_first： 使字符串第一个字母大写；&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;3. lower_case： 将字符串转成小写；&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;4. upper_case： 将字符串转成大写；集合相关常用的内建函数：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;1. size： 获得集合中元素的个数；数字值相关常用的内建函数：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;1. int： 取得数字的整数部分。&lt;strong style=&#34;font-style:inherit;font-weight:bold;&#34;&gt;十、空值处理运算符&lt;/strong&gt;&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;的变量必须赋值，否则就会抛出异常。而对于&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;来说，null值和不存在的变量是完全一样的，因为&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;无法理解null值。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;FreeMarker&lt;/span&gt;提供两个运算符来避免空值：&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;1. !： 指定缺失变量的默认值；&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;2. ??：判断变量是否存在。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;!运算符有两种用法：variable!或variable!defaultValue。第一种用法不给变量&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;指定默认值&lt;/span&gt;，表明默认值是空字符串、长度为0的集合、或长度为0的Map对象。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;使用!运算符&lt;span class=&#34;highlight&#34; style=&#34;background-color:#ffff99;padding-top:0px;padding-right:1px;padding-bottom:0px;padding-left:1px;&#34;&gt;指定默认值&lt;/span&gt;并不要求默认值的类型和变量类型相同。&lt;br style=&#34;margin-bottom:20px;&#34; /&gt;&#xA;??运算符返回布尔值，如：variable??，如果变量存在，返回true，否则返回false。&lt;/span&gt;&#xA;                    &lt;/p&gt;&#xA;                &lt;/div&gt;&#xA;            &lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;    &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&#xA;    &lt;br /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>velocity 判空</title>
      <link>https://helao.net/2010/24.html</link>
      <pubDate>2010-09-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: Arial, sans-serif, Helvetica, Tahoma; color: #666666; line-height: 18px;&#34;&gt;   &lt;div class=&#34;blog_title&#34; style=&#34;margin-bottom: 0px; padding-left: 7px; height: 64px;&#34;&gt;    &lt;h3 style=&#34;font-size: 16px; line-height: 1.5em; margin-top: 0px; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding-top: 10px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: black;&#34;&gt;&lt;a style=&#34;color: white; text-decoration: none;&#34; href=&#34;http://esteem.iteye.com/blog/249466&#34;&gt;Velocity中如何判断null&lt;/a&gt;&lt;/h3&gt;   &lt;/div&gt;   &lt;div class=&#34;blog_content&#34; style=&#34;background-color: white; margin-top: 0px; margin-right: 6px; margin-bottom: 0px; margin-left: 4px; color: #666666; padding: 5px;&#34;&gt;    &lt;div id=&#34;_mcontent&#34; class=&#34;mcontent&#34;&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;相信这个问题是很多使用Velocity的朋友所经常碰到的，大家可能非常期望下面这样的代码能够运行：&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; #if($foo == null)&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; ...&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; #end&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;实际上这段代码会报错。这是因为Velocity中对null的支持比较特别。总统上说，判断是否为null有下面几种方法：&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;1. #if (! $foo) 判断$foo为空，判断非空为 #if ($foo)&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;2. 使用 #ifnull() 或 #ifnotnull()&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; #ifnull ($foo)&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 要使用这个特性必须在velocity.properties文件中加入：&lt;/p&gt;     &lt;pre&gt;userdirective = org.apache.velocity.tools.generic.directive.Ifnulluserdirective = org.apache.velocity.tools.generic.directive.Ifnotnull&lt;/pre&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;3. 使用null工具判断&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; #if($null.isNull($foo))&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 注意这种方式特别有用，尤其你在需要这个判断作为一个判断字句时，比如我要你判断一个集合为null或为空时只能使用这种方式了：&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; $if ($null.isNull($mycoll) || $mycoll.size()==0)&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;更详细的介绍请参考：&lt;/p&gt;     &lt;p style=&#34;padding: 0px; margin: 0px;&#34;&gt;&lt;a style=&#34;color: #006699; text-decoration: none;&#34; href=&#34;http://wiki.apache.org/velocity/VelocityNullSupport&#34;&gt;http://wiki.apache.org/velocity/VelocityNullSupport&lt;br /&gt;&lt;/a&gt;&lt;a style=&#34;color: #006699; text-decoration: none;&#34; href=&#34;http://wiki.apache.org/velocity/CheckingForNull&#34;&gt;http://wiki.apache.org/velocity/CheckingForNull&lt;/a&gt;&lt;/p&gt;    &lt;/div&gt;   &lt;/div&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>在eclipse中安装velocity编辑器、Freemarker编辑器</title>
      <link>https://helao.net/2010/23.html</link>
      <pubDate>2010-09-19 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: Arial, sans-serif, Helvetica, Tahoma; line-height: 18px;&#34;&gt; &lt;/span&gt;&lt;/p&gt; &lt;div class=&#34;blog_title&#34; style=&#34;margin-bottom: 15px;&#34;&gt;  &lt;h3 style=&#34;font-size: 16px; line-height: 1.5em; margin-top: 0px; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding-top: 10px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: black;&#34;&gt;&lt;br /&gt;&lt;/h3&gt;  &lt;strong style=&#34;font-weight: bold;&#34;&gt;&lt;/strong&gt; &lt;/div&gt; &lt;div class=&#34;blog_content&#34;&gt; 记录以便今后重新搭环境时查找。&amp;nbsp; &lt;br /&gt;1.在myeclipse中增加velocity支持的包后，在集成velocity的velocity编辑器，会是开发更方便快捷。&amp;nbsp; &lt;br /&gt;Veloeclipse的网站http://code.google.com/p/veloeclipse/，&amp;nbsp; &lt;br /&gt;在myeclipse中安装Veloeclipse时，在地址栏中输入： http://veloeclipse.googlecode.com/svn/trunk/update/&amp;nbsp; &lt;br /&gt; &lt;br /&gt;2.在myeclipse中安装freemarker编辑器， &lt;span style=&#34;color: #ff0000;&#34;&gt;在URL栏中输入：http://www.freemarker.org/eclipse/update&lt;/span&gt; &lt;/div&gt; &lt;div class=&#34;blog_content&#34;&gt; 这个地址已经不能用了，只能用下面的方法来添加了。&lt;/div&gt; &lt;div class=&#34;blog_content&#34;&gt; &lt;br /&gt;&lt;/div&gt; &lt;div class=&#34;blog_content&#34;&gt; eclipse正常情况下 是能自动识别新添加的 插件，并自动添加相应信息，但是如果eclipse 不能自动识别时，你就需要手动为eclipse添加相应的插件信息，即为 下面红字部分&lt;/div&gt; &lt;div class=&#34;blog_content&#34;&gt; &lt;br /&gt;&lt;/div&gt; &lt;div class=&#34;blog_content&#34;&gt; &lt;span style=&#34;font-family: Arial, sans-serif, Helvetica, Tahoma; line-height: 18px;&#34;&gt;&amp;nbsp;&amp;nbsp; 在MyEclipse7.0+的版本，自动安装行不通，因为在下载你填写的插件前，MyEclipse会下载一大堆自己的更新，这些更新 全都位于MyEclipse的服务器或者Pulse的服务器，这两个服务器在国内是无法访问的。&lt;br /&gt;&lt;strong style=&#34;font-weight: bold;&#34;&gt;&lt;br /&gt;既然无法自动安装，就手动安装：&lt;/strong&gt;&amp;nbsp;&lt;br /&gt;先打开 http://sourceforge.net/projects/freemarker-ide/files/页面，点击“下载”，&lt;br /&gt;注意，要下载eclipse插件，而不是freemarker本身。 在下面的文件列表中选择“eclipse-plugin”文件夹，展开的文件就是各个版本的eclipse插件，当前最新是：&amp;nbsp;&lt;a class=&#34;button button-dload dload { url: &#39;http://downloads.sourceforge.net/project/freemarker-ide/freemarker-ide/0.9.14/freemarker-ide-0.9.14.zip&#39; }&#34; style=&#34;color: #108ac6; text-decoration: underline;&#34; title=&#34;/freemarker-ide/0.9.14/freemarker-ide-0.9.14.zip:  released on 2006-04-28 17:54:14 GMT&#34; href=&#34;http://sourceforge.net/projects/freemarker-ide/files/freemarker-ide/0.9.14/freemarker-ide-0.9.14.zip/download&#34;&gt;&lt;span&gt;&lt;strong style=&#34;font-weight: bold;&#34;&gt;&lt;/strong&gt;freemarker-ide-0.9.14.zip&amp;nbsp;&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;下载完插件后，解压缩到：&lt;br /&gt;\Program Files\Genuitec\Common\plugins\&lt;br /&gt;&lt;br /&gt;解压后的目录：&lt;br /&gt;\Program Files\Genuitec\Common\plugins\&lt;strong style=&#34;font-weight: bold;&#34;&gt;hudson.freemarker_ide_0.9.14&lt;/strong&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;然后需要修改一个文件，这很关键：&lt;br /&gt;&lt;/span&gt;&lt;strong style=&#34;font-weight: bold;&#34;&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;\Program Files\Genuitec\MyEclipse 7.0\configuration\org.eclipse.equinox.simpleconfigurator\bundles.info&lt;/span&gt;&lt;/strong&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;br /&gt;在文件最后加入下面两行：&lt;br /&gt;&lt;/span&gt;&lt;strong style=&#34;font-weight: bold;&#34;&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;hudson.freemarker_ide,0.9.14,file:plugins\hudson.freemarker_ide_0.9.14\,4,false&lt;/span&gt;&lt;/strong&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;（格式大概为：插件名,版本号,file:插件目录,4,false&lt;br /&gt;插件名和版本号是由插件目录名字以下划线分割而得，file:后如果是目录结尾要有反斜杠、如果是.jar就不用，最后的4,false不知道是什么意思，不用管他）&lt;br /&gt;&lt;br /&gt;然后重启动MyEclipse7.5，就可以用freemarker的eclipse plugin ide打开ftl文件了。&lt;br /&gt;&lt;br /&gt;最后，要注意一下，\Program Files\Genuitec\Common\plugins\&lt;strong style=&#34;font-weight: bold;&#34;&gt;hudson.freemarker_ide_0.9.14&lt;/strong&gt;&amp;nbsp;中的freemarker.jar可能是很旧的，如果发现ftl文件中的一些符号，如感叹号、双问号如果报告为错误，用新的 freemarker-2.3.15.jar替换之，把MANIFEST.MF里的Bundle-ClassPath也改为freemarker- 2.3.15.jar ，然后重启MyEclipse7.5就可以了。&lt;/span&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>freemarker 源码分析</title>
      <link>https://helao.net/2010/22.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;正在研究freemarker源码&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>js或css文件后面为什么有参数</title>
      <link>https://helao.net/2010/21.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt;有同学经常遇到&lt;a href=&#34;http://www.dreamdu.com/xhtml/&#34;&gt;html&lt;/a&gt; 页面里加载的js与&lt;a href=&#34;http://www.dreamdu.com/css/&#34;&gt;css&lt;/a&gt; 文件带有参数，比如：&lt;/p&gt; &lt;pre&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;dreamdu.js?1217128319&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/pre&gt; &lt;pre&gt;&amp;lt;link rel=&amp;lsquo;stylesheet&amp;rsquo; href=&amp;lsquo;&lt;a href=&#34;http://www.dreamdu.com/n.css?version=2.3.3&#39;&#34;&gt;http://www.dreamdu.com/n.css?version=2.3.3&#39;&lt;/a&gt; type=&amp;lsquo;text/css&amp;rsquo; /&amp;gt;&amp;lt;link rel=&amp;lsquo;stylesheet&amp;rsquo; href=&amp;lsquo;&lt;a href=&#34;http://www.dreamdu.com/n.css?version=20080727182553&#39;&#34;&gt;http://www.dreamdu.com/n.css?version=20080727182553&#39;&lt;/a&gt; type=&amp;lsquo;text/css&amp;rsquo; /&amp;gt;&lt;/pre&gt; &lt;p&gt;使用参数有两种可能，&lt;/p&gt; &lt;ul&gt;  &lt;li&gt;脚本并不存在，而是服务端动态生成的，因此带了个版本号，以示区别。&lt;/li&gt;  &lt;li&gt;客户端会缓存这些css或js文件，因此每次升级了js或css文件后，改变版本号，客户端浏览器就会重新下载新的js或css文件&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;第二种情况最多，也可能两种同时存在。&lt;/p&gt; &lt;p&gt;版本号，可以是一个随机数，也可以是一个递增的值，大版本小版本的方式，或者根据脚本的生成时间书写，比如 20080727182553 就是精确到了生成脚本的秒，而 2.3.3 就是大版本小版本的方式。&lt;/p&gt; &lt;p&gt;补充疯中男子所说的几种可能：&lt;/p&gt; &lt;ul&gt;  &lt;li&gt;服务器端使用了URLRewrite，实际上最终访问的是动态服务器文件，例如xxx.php，而这个服务器端文件运行完毕后，response 出来一个标准的 JS 字串流。&lt;/li&gt;  &lt;li&gt;根本就是从客户端提交参数上去的。我就在项目中使用过这种方式，页面都是自动生成的，因此在生成的页面中打上特殊标记。，这样在运行脚本时，能够知道是哪个页面在请求脚本，可以运行不同的方法。用这个方法偷偷记录PV很不错。&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>ssi server side include</title>
      <link>https://helao.net/2010/20.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;&#34;&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;1.简介：&lt;/strong&gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; SSI全称（Server Side Includes）是在HTML静态页面中使用的指令，当页面在服务端执行的时候是可以进行服务端解析的。这种方式可以让我们在存在的HTML页面里面分 块动态生成内容而不在整个执行了CGI等服务端技术的基础之上进行动态页面服务。在返回请求的页面(包含SSI指令)前，服务器会处理这些指令，并用处理 的结果替换指令，然后把页面返回。我们使用Tomcat作为Http服务器的时候，我们需要使用SSI可以在Tomcat添加对SSI的支持。&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; Tomcat服务器的SSI支持的实现方式和Apache里面的SSI指令一样，在Tomcat里面实现SSI支持使用的是一个 Servlet和一个Filter（Servlet和Filter的基本信息参考JSP教程），我们可以使用其中一种方式来进行SSI支持的配置，但是不 需要两个同时配置，同时配置是否会产生冲突我不太清楚，一般情况下配置一个就可以了。&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; 实现SSI支持的Servlet实现使用了org.apache.catalina.ssi.SSIServlet，另外需要在Servlet的路径解析里面添加映射规则“*.shtml”。&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; 实现SSI支持的Filter使用了org.apache.calalina.ssi.SSIFilter。另外，在Filter路径解析 里面也需要添加映射规则“*.shtml”，而且在Filter配置的时候需要在映射规则里面添加能够执行的mime type，contentType的初始化参数允许你执行服务器下边的资源。在Tomcat里面默认是禁用了SSI的。&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; &lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;注意：SSI指令执行Tomcat外部的JVM，如果我们使用Java的安全管理器需要在 calalina.policy文件里面进行配置。若要使用SSI Servlet和SSI Filter，直接在服务器的路径$CATALINA_BASE/conf/web.xml文件里面将SSI的注释去掉。需要注意的是在Tomcat服务 器里面仅仅只有标记了privileged的Context可以使用SSI功能。（*：当privileged设置为true的时候，才允许Tomcat 的Web应用使用容器内的Servlet，Tomcat的文档里面讲了使用的lib的域，每个应用程序如果不设置这个属性，是不能访问容器内的 Servlet的，这里应该指代的是全局的Servlet）&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; 否则这里会遇到异常：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; &lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #f00000; font-size: small;&#34;&gt;java.lang.SecurityException: Filter of class org.apache.catalina.ssi.SSIFilter(SSIServlet)is privileged and cannot be loaded by this web application&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;2.服务器配置属性：&lt;/strong&gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;在配置SSI Servlet的时候需要用到的参数（init parameters）如下：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;buffered&lt;/strong&gt;：是需要将输入保存到缓冲区（0=false,1=true）默认是0（false）&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;debue&lt;/strong&gt;：配置调试日志的记录级别，默认0；&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;expires&lt;/strong&gt;：SSI包含某个页面的超时配置，默认行为是所有的SSI指令在每一次请求中执行&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;isVirtualWebappRelative&lt;/strong&gt;：是针对Tomcat Context的根目录（虚拟目录）进行相对路径解析还是针对Tomcat的服务器目录进行相对路径解析（0=false,1=true）默认是0，不使用虚拟目录。&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;inputEncoding&lt;/strong&gt;：如果资源不是自身的，资源来自于容器外部，可以针对外部资源进行编码的设置，以什么变法方式输入资源，默认使用的是资源所在平台使用的编码。&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;outputEncoding&lt;/strong&gt;：SSI执行结果输出的编码方式，默认是UTF-8的。&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;配置SSI Filter的时候需要使用以下参数（init paramters）：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;contextType&lt;/strong&gt;：配置一个可以匹配的正则表达式规则提供给SSI执行使用，若自定义自己的匹配规 则，需要在mime 类型里面配置下边的可选项：在form里面设置“mime/type;charset=set”默认的是“text/x-server-parsed- html(;.*)?”&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;debug&lt;/strong&gt;：同上&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;expires&lt;/strong&gt;：同上&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;isVirtualWebappRelative&lt;/strong&gt;：同上&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;3.指令描述：&lt;/strong&gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;SSI是被HTML文档内需要进行处理的包含部分的SSI Servlet调用的。这些指令是HTML文档的注释形式，这些指令在将内容发送到客户端之前进行内容的替换。标准格式如下：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #f00000; font-size: small;&#34;&gt;&amp;lt;!--#directive [parm=value] --&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;这些指令包括：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;config&lt;/strong&gt;：设置日期格式一起被SSI处理的其他数据&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;(&amp;lt;!--#config timefmt=&amp;quot;%B %Y&amp;quot; --&amp;gt;)&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;echo&lt;/strong&gt;：将会被变量的值替换掉&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;(&amp;lt;!--#echo var=&amp;quot;VARIABLE_NAEM&amp;quot; --&amp;gt;)&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;exec&lt;/strong&gt;：用来执行服务器端的命令&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;include&lt;/strong&gt;：包含某些内容&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;(&amp;lt;!--#include virtual=&amp;quot;file-name&amp;quot; --&amp;gt;)&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;flastmod&lt;/strong&gt;：返回某个文件最后一次修改的时间&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;(&amp;lt;!--#flastmod file=&amp;quot;filename.shtml&amp;quot; --&amp;gt;)&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;fsize&lt;/strong&gt;：返回某个文件的大小&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;(&amp;lt;!--#fzie file=&amp;quot;filename.shtml&amp;quot; --&amp;gt;)&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;printenv&lt;/strong&gt;：返回所有定义的变量&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;(&amp;lt;!--#printenv --&amp;gt;)&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;set&lt;/strong&gt;：用来为定义的变量赋值&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #0000f0; font-size: small;&#34;&gt;(&amp;lt;!--#set var=&amp;quot;foo&amp;quot; value=&amp;quot;Bar&amp;quot; --&amp;gt;)&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;if elif endif else&lt;/strong&gt;：创建条件分支语句&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;a style=&#34;line-height: normal;&#34; href=&#34;http://httpd.apache.org/docs/1.3/howto/ssi.html&#34;&gt;Apache SSI官方文&lt;/a&gt;档&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;4.SSI Servlet里面的变量如下：&lt;/strong&gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;AUTH_TYPE——针对用户的认证授权方式：BASIC，FORM，etc.和Tomcat内的认证方式同步&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;CONTENT_LENGTH——从服务器表单传过来的数据长度，字符数目或者数据的字节数&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;CONTENT_TYPE——服务器访问呢数据的MIME类型，比如“text/html”&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;DATE_GMT——目前的时间格式方式使用GMT&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;DATE_LOCAL——目前的时间格式方式设置成为本地时间格式&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;DOCUMENT_NAME——当前上下文环境的文件地址&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;DOCUMENT_URI——虚拟路径定义的文件地址&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;GATEWAY_INTERFACE——CGI的版本定义：“CGI/1.1”&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;HTTP_ACCEPT——一个客户端可以接受的MIME类型列表&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;HTTP_ACCEPT_ENCODING——客户端可以接受的压缩文件类型的列表&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;HTTP_ACCEPT_LANGUAGE——客户端可以支持的语言列表&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;HTTP_CONNECTION——管理客户端的连接：是“Close”还是“Keep-Alive”&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;HTTP_HOST——客户端请求的站点地址&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;HTTP_REFERER——客户端请求之前所在的URL地址&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;HTTP_USER_AGENT——客户使用的浏览器端的请求结果&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;LAST_MODIFIED——当前页面上一次访问和修改的时间&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;PATH_INFO——访问此Servlet的路径信息&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;PATH_TRANSLATED——PATH_INFO提供的translated版本&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;QUERY_STRING——在URL地址?之后的请求参数列表&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;QUERY_STRING_UNESCAPED——没有经过编码过的请求参数&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;REMOTE_ADDR——用户请求客户端IP地址&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;REMOTE_HOST——用户发送请求的主机名&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;REMOTE_PORT——用户发送请求的端口号&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;REMOTE_USER——认证授权需要的发送请求的用户名&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;REQUEST_METHOD——请求使用方法：GET或者POST&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;REQUEST_URI——客户端原来访问请求的Web页面的URI地址&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;SCRIPT_FILENAME——在服务器上当前页面的地址&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;SCRIPT_NAME——当前页面的名称&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;SERVER_ADDR——服务器所在的IP地址&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;SERVER_NAME——服务器的主机名或者IP地址&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;SERVER_PORT——服务器接受请求的端口号&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;SERVER_PROTOCOL——服务器处理请求的协议：“HTTP/1.1”&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;SERVER_SOFTWARE——服务器响应客户端请求的名称和版本号&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;UNIQUE_ID——一旦创建链接过后每一次会话由服务器分配的唯一会话标识（是不是SessionID？我不敢肯定，因为没有做过验证，有可能是有可能不是，不过有一点，此属性和直接和会话相关的。）&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;&lt;strong style=&#34;line-height: normal;&#34;&gt;5.配置过程：&lt;/strong&gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;1).先保证Tomcat可以运行，即能够正常启动&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;2).（5.x版本）服务器根目录下边&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #f00000; font-size: small;&#34;&gt;$TOMCAT_HOME&lt;/span&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;(或者&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #f00000; font-size: small;&#34;&gt;$CATALINA_HOME)/server/lib/&lt;/span&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;目录下边有一个文件：&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; color: #f00000; font-size: small;&#34;&gt;servlets-ssi.renametojar&lt;/span&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;，将这个文件名更名为一个jar后缀，当然最方便的方法是直接改掉文件后缀，按照Tomcat扫描jar路径类的原理来讲，直接更名为jar应该也是可以的，不过我没尝试过，一般网上最常用的方法是改成：&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #f00000; font-size: small;&#34;&gt;servlets-ssi.jar&lt;/span&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;。（6.x版本）服务器不需要去寻找jar文件了，直接进入下一步操作都可以。&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;3).找到文件：&lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #f00000; font-size: small;&#34;&gt;$TOMCAT_HOME(或者$CATALINA_HOME)/conf/web.xml&lt;/span&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;，这里面不需要我们自己写入SSI Servlet和SSI Filter的配置，首先我们要选择使用哪种方式来配置：&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;Servlet配置：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; 在这个文件里面，找到以下注释代码段，将注释代码段去掉：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;Servlet配置——&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;lt;!--&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;servlet&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;servlet-name&amp;gt;ssi&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;servlet-class&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; org.apache.catalina.ssi.SSIServlet&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/servlet-class&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;buffered&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;1&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;debug&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;0&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;expires&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;666&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;isVirtualWebappRelative&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;0&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;load-on-startup&amp;gt;4&amp;lt;/load-on-startup&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/servlet&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;--&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;ServletMapping配置——&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;lt;!--&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;servlet-name&amp;gt;ssi&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;url-pattern&amp;gt;*.shtml&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;--&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;Filter配置：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;Filter的相关配置——&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;lt;!--&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;filter&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;filter-name&amp;gt;ssi&amp;lt;/filter-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;filter-class&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; org.apache.catalina.ssi.SSIFilter&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/filter-class&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;contentType&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;text/x-server-parsed-html(;.*)?&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;debug&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;0&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;expires&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;666&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;isVirtualWebappRelative&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;0&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/filter&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;--&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;FilterMapping相关配置——&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;lt;!--&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;filter-mapping&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;filter-name&amp;gt;ssi&amp;lt;/filter-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;url-pattern&amp;gt;*.shtml&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/filter-mapping&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;--&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;只是Filter配置里面还需要取消另外一个注释，下边的MIME TYPE的服务器支持相关注释&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;lt;!--&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;mime-mapping&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;extension&amp;gt;shtml&amp;lt;/extension&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;mime-type&amp;gt;text/x-server-parsed-html&amp;lt;/mime-type&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/mime-mapping&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;--&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; 上边的注释取消过后，配置就基本好了，在Tomcat 5.x的版本中配置的时候，到这个地步就结束了，但是在Tomcat 6.x版本中可能还会出现下边的异常：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;    &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt; &lt;/span&gt;   &lt;span style=&#34;line-height: normal; color: #f00000; font-size: small;&#34;&gt;java.lang.SecurityException: Filter of class org.apache.catalina.ssi.SSIFilter(SSIServlet) is privileged and cannot be loaded by this web application&lt;/span&gt;   &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;4).所以正对这点6.x还有一个步骤，在$TOMCAT_HOME(或者$CATALINA_HOME)/conf/context.xml 文件中在&amp;lt;Context&amp;gt;结点添加一个属性privileged=&amp;quot;true&amp;quot;，然后再启动就不会抛出上边的异常了。&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;5).若要解决乱码问题，根据上边文档需要修改SSI中的启动参数：添加如下代码：&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;&lt;span style=&#34;line-height: normal; color: #800080;&#34;&gt;inputEncoding&lt;/span&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;&lt;span style=&#34;line-height: normal; color: #800080;&#34;&gt;utf-8&lt;/span&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-name&amp;gt;&lt;span style=&#34;line-height: normal; color: #800080;&#34;&gt;outputEncoding&lt;/span&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param-value&amp;gt;&lt;span style=&#34;line-height: normal; color: #800080;&#34;&gt;utf-8&lt;/span&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; color: #008080; font-size: small;&#34;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;  &lt;/div&gt;   &lt;div style=&#34;font-family: Arial; font-size: 12px; line-height: normal;&#34;&gt;   &lt;span style=&#34;line-height: normal; font-size: small;&#34;&gt;上边参数已经描述详细了：&lt;/span&gt;  &lt;/div&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>html 动态引入 其他文件</title>
      <link>https://helao.net/2010/19.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&amp;lt;!-- #include PathType = FileName --&amp;gt; &lt;br /&gt;&lt;br /&gt; 参数 &lt;br /&gt; PathType &lt;br /&gt;&lt;br /&gt; 将 FileName 的路径类型。路径可为以下某种类型： &lt;br /&gt;&lt;br /&gt; 路径类型 含义 &lt;br /&gt; 文件 该文件名是带有 #include 命令的文档所在目录的相对路径。被包含文件可位于相同目录或子目录中；但它不能处于带有 #include 命令的页的上层目录中。 &lt;br /&gt; 虚拟 文件名为 Web 站点上虚拟目录的完整虚拟路径。 &lt;br /&gt;&lt;br /&gt; FileName &lt;br /&gt;&lt;br /&gt; 指定要包含的文件名。FileName 必须包含文件名扩展，而且必须将文件名用引号 (&amp;quot;) 引起来。 &lt;br /&gt;&lt;br /&gt; 注释 &lt;br /&gt; 包 含 #include 命令的文件必须使用映射到 SSI 解释器的文件扩展名；否则，Web 服务器将不处理该命令。默认情况下，扩展名 .stm、.shtm 和 .shtml 将映射到解释器 (Ssinc.dll)。如果安装了 Internet 服务管理器，则可以修改默认扩展映射并添加新的映射。请参阅设置应用程序映射。被包含的文件可具有任何文件扩展名，但建议赋予它们 .inc 扩展名。 &lt;br /&gt;&lt;br /&gt; 示例 &lt;br /&gt; &amp;lt;!--被包含文件与父文件存在于相同目录中。 --&amp;gt; &lt;br /&gt; &amp;lt;!-- #include file = &amp;quot;myfile.inc&amp;quot; --&amp;gt; &lt;br /&gt;&lt;br /&gt; &amp;lt;!--被包含文件位于脚本虚拟目录中。 --&amp;gt; &lt;br /&gt; &amp;lt;!-- #include virtual = &amp;quot;/scripts/tools/global.inc&amp;quot; --&amp;gt; &lt;br /&gt;&lt;br /&gt; include file 与include virtual的区别 &lt;br /&gt;&lt;br /&gt; 1。#include file 包含文件的相对路径，#include virtual包含文件的虚拟路径。 &lt;br /&gt; 2。 在同一个虚拟目录内，&amp;lt;!--#include file=&amp;quot;file.asp&amp;quot;--&amp;gt;和&amp;lt;!--#include virtual=&amp;quot;file.asp&amp;quot;--&amp;gt;效果是相同的，但假设虚拟目录名为myweb,则&amp;lt;!--#include virtual=&amp;quot;myweb/file.asp&amp;quot;--&amp;gt;也可以通过调试，但我们知道&amp;lt;!--#include file=&amp;quot;myweb/file.asp&amp;quot;--&amp;gt;是绝对要报错的。 &lt;br /&gt; 3。如果一个站点下有2个虚拟目录myweb1和 myweb2,myweb1下有文件file1.asp,myweb2下有文件file2.asp,如果file1.asp要调用file2.asp,那 么在file1.asp中要这样写：&amp;lt;!--#include virtual=&amp;quot;myweb2/file2.asp&amp;quot;--&amp;gt;，在这种情况下用#include file是无法实现的，用&amp;lt;!--#include file=&amp;quot;myweb2/file2.asp&amp;quot;--&amp;gt;必然报错。相反，在myweb2的文件中包含myweb1中的文件也是一样。如果该被包含文 件在某个文件夹下面，只要在虚拟路径中加上该文件夹即可。 &lt;br /&gt; 4。不论用#include file 还是 #include virtual，在路径中用“/”还是“\”或者二者交叉使用都不会影响编译效果，程序会顺利执行。 &lt;br /&gt; 5。 以上情况不适用于2个站点文件的相互调用，而且在同一个站点内，&amp;lt;!--#include file=&amp;quot;file.asp&amp;quot;--&amp;gt;和&amp;lt;!--#include virtual=&amp;quot;file.asp&amp;quot;--&amp;gt;等效，但假设站点名为website,使用&amp;lt;!--#include virtual=&amp;quot;website/file.asp&amp;quot;--&amp;gt;是错误的。 &lt;br /&gt;&lt;br /&gt; &amp;lt;!--include file=&amp;quot;abc/abc.asp&amp;quot;--&amp;gt; &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>freemarker 使用jsp标签</title>
      <link>https://helao.net/2010/18.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&#xA;    freemarker 可以使用jsp标签，但只有你用了他的 freemarkerservlet，这个功能才能有效。如果你想生成静态文件那么这样就不行了&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    使用jsp标签的方法&amp;nbsp; 使用心得&lt;br /&gt;&#xA;&amp;lt;#global hm=JspTaglibs[&#34;/WEB-INF/struts-html.tld&#34;]&amp;gt;&lt;br /&gt;&#xA;&amp;lt;@hm.form action=&#34;logon.do&#34; method=&#34;post&#34;&amp;gt;&lt;br /&gt;&#xA;&lt;input name=&#34;username&#34; type=&#34;text&#34; /&gt;&lt;br /&gt;&#xA;&lt;input name=&#34;password&#34; type=&#34;password&#34; /&gt;&lt;br /&gt;&#xA;&lt;input type=&#34;submit&#34; name=&#34;submit&#34; /&gt;&lt;br /&gt;&#xA;&lt;!--@hm.form--&gt;&lt;br /&gt;&#xA;&amp;lt;@include_page path= &#34;/error.jsp&#34;/&amp;gt; &lt;br /&gt;&#xA;&lt;br /&gt;&#xA;可以这样来支持jsp标签 &lt;br /&gt;&#xA;也可以支持jsp:include 这个标签 &lt;br /&gt;&#xA;其本质是在model中添加了 对jsptaglibs和tabinclude 的标记&lt;br /&gt;&#xA;这是 freemarkerservlet 中 对templateModel的初始化&amp;nbsp; 从以下红色代码可以看出，想要自己处理jsptaglibs 而不去调用它的servlet 只需要在自己的model中添加上这个值对就可以了，应用环境&amp;nbsp; servlet &lt;br /&gt;&#xA;需 要注意的一个问题&amp;nbsp; 使用include这个标签是 由于传入的是request和response这两个参数，include来的内容会写入到response中，而不是自己指定的out中，所以这部分可 能需要进行一些修改，如果只是其用来做表示层 那么很容易（本来就是这么做的）&lt;br /&gt;&#xA;&lt;br /&gt;&#xA;final HttpServletResponse response) throws TemplateModelException { }&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;protected TemplateModel createModel(ObjectWrapper wrapper,&#xA;ServletContext servletContext,&#xA;final HttpServletRequest request,&#xA;final HttpServletResponse response) throws TemplateModelException {&#xA;try {&#xA;AllHttpScopesHashModel params = new AllHttpScopesHashModel(wrapper, servletContext, request);&#xA;&#xA;// Create hash model wrapper for servlet context (the application)&#xA;ServletContextHashModel servletContextModel =&#xA;(ServletContextHashModel) servletContext.getAttribute(&#xA;ATTR_APPLICATION_MODEL);&#xA;if (servletContextModel == null)&#xA;{&#xA;servletContextModel = new ServletContextHashModel(this, wrapper);&#xA;servletContext.setAttribute(&#xA;ATTR_APPLICATION_MODEL,&#xA;servletContextModel);&#xA;TaglibFactory taglibs = new TaglibFactory(servletContext);&#xA;servletContext.setAttribute(&#xA;ATTR_JSP_TAGLIBS_MODEL,&#xA;taglibs);&#xA;initializeServletContext(request, response);&#xA;}&#xA;params.putUnlistedModel(KEY_APPLICATION, servletContextModel);&#xA;params.putUnlistedModel(KEY_APPLICATION_PRIVATE, servletContextModel);&#xA;params.putUnlistedModel(KEY_JSP_TAGLIBS, (TemplateModel)servletContext.getAttribute(ATTR_JSP_TAGLIBS_MODEL)); &#xA;// Create hash model wrapper for session&#xA;HttpSessionHashModel sessionModel;&#xA;HttpSession session = request.getSession(false);&#xA;if(session != null) {&#xA;sessionModel = (HttpSessionHashModel) session.getAttribute(ATTR_SESSION_MODEL);&#xA;if (sessionModel == null || sessionModel.isZombie()) {&#xA;sessionModel = new HttpSessionHashModel(session, wrapper);&#xA;session.setAttribute(ATTR_SESSION_MODEL, sessionModel);&#xA;if(!sessionModel.isZombie()) {&#xA;initializeSession(request, response);&#xA;}&#xA;}&#xA;}&#xA;else {&#xA;sessionModel = new HttpSessionHashModel(this, request, response, wrapper);&#xA;}&#xA;params.putUnlistedModel(KEY_SESSION, sessionModel);&#xA;&#xA;// Create hash model wrapper for request&#xA;HttpRequestHashModel requestModel =&#xA;(HttpRequestHashModel) request.getAttribute(ATTR_REQUEST_MODEL);&#xA;if (requestModel == null || requestModel.getRequest() != request)&#xA;{&#xA;requestModel = new HttpRequestHashModel(request, response, wrapper);&#xA;request.setAttribute(ATTR_REQUEST_MODEL, requestModel);&#xA;request.setAttribute(&#xA;ATTR_REQUEST_PARAMETERS_MODEL,&#xA;createRequestParametersHashModel(request));&#xA;}&#xA;params.putUnlistedModel(KEY_REQUEST, requestModel);&#xA;params.putUnlistedModel(KEY_INCLUDE, new IncludePage(request, response)); &#xA;params.putUnlistedModel(KEY_REQUEST_PRIVATE, requestModel);&#xA;&#xA;// Create hash model wrapper for request parameters&#xA;HttpRequestParametersHashModel requestParametersModel =&#xA;(HttpRequestParametersHashModel) request.getAttribute(&#xA;ATTR_REQUEST_PARAMETERS_MODEL);&#xA;params.putUnlistedModel(KEY_REQUEST_PARAMETERS, requestParametersModel);&#xA;return params;&#xA;} catch (ServletException e) {&#xA;throw new TemplateModelException(e);&#xA;} catch (IOException e) {&#xA;throw new TemplateModelException(e);&#xA;}&#xA;}&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>you know or not</title>
      <link>https://helao.net/2010/17.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;div class=&#34;entry&#34;&gt;  &lt;h1 class=&#34;entry-title&#34;&gt;2020年，中国将会是一个非常穷的国家！&lt;/h1&gt;  &lt;div class=&#34;entry-content&#34;&gt;   &lt;p&gt;兰德公司对当代中国及中国人的评价及预测&lt;/p&gt;   &lt;p&gt;美国兰德公司介绍： http://baike.baidu.com/view/707444.htm?fr=ala0_1_1&lt;br /&gt; 报告原文链接： http://www.rand.org/pubs/testimonies/2005/RAND_CT244.pdf&lt;/p&gt;   &lt;p&gt;美 国的兰德公司，尽管网上早有谈论，而对于绝大多数中国人而言，仍然是陌生的，甚或闻所未闻的。而正是这个公司，在60年前，由于准确预测“一旦美国参与朝 鲜战争，中国必将出兵朝鲜”，一炮走红，从此确立了兰德公司世界第一智库的显赫地位。现在被誉为现代智囊的“大脑集中营”、“超级军事学院”，以及世界智 囊团的开创者和代言人。它可以说是当今美国乃至世界最负盛名的决策咨询机构。&lt;/p&gt;   &lt;p&gt;兰德是美国领先的智库/思想库。应该是个保守派/右派,下面的文章写的很狠,但耐心想想是有它的道理,是对我们这一代人的一个警钟。中国不要成为一个没有灵魂的巨人。&lt;/p&gt;   &lt;p&gt;本文观点来自美国兰德公司亚太政策中心：&lt;/p&gt;   &lt;p&gt;如 果20世纪的中国是一个富裕和统一的国家，我们会有一个完全不同的第一次世界大战，我们就不会有第二次世界大战而是第二次欧洲大战。中国能够阻止日本侵略 或者打败日本。美国在这些冲突上的花费从根本意义上会减少很多，因为珍珠港事件不会发生。我们和整个世界，更不用说10亿中国人，一个多世纪以来，已经为 中国的弱小付出了惨重的代价。世界需要一个健康的中国。&lt;/p&gt;   &lt;p&gt;中国的需求对日本走出衰退起到了促进作用。日本状况给世界经济带来了风险。关于这一 点，怎么说都不夸张。日本巨额的债务会产生多米诺骨牌效应，逐渐波及到全世界。在中国有力的帮助下，危险似乎已经过去。中国全球化给美国带来了很多影响。 最明显的是，中国成为美国商品最大的市场。可口可乐早就完成了那个看上去像是神话的目标：卖10亿瓶可口可乐；曾经嘲笑中国梦的通用在中国卖了很多的别克 汽车，在困难时期，中国带来的利润占通用利润的很大一部分；中国联想购买IBM个人电脑业务，挽救了这个垂死部门的工作岗位。中国提供更低价的生活必需品 给美国人的生活水平做出了很大的贡献，尤其是对我们不是那么富裕的居民而言。有迹象表明由于能够购买中国低价的出口货物，低收入美国人的生活水平可能提高 了5%到10%。&lt;/p&gt;   &lt;p&gt;中国金融体系的不合理意味著中国建造了垂死企业，导致巨大的生产 力过剩。近些年来，中国财政政策上的反复无常导致过度建造，对铁、铝、水泥和其他原材料产生了巨大的需求。日本人和现在的中国人看上去似乎会买下世界上所 有的东西，但是当你看到他们的财政状况的潜在问题时，你会发现一个黑洞。日本人在90 年代陷入了这样一个黑洞，至今还在努力地爬出来。中国人很多年后仍将会为目前这种无节制的狂热的购买行为感到心痛。&lt;/p&gt;   &lt;p&gt;目前，中国面临著巨大的 挑战。中国的银行是我们所知道的世界上最糟糕的银行。中国每一代，都有相当于美国规模的人口从农村涌入城市。每年，都有 1200-1300万新工人加入就业大军。在制造业，生产力对就业的影响比我们国家要严重得多。到2020年，中国人口老龄化会使工作人口与不工作人口的 比率成为世界上最糟糕的，比日本更甚。如果没有特效的新政策的话，中国的经济在那个时期就会狠狠地撞墙。到2020年，以我们的标准来看，它会是一个非常 穷的国家。&lt;/p&gt;   &lt;p&gt;中国人缺乏诚信和社会责任感。中国人不了解他们作为社会个体应该对国家和社会所承担的责任和义务。普通中国人通常只关心他们的家 庭和亲属，中国的文化是建立在家族血缘关系上而不是建立在一个理性的社会基础之上。中国人只在乎他们直系亲属的福址，对与自己毫不相关的人所遭受的苦难则 视而不见。毫无疑问，这种以血缘关系为基础的道德观势必导致自私，冷酷，这种自私和冷酷已经成为阻碍中国社会向前发展的最关键因素。&lt;/p&gt;   &lt;p&gt;中国从来就没有成为一个法制社会，因为中国人的思维方式与守法行为格格不入。中国人老想走捷径。他们不明白这样一个事实：即成就来自于努力工作和牺牲。中国人倾向于索取而不给予。他们需要明白一个道理：生活的真蒂不在于你索取多少，而在于你能给予社会和你的人类同胞多少。&lt;/p&gt;   &lt;p&gt;大 多数中国人从来就没有学到过什么是体面和尊敬的生活意义。中国人普遍不懂得如何为了个人和社会的福址，去进行富有成效的生活。潜意识里，中国人视他们的生 活目的就是抬高自己，从而获得别人的认知。这样一来，一个人就会对“保有面子“这样微不足道欲望感到满足。“面子“是中国人心理最基本的组成部分，它已经 成为了中国人难以克服的障碍，阻碍中国人接受真理并尝试富有意义的生活。这个应受谴责的习性使得中国人生来就具有无情和自私的特点，它已成为中国落后的主 要原因。&lt;/p&gt;   &lt;p&gt;中国人没有勇气追求他们认为正确的事情。首先，他们没有从错误中筛选正确事物的能力，因为他们的思想被贪婪所占据。再有，就算他们有能力筛选出正确的事情，他们也缺乏勇气把真理化为实践。&lt;/p&gt;   &lt;p&gt;中 国人习惯接受廉价和免费的事物，他们总是梦想奇迹或者好运，因为他们不愿意付出努力，他们总想不劳而获。很少有中国人明白一个事实，就是威望和成就是通过 一步步努力的工作和牺牲实现的，不付出就没有所得。简单来说，如果是为了谋生，那一个人只有去索取；但如果是为了生活，一个人必须要去奉献。&lt;/p&gt;   &lt;p&gt;由于在贫穷的环境下生长并且缺少应有的教育，大多数中国人不懂得优雅的举止和基本的礼貌。他们中的大多数人着装笨拙粗鄙却不感到害羞。他们在青少年时所受的教育就是如何说谎并从别人那里索取，而不是去与别人去分享自己的所有。&lt;/p&gt;   &lt;p&gt;中国是一个物产丰富的国家。但无限制生育政策所带来恶果使得中国成为了无限廉价劳动力的输出国。这些输出也包括那些受过教育的劳力输出，除了他们的教育水平，实则和其他一般苦力没有本质上的区别。&lt;/p&gt;   &lt;p&gt;中 国大规模生产的便宜产品降低了输入这些产品的地区的商业信用度。由于技术落后，管理失败，中国制造的单位能耗要比发达国家如日本，美国高出很多。因此，随 着出口额的增加，中国在扩大生产的同时丧失着宝贵的能源。同时，这种行为也严重的污染了环境，使中国变为全世界最不适宜人类居住的国家。&lt;/p&gt;   &lt;p&gt;目 前中国正在遭受着资本主义社会2大邪恶的折磨，即环境的破坏与人性的丧失。由于中国人天生的贪婪的本性，它们可以毫无保留的接受资本主义的阴暗面即无止境 的追求利润，忽视人的尊严。中国人对西方的技术与产品狂热追求，却对西方管理文化所强调的坦率、直接、诚实这些品质漠不关心。&lt;/p&gt;   &lt;p&gt;由于中国文化 不鼓励敢于冒险这种优良品质，所以中国人极力避免冒险，他们也不想寻求机会来改善自己的生活。中国人对于生活的平衡性和意义性并不感兴趣，相反他们更执迷 于对物质的索取，这点上要远远胜于西方人。大多数中国人发现他们不懂得“精神灵性“，“自由信仰“以及“心智健康“这样的概念，因为他们的思想尚不能达到 一个生命（补：即肉体和灵性的并存）存在的更高层次。他们的思想还停留在专注于动物本能对性和食物那点贪婪可怜的欲望上。&lt;/p&gt;   &lt;p&gt;在中国人的眼中， 受教育不是为了寻求真理或者改善生活质量，而只是身份和显赫地位的象征和标志。中国的知识分子从别人那里得到尊敬，不是因为他们为了别人的幸福做过什么， 而只是因为他们获得占有了相当的知识。事实上，他们中的大多数只不过是一群仅仅通晓考试却从不关心真理和道德的食客。&lt;/p&gt;   &lt;p&gt;中国的教育体系很大程度上已经成为一种失败和耻辱。它已经不能够服务于教育本应所服务的对象：社会。这个教育体系不能提供给社会许多有用的个体。它只是制造出一群投机分子，他们渴望能够受益于社会所提供的好处却毫不关心回报。&lt;/p&gt;   &lt;p&gt;中 国可以培养出大批的高级技能人才，但却很少可以培养出合格的可以独立主持的管理级专家。服务于一个公司或者社会，光有技术是不够的；还需要有勇气、胆量、 正直和诚实的领导才能，这恰恰是大多数中国人所缺少的品性。正如亚瑟.史密斯，一位著名的西方传教士一个世纪前所指出的，中国人最缺乏的不是智慧，而是勇 气和正直的纯正品性。这个评价，虽然历经百年，如今依旧准确诊断出中国综合症的病因。&lt;/p&gt;   &lt;p&gt;大多数中国毕业生对选择出国并为外国工作不会感到内疚，事实上他们首先欠下了中国人民在教育上为他们所做出的牺牲。随着传统文化价值观的破坏和逐步衰弱，大多数的中国人，包括受过教育的人都徘徊在精神和内心世界的路口，像迷失的狗一样不知何去何从。&lt;/p&gt;   &lt;p&gt;附文2—-兰德公司报告&lt;/p&gt;   &lt;p&gt;(一）中国人不了 解他们作为社会个体应该对国家和社会所承担的责任和义务。&lt;/p&gt;   &lt;p&gt;普通中国人通常只关心他们的家庭和亲属，中国的文化是建立在家族血缘关系上而不是建立在一个理性的社会基础之上。中国人只在乎他们直系亲属的福址，对与自己毫不相关的人所遭受的苦难则视而不见。&lt;/p&gt;   &lt;p&gt;毫无疑问，这种以血缘关系为基础的道德观势必导致自私，冷酷，这种自私和冷酷已经成为阻碍中国社会向前发展的最关键因素。&lt;/p&gt;   &lt;p&gt;（七）失败的中国式教育成为世界的笑柄：&lt;/p&gt;   &lt;p&gt;在 中国人的眼中，受教育不是为了寻求真理或者改善生活质量，而只是身份和显赫地位的象征和标志。中国的知识分子从别人那里得到尊敬并不是因为他们为了别人的 幸福做过什么，而只是因为他们获得占有了相当的知识。事实上，他们中的大多数只不过是一群仅仅通晓考试却从不关心真理和道德的食客。&lt;/p&gt;   &lt;p&gt;中国教育的目的不是为了帮助社会改善总体水平，而是为统制阶层和少数富有阶层服务的。中国的政府 部门总是引以为豪的标榜自己是人民的这个，人民的那个，但没有一个是为人民的利益服务的。唯一服务的对象就是他们自身集团的利益。&lt;/p&gt;   &lt;p&gt;中国的教育体系很大程度上已经成为一种失败和耻辱。它已经不能够服务于教育本应所服务的对象：社会。这个教育体系不能提供给社会许多有用的个体。它只是制造出一群投机分子，他们渴望能够受益于社会所提供的好处却毫不关心回报。&lt;/p&gt;   &lt;p&gt;中 国可以培养出大批的高级能人才，但却很少可以培养出合格的可以独立主持的管理级专家。服务于一个公司或者社会，光有技术是不够的；还需要有勇气，胆量，正 直和诚实的领导才能，这恰恰是大多数中国人所缺少的品性。正如亚瑟.史密斯，一位著名的西方传教士一个世纪前所指出的，中国人最缺乏的不是智慧，而是勇气 和正直的纯正品性。这个评价，虽然历经百年，如今依旧准确诊断出中国综合症的病因。&lt;/p&gt;   &lt;p&gt;大多数中国毕业生对选择出国并为外国工作不会感到内疚，事实上他们首先欠下了中国人民在教育上为他们所做出的牺牲。随着传统文化价值观的破坏和逐步衰弱，大多数的中国人，包括受过教育的人都徘徊在精神和内心世界的路口，像迷失的狗一样不知何去何从。&lt;/p&gt;   &lt;p&gt;中国人如此之愚昧地认为别人会用他们一样的方式去行为和思考。&lt;br /&gt; （二）中国人是世界上少数没有信仰的可怕国家之一：&lt;/p&gt;   &lt;p&gt;中国人没有自己的信仰，这导致自我泛滥，缺少约束，缺少统一的精神支柱，他们没有通一规范的道德意识和真理意识，每个人只相信他自己，每个人按自己的意志确立行为，每个人都有他自己行为的道理，这导致中国人在各个行业和生活领域中没有统一意识。&lt;/p&gt;   &lt;p&gt;中国是无神论国度，大多数人接受的是无神论者教育，蔑视宗教信仰，把宗教信仰当做迷信，精神领域没有共同的凝聚和约束。大部分人，他们坚持认为自己是无神论者，其实质行为上却是泛神论者，在中国，拜鬼现象非常普遍。&lt;/p&gt;   &lt;p&gt;由于缺乏信仰，中国人没有罪恶感，没有亏欠和内疚感，只要犯罪不被知道，就是无罪，这导致中国人在内部矛盾分歧时，在人性中的残忍和冷漠，纵观中国整个历史，最残忍的争斗和屠杀都来自于他们内部自己。&lt;/p&gt;   &lt;p&gt;（三）中国人所说的政治除了欺骗和背叛没有其它东西：&lt;/p&gt;   &lt;p&gt;中国从来就没有成为一个法制社会，因为中国人的思维方式与守法行为格格不入。中国人老想走捷径。他们不明白这样一个事实：即成就来自于与努力工作和牺牲。&lt;/p&gt;   &lt;p&gt;在中国，人情高于法律，导致一代又一代人在徇私枉法贪赃受贿的社会不公正和法律不公正中互相效法模仿，徇私枉法成为中国人的传统 。&lt;/p&gt;   &lt;p&gt;在中国，政治斗争是罕见残酷而无情的，政治斗争让中国一代一代人失去人性。&lt;/p&gt;   &lt;p&gt;（四）大多数中国人从来就没有学到过什么是体面和尊敬的生活意义：&lt;/p&gt;   &lt;p&gt;中国人倾向于索取而不给予。他们需要明白一个道理：生活的真蒂不在于你索取多少而在于你能给予社会和你的人类同胞多少。&lt;/p&gt;   &lt;p&gt;大多数中国人从来就没有学到过什么是体面和尊敬的生活意义。&lt;/p&gt;   &lt;p&gt;中 国人普遍不懂得如何为了个人和社会的福址去进行富有成效的生活。潜意识里，中国人视他们的生活目的就是抬高自己从而获得别人的认知。这样一来，一个人就会 对“保有面子”这样微不足道欲望感到满足。“面子”是中国人心理最基本的组成部分，它已经成为了中国人难以克服的障碍，阻碍中国人接受真理并尝试富有意义 的生活。&lt;/p&gt;   &lt;p&gt;这个应受谴责的习性使得中国人生来就具有无情和自私的特点，它已成为中国落后的主要原因。中国人没有勇气追求他们认为正确的事情。 首先，他们没有从错误中筛选正确事物的能力，因为他们的思想被贪婪所占据。再有，就算他们有能力筛选出正确的事情，他们也缺乏勇气把真理化为实践。&lt;/p&gt;   &lt;p&gt;中 国人习惯接受廉价和免费的事物，他们总是梦想奇迹或者好运，因为他们不愿意付出努力，他们总想不劳而获。很少有中国人明白一个事实，就是威望和成就是通过 一步步努力的工作和牺牲实现的，不付出就没有所得。简单来说，如果是为了谋生，那一个人只有去索取；但如果是为了生活，一个人必须要去奉献。&lt;/p&gt;   &lt;p&gt;为了掩饰中国目前的失业，贫穷，惊人的资源浪费等现实，中国政府编造出一串数字来把中国打扮成一个经济上欣欣向荣的国家。这样做只有一个目的，就是吸引更多的外国资本来填补中国的这个无底洞。&lt;/p&gt;   &lt;p&gt;所以当人们下次听到中国政府所宣布的经济高增长率等数字时应该想想这些臆想出来的数字是否正常。&lt;/p&gt;   &lt;p&gt;我们不能忘记我们不得不为这个中国政府粉饰的表面上繁荣的伪资本主义国家付出什么样的代价。&lt;/p&gt;   &lt;p&gt;（五）中国人的价值观建立在私欲之中：&lt;/p&gt;   &lt;p&gt;由于在贫穷的环境下生长并且缺少应有的教育，大多数中国人不懂得优雅的举止和基本的礼貌。他们中的大多数人着装笨拙粗鄙却不感到害羞。&lt;/p&gt;   &lt;p&gt;他们在青少年时所受的教育就是如何说谎并从别人那里索取，而不是去与别人去分享自己的所有。&lt;/p&gt;   &lt;p&gt;中国是一个物产丰富的国家。但无限制生育政策所带来恶果使得中国成为了无限廉价劳动力的输出国。这些输出也包括那些受过教育的劳力输出，除了他们的教育水平，实则和其他一般苦力没有本质上的区别。&lt;/p&gt;   &lt;p&gt;中国大规模生产的便宜产品降低了输入这些产品的地区的商业信用度。由于技术落后，管理失败，中国制造的单位能耗要比发达国家如日本，美国高出很多。&lt;/p&gt;   &lt;p&gt;因此，随着出口额的增加，中国在扩大生产的同时丧失着宝贵的能源。同时，这种行为也严重的污染了环境，使中国变为全世界最不适宜人类居住的国家。&lt;/p&gt;   &lt;p&gt;目前中国正在遭受着资本主义社会2大邪恶的折磨，即环境的破坏与人性的丧失。由于中国人天生的贪婪的本性，它们可以毫无保留的接受资本主义的阴暗面和无止境的利益纷争。&lt;/p&gt;   &lt;p&gt;中国人对西方的技术与产品狂热追求却对西方管理文化所强调的坦率，直接，诚实这些品质漠不关心。&lt;/p&gt;   &lt;p&gt;有人曾经做过的一个精彩的比喻可以用来解释这种奇怪的被称为中国模式的资本主义的现实，即没有法律约束的资本主义就像不存在地狱这一概念的基督教，最终每个人都堕落，无一幸免。事实上，现在的中国制造已经成为质量低劣，价格便宜，仿制，侵犯知识产权的代名词。&lt;/p&gt;   &lt;p&gt;由于中国文化不鼓励敢于冒险这种优良品质，所以中国人极力避免冒险，他们也不想寻求机会来改善自己的生活。&lt;/p&gt;   &lt;p&gt;（六）中国人的生活思想还停留在专注于动物本能对性和食物那点贪婪可怜的欲望上。&lt;/p&gt;   &lt;p&gt;中国人对于生活的平衡性和意义性并不感兴趣，相反他们更执迷于对物质的索取，这点上要远远胜于西方人。大多数中国人发现他们不懂得“精神灵性”，“自由信仰”以及“心智健康”这样的概念，因为他们的思想尚不能达到一个生命（补：即肉体和灵性的并存）存在的更高层次。&lt;/p&gt;   &lt;p&gt;中国人追求腐化堕落的生活，满足于自我生理感官需求，他们的文化建立在声色犬马之中:麻将、￥赌￥博￥、￥色￥情￥、吃欲、贪欲、色欲无不渗透在他们生活和文化中。&lt;/p&gt;  &lt;/div&gt; &lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>jquery 和velocity $冲突的解决办法</title>
      <link>https://helao.net/2010/16.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;Velocity的$与Jquery的$发生冲突时的解决方法有以下几个：&lt;br /&gt; 1、使用jQuery代替$。&lt;br /&gt; &amp;nbsp;&amp;nbsp; 如:jQuery.ajax();&lt;br /&gt; &amp;nbsp;&amp;nbsp; 缺点：不适合扩展，一旦替换成第三方库时，那就麻烦大发&lt;br /&gt;&lt;br /&gt; 2、使用jQuery.noConflict。&lt;br /&gt; &amp;nbsp;&amp;nbsp; 如：var j = jQuery.noConflict(); j.ajax();&lt;br /&gt; &amp;nbsp;&amp;nbsp; 缺点：当使用jQuery的相关插件时,会使得插件失效哦！&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;strong&gt;3、wrap jQuery中的冲突方法&lt;/strong&gt; &lt;/span&gt; 。&lt;br /&gt; &amp;nbsp;&amp;nbsp; 如$.ajax()在Velocity中会冲突，则重新定义如下：&lt;br /&gt; function dw(){}&lt;br /&gt; dw.ajax=function(s){&lt;br /&gt; &amp;nbsp;&amp;nbsp; &amp;nbsp;jQuery.ajax(s);&lt;br /&gt; }&lt;br /&gt; dw.ajax(); &lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>jsp el 表达式介绍</title>
      <link>https://helao.net/2010/15.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;div class=&#34;entry&#34;&gt;  &lt;span style=&#34;font-family: Arial,&#39;MS Sans Serif&#39;; font-size: 14px; line-height: 21px;&#34;&gt; &lt;h3 style=&#34;margin: 0px; padding: 0px;&#34;&gt;JSP EL简介&lt;/h3&gt; &lt;/span&gt;  &lt;p style=&#34;padding: 0px; margin: 1em 0px 0.5em; color: #444444;&#34;&gt;语 法结构 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ${expression} 2、[ ]与.运算符 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; EL 提供“.“和“[ ]“两种运算符来存取数据。 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 当要存取的属性名称中包含一些特殊字符，如.或?等并非字母或数字的符号，就一定要使用“[ ]“。例如： &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ${user.My-Name}应当改为${user[&amp;quot;My-Name&amp;quot;] } &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 如果要动态取值时，就可以用“[ ]“来做，而“.“无法做到动态取值。例如： &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ${sessionScope.user[data]}中data 是一个变量 3、变量 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; EL存取变量数据的方法很简单，例如：${username}。它的意思是取出某一范围中名称为username的变量。 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 因为我们并没有指定哪一个范围的username，所以它会依序从Page、Request、Session、Application范围查找。 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 假如途中找到username，就直接回传，不再继续找下去，但是假如全部的范围都没有找到时，就回传null。 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 属性范围在EL中的名称 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Page&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; PageScope &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Request&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; RequestScope &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Session&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SessionScope &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Application&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ApplicationScope&lt;/p&gt; &lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>要学velocity了，先用自定义标签实现模块展示问题</title>
      <link>https://helao.net/2010/14.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;velocity 和freemarker 基本一致，就是不如freemarker 的 语法强，但是挺简单的&lt;/p&gt; &lt;p&gt;自定义标签的实现过程，&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 定义标签实现类，继承 tagsupport 类 ，继承tag也行 &amp;nbsp; 类里面定义了一些 常用变量 很方便。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;然后实现startTag（） 和 endTag（） 方法，&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;编辑tld 文件 &amp;nbsp; 里面属性名 和 标签类里面的属性对应 保持一致&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 然后就是使用标签了&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;我实现要麻烦一些&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; 定义标签类后， &amp;nbsp;然后要定义各模块的输出模板类，让这些类实现了统一的接口，然后就是把模块中的一些属性 定义成一个pojo类，并要把这个类能和xml相互转换。&lt;/p&gt; &lt;p&gt;这样jsp标签传值时 应使用 ${formName.attributeName} 的形式来进行传值，我觉得是由于jsp不支持值栈的原因 &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/p&gt; &lt;p&gt;属性值就能传到 tagclass中，这里通过classname得到要表现的模块表现类的实例，调用接口的方法就能从实例中得到模块的表现内容，然后把内容输出返回就ok了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>freemarker 入门学习书册</title>
      <link>https://helao.net/2010/13.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;h3 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-1_E6_A8_A1_E6_9D_BF_E6_95_B0_E6_8D_AE_E6_A8_A1_E5_9E_8B_E8_BE_93_E5_87_BA&#34;&gt;freemarker 官方文档&amp;nbsp;&lt;span style=&#34;font-weight: normal; font-size: 12px;&#34;&gt;&lt;a href=&#34;http://freemarker.sourceforge.net/docs/index.html&#34;&gt;http://freemarker.sourceforge.net/docs/index.html&lt;/a&gt;&lt;/span&gt; &lt;/h3&gt; &lt;h3&gt;&lt;br /&gt;&lt;/h3&gt; &lt;h3&gt;（1）模板 + 数据模型 = 输出 &lt;/h3&gt; &lt;p&gt;FreeMarker 基于设计者和程序员是具有不同专业技能的不同个体的观念他们是分工劳动的：设计者专注于表示——创建HTML文件、图片、Web页面的其它可视化方面；程 序员创建系统，生成设计页面要显示的数据。经常会遇到的问题是：在Web页面（或其它类型的文档）中显示的信息在设计页面时是无效的，是基于动态数据的。 在这里，你可以在HTML（或其它要输出的文本）中加入一些特定指令，FreeMarker会在输出页面给最终用户时，用适当的数据替代这些代码。 &lt;/p&gt; &lt;p&gt;下面是一个例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;  &amp;lt;title&amp;gt;Welcome!&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;  &amp;lt;h1&amp;gt;Welcome ${user}!&amp;lt;/h1&amp;gt;  &amp;lt;p&amp;gt;Our latest product:  &amp;lt;a href=&amp;quot;${latestProduct.url}&amp;quot;&amp;gt;${latestProduct.name}&amp;lt;/a&amp;gt;!&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;  &lt;/pre&gt; &lt;p&gt; 这个例子是在简单的HTML中加入了一些由${…}包围的特定代码，这些特定代码是FreeMarker的指令，而包含FreeMarker的指令的文件 就称为模板（Template）。至于user、latestProduct.url和latestProduct.name来自于数据模型（data model）。数据模型由程序员编程来创建，向模板提供变化的信息，这些信息来自于数据库、文件，甚至于在程序中直接生成。模板设计者不关心数据从那儿 来，只知道使用已经建立的数据模型。 &lt;/p&gt; &lt;p&gt;下面是一个可能的数据模型： &lt;/p&gt; &lt;pre&gt;(root)  |  +- user = &amp;quot;Big Joe&amp;quot;  |  +- latestProduct      |      +- url = &amp;quot;products/greenmouse.html&amp;quot;      |      +- name = &amp;quot;green mouse&amp;quot;&lt;/pre&gt; &lt;p&gt; 数据模型类似于计算机的文件系统，latestProduct可以看作是目录。 &lt;/p&gt; &lt;h3 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-2_E6_95_B0_E6_8D_AE_E6_A8_A1_E5_9E_8B&#34;&gt;2、数据模型 &lt;/h3&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-1_E5_9F_BA_E7_A1_80&#34;&gt;（1）基础 &lt;/h4&gt; &lt;p&gt;在快速入门中介绍了在模板中使用的三种基本对象类型：scalars、hashes 和sequences，其实还可以有其它更多的能力： &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;scalars：存储单值 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;hashes：充当其它对象的容器，每个都关联一个唯一的查询名字 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;sequences：充当其它对象的容器，按次序访问 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;方法：通过传递的参数进行计算，以新对象返回结果 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;用户自定义FTL标记：宏和变换器 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;通常每个变量只具有上述的一种能力，但一个变量可以具有多个上述能力，如下面的例子： &lt;/p&gt; &lt;pre&gt;(root) | +- mouse = &amp;quot;Yerri&amp;quot;     |     +- age = 12     |     +- color = &amp;quot;brown&amp;quot;&amp;gt;  &lt;/pre&gt; &lt;p&gt; mouse既是scalars又是hashes，将上面的数据模型合并到下面的模板： &lt;/p&gt; &lt;pre&gt;${mouse}       &amp;lt;#-- use mouse as scalar --&amp;gt;${mouse.age}   &amp;lt;#-- use mouse as hash --&amp;gt;${mouse.color} &amp;lt;#-- use mouse as hash --&amp;gt;  &lt;/pre&gt; &lt;p&gt; 输出结果是： &lt;/p&gt; &lt;pre&gt;Yerri12brown  &lt;/pre&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-2Scalar_E5_8F_98_E9_87_8F&#34;&gt;（2）Scalar变量 &lt;/h4&gt; &lt;p&gt;Scalar变量存储单值，可以是： &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;字符串：简单文本，在模板中使用引号（单引号或双引号）括起 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;数字：在模板中直接使用数字值 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;日期：存储日期/时间相关的数据，可以是日期、时间或日期-时间（Timestamp）；通常情况，日期值由程序员加到数据模型中，设计者只需要显示它们 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;布尔值：true或false，通常在&amp;lt;#if …&amp;gt;标记中使用 &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-3hashessequences_E5_92_8C_E9_9B_86_E5_90_88&#34;&gt;（3）hashes 、sequences和集合 &lt;/h4&gt; &lt;p&gt;有些变量不包含任何可显示的内容，而是作为容器包含其它变量，者有两种类型： &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;hashes：具有一个唯一的查询名字和它包含的每个变量相关联 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;sequences：使用数字和它包含的每个变量相关联，索引值从0开始 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;集合变量通常类似sequences，除非无法访问它的大小和不能使用索引来获得它的子变量；集合可以看作只能由&amp;lt;#list …&amp;gt;指令使用的受限sequences &lt;/p&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-4_E6_96_B9_E6_B3_95&#34;&gt;（4）方法 &lt;/h4&gt; &lt;p&gt;方法变量通常是基于给出的参数计算值。 &lt;/p&gt; &lt;p&gt;下面的例子假设程序员已经将方法变量avg放到数据模型中，用来计算数字平均值： &lt;/p&gt; &lt;pre&gt;The average of 3 and 5 is: ${avg(3, 5)}The average of 6 and 10 and 20 is: ${avg(6, 10, 20)}The average of the price of python and elephant is:     ${avg(animals.python.price, animals.elephant.price)}&lt;/pre&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-5_E5_AE_8F_E5_92_8C_E5_8F_98_E6_8D_A2_E5_99_A8&#34;&gt;（5）宏和变换器 &lt;/h4&gt; &lt;p&gt;宏和变换器变量是用户自定义指令（自定义FTL标记），会在后面讲述这些高级特性 &lt;/p&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-6_E8_8A_82_E7_82_B9&#34;&gt;（6）节点 &lt;/h4&gt; &lt;p&gt;节点变量表示为树型结构中的一个节点，通常在XML处理中使用，会在后面的专门章节中讲 &lt;/p&gt; &lt;h3 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-3_E6_A8_A1_E6_9D_BF&#34;&gt;3、模板 &lt;/h3&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-1_E6_95_B4_E4_BD_93_E7_BB_93_E6_9E_84&#34;&gt;（1）整体结构 &lt;/h4&gt; &lt;p&gt;模板使用FTL（FreeMarker模板语言）编写，是下面各部分的一个组合： &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;文本：直接输出 &lt;/li&gt;  &lt;li&gt;Interpolation：由${和}，或#{和}来限定，计算值替代输出 &lt;/li&gt;  &lt;li&gt;FTL标记：FreeMarker指令，和HTML标记类似，名字前加#予以区分，不会输出 &lt;/li&gt;  &lt;li&gt;注释：由&amp;lt;#--和--&amp;gt;限定，不会输出 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下面是以一个具体模板例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;  &amp;lt;title&amp;gt;Welcome!&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;  &amp;lt;#-- Greet the user with his/her name --&amp;gt;  &amp;lt;h1&amp;gt;Welcome ${user}!&amp;lt;/h1&amp;gt;  &amp;lt;p&amp;gt;We have these animals:  &amp;lt;ul&amp;gt;  &amp;lt;#list animals as being&amp;gt;    &amp;lt;li&amp;gt;${being.name} for ${being.price} Euros  &amp;lt;/#list&amp;gt;  &amp;lt;/ul&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;  &lt;/pre&gt; &lt;p&gt;注意事项： &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;FTL区分大小写，所以list是正确的FTL指令，而List不是；${name}和${NAME}是不同的 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;Interpolation只能在文本中使用 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;FTL标记不能位于另一个FTL标记内部，例如： &lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&amp;lt;#if &amp;lt;#include &amp;lsquo;foo&amp;rsquo;&amp;gt;=&amp;lsquo;bar&amp;rsquo;&amp;gt;&amp;hellip;&amp;lt;/if&amp;gt;&lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;注释可以位于FTL标记和Interpolation内部，如下面的例子： &lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&amp;lt;h1&amp;gt;Welcome ${user &amp;lt;#-- The name of user --&amp;gt;}!&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;We have these animals:&amp;lt;ul&amp;gt;&amp;lt;#list &amp;lt;#-- some comment&amp;hellip; --&amp;gt; animals as &amp;lt;#-- again&amp;hellip; --&amp;gt; being&amp;gt;&amp;hellip;  &lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;余的空白字符会在模板输出时移除 &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-2_E6_8C_87_E4_BB_A4&#34;&gt;（2）指令 &lt;/h4&gt; &lt;p&gt;在FreeMarker中，使用FTL标记引用指令。有三种FTL标记，这和HTML标记是类似的： &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;开始标记：&amp;lt;#directivename parameters&amp;gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;结束标记：&amp;lt;/#directivename&amp;gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;空内容指令标记：&amp;lt;#directivename parameters/&amp;gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;有两种类型的指令：预定义指令和用户定义指令。 &lt;/p&gt; &lt;p&gt;用户定义指令要使用@替换#，如&amp;lt;@mydirective&amp;gt;&amp;hellip;&amp;lt;/@mydirective&amp;gt;（会在后面讲述）。 &lt;/p&gt; &lt;p&gt;FTL标记不能够交叉，而应该正确的嵌套，如下面的代码是错误的： &lt;/p&gt; &lt;pre&gt;&amp;lt;ul&amp;gt;&amp;lt;#list animals as being&amp;gt;  &amp;lt;li&amp;gt;${being.name} for ${being.price} Euros  &amp;lt;#if use = &amp;quot;Big Joe&amp;quot;&amp;gt;     (except for you)&amp;lt;/#list&amp;gt;&amp;lt;/#if&amp;gt; &amp;lt;#-- WRONG! --&amp;gt;&amp;lt;/ul&amp;gt;  &lt;/pre&gt; &lt;p&gt; 如果使用不存在的指令，FreeMarker不会使用模板输出，而是产生一个错误消息。 &lt;/p&gt; &lt;p&gt;FreeMarker会忽略FTL标记中的空白字符，如下面的例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#list  animals       as     being&amp;gt;${being.name} for ${being.price} Euros&amp;lt;/#list    &amp;gt;  &lt;/pre&gt; &lt;p&gt; 但是，&amp;lt;、&amp;lt;/和指令之间不允许有空白字符。 &lt;/p&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-3_E8_A1_A8_E8_BE_BE_E5_BC_8F&#34;&gt;（3）表达式 &lt;/h4&gt; &lt;p&gt;&lt;strong&gt;直接指定值&lt;/strong&gt; &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;字符串 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; 使用单引号或双引号限定 &lt;/p&gt; &lt;p&gt;如果包含特殊字符需要转义，如下面的例子： &lt;/p&gt; &lt;pre&gt;${&amp;quot;It&amp;rsquo;s &amp;amp;quot;quoted&amp;amp;quot; andthis is a backslash: \&amp;quot;}${&amp;lsquo;It\&amp;rsquo;s &amp;quot;quoted&amp;quot; andthis is a backslash: \&amp;rsquo;} &lt;/pre&gt; &lt;p&gt; 输出结果是： &lt;/p&gt; &lt;pre&gt;It&amp;rsquo;s &amp;quot;quoted&amp;quot; andthis is a backslash: \It&amp;rsquo;s &amp;quot;quoted&amp;quot; andthis is a backslash: \ &lt;/pre&gt; &lt;p&gt; 下面是支持的转义序列： &lt;/p&gt; &lt;table class=&#34;wikitable&#34; border=&#34;1&#34;&gt; &lt;tbody&gt;   &lt;tr&gt;    &lt;th&gt;转义序列 &lt;/th&gt;    &lt;th&gt;含义 &lt;/th&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;&amp;amp;quot; &lt;/td&gt;    &lt;td&gt;双引号(u0022) &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\&amp;rsquo; &lt;/td&gt;    &lt;td&gt;单引号(u0027) &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;&lt;br /&gt;&lt;/td&gt;    &lt;td&gt;反斜杠(u005C) &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\n &lt;/td&gt;    &lt;td&gt;换行(u000A) &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\r &lt;/td&gt;    &lt;td&gt;Return (u000D) &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\t &lt;/td&gt;    &lt;td&gt;Tab (u0009) &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\b &lt;/td&gt;    &lt;td&gt;Backspace (u0008) &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\f &lt;/td&gt;    &lt;td&gt;Form feed (u000C) &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\l &lt;/td&gt;    &lt;td&gt;&amp;lt; &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\g &lt;/td&gt;    &lt;td&gt;&amp;gt; &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\a &lt;/td&gt;    &lt;td&gt;&amp;amp; &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;{ &lt;/td&gt;    &lt;td&gt;{ &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;\xCode &lt;/td&gt;    &lt;td&gt;4位16进制Unicode代码 &lt;/td&gt;   &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;有一类特殊的字符串称为raw字符串，被认为是纯文本，其中的\和{等不具有特殊含义，该类字符串在引号前面加r，下面是一个例子： &lt;/p&gt; &lt;pre&gt;${r&amp;quot;${foo}&amp;quot;}${r&amp;quot;C:\foo\bar&amp;quot;}  &lt;/pre&gt; &lt;p&gt; 输出的结果是： &lt;/p&gt; &lt;pre&gt;${foo}C:\foo\bar  &lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;数字 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;直接输入，不需要引号 &lt;/p&gt; &lt;p&gt;精度数字使用“.”分隔，不能使用分组符号 &lt;/p&gt; &lt;p&gt;目前版本不支持科学计数法，所以“1E3”是错误的 &lt;/p&gt; &lt;p&gt;不能省略小数点前面的0，所以“.5”是错误的 &lt;/p&gt; &lt;p&gt;数字8、+8、08和8.00都是相同的 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;布尔值 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;true和false，不使用引号 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;序列 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;由逗号分隔的子变量列表，由方括号限定，下面是一个例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#list [&amp;quot;winter&amp;quot;, &amp;quot;spring&amp;quot;, &amp;quot;summer&amp;quot;, &amp;quot;autumn&amp;quot;] as x&amp;gt;${x}&amp;lt;/#list&amp;gt; &lt;/pre&gt; &lt;p&gt; 输出的结果是： &lt;/p&gt; &lt;pre&gt;winterspringsummerautumn&lt;/pre&gt; &lt;p&gt; 列表的项目是表达式，所以可以有下面的例子： &lt;/p&gt; &lt;pre&gt;[2 + 2, [1, 2, 3, 4], &amp;quot;whatnot&amp;quot;]&lt;/pre&gt; &lt;p&gt; 可以使用数字范围定义数字序列，例如2..5等同于[2, 3, 4, 5]，但是更有效率，注意数字范围没有方括号 &lt;/p&gt; &lt;p&gt;可以定义反递增的数字范围，如5..2 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;散列（hash） &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; 由逗号分隔的键/值列表，由大括号限定，键和值之间用冒号分隔，下面是一个例子： &lt;/p&gt; &lt;pre&gt;{&amp;quot;name&amp;quot;:&amp;quot;green mouse&amp;quot;, &amp;quot;price&amp;quot;:150}&lt;/pre&gt; &lt;p&gt; 键和值都是表达式，但是键必须是字符串 &lt;/p&gt; &lt;p&gt;&lt;strong&gt;获取变量&lt;/strong&gt; &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;顶层变量： ${variable}，变量名只能是字母、数字、下划线、$、@和#的组合，且不能以数字开头 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;从散列中获取数据 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;可以使用点语法或方括号语法，假设有下面的数据模型： &lt;/p&gt; &lt;pre&gt;(root) | +- book |   | |   +- title = &amp;quot;Breeding green mouses&amp;quot; |   | |   +- author |       | |       +- name = &amp;quot;Julia Smith&amp;quot; |       | |       +- info = &amp;quot;Biologist, 1923-1985, Canada&amp;quot; | +- test = &amp;quot;title&amp;quot; &lt;/pre&gt; &lt;p&gt; 下面都是等价的： &lt;/p&gt; &lt;pre&gt;book.author.namebook[&amp;quot;author&amp;quot;].namebook.author.[&amp;quot;name&amp;quot;]book[&amp;quot;author&amp;quot;][&amp;quot;name&amp;quot;]&lt;/pre&gt; &lt;p&gt; 使用点语法，变量名字有顶层变量一样的限制，但方括号语法没有该限制，因为名字是任意表达式的结果 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;从序列获得数据：和散列的方括号语法语法一样，只是方括号中的表达式值必须是数字；注意：第一个项目的索引是0 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;序列片断：使用[startIndex..endIndex]语法，从序列中获得序列片断（也是序列）；startIndex和endIndex是结果为数字的表达式 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;特殊变量：FreeMarker内定义变量，使用.variablename语法访问 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;字符串操作 &lt;/strong&gt; &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;Interpolation（或连接操作） &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;可以使用${..}（或#{..}）在文本部分插入表达式的值，例如： &lt;/p&gt; &lt;pre&gt;${&amp;quot;Hello ${user}!&amp;quot;}${&amp;quot;${user}${user}${user}${user}&amp;quot;}  &lt;/pre&gt; &lt;p&gt; 可以使用+操作符获得同样的结果 &lt;/p&gt; &lt;pre&gt;${&amp;quot;Hello &amp;quot; + user + &amp;quot;!&amp;quot;}${user + user + user + user}&lt;/pre&gt; &lt;p&gt; ${..}只能用于文本部分，下面的代码是错误的： &lt;/p&gt; &lt;pre&gt;&amp;lt;#if ${isBig}&amp;gt;Wow!&amp;lt;/#if&amp;gt;&amp;lt;#if &amp;quot;${isBig}&amp;quot;&amp;gt;Wow!&amp;lt;/#if&amp;gt;&lt;/pre&gt; &lt;p&gt; 应该写成： &lt;/p&gt; &lt;pre&gt;&amp;lt;#if isBig&amp;gt;Wow!&amp;lt;/#if&amp;gt;&lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;子串 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;例子（假设user的值为“Big Joe”）： &lt;/p&gt; &lt;pre&gt;${user[0]}${user[4]}${user[1..4]}&lt;/pre&gt; &lt;p&gt; 结果是（注意第一个字符的索引是0）： &lt;/p&gt; &lt;pre&gt;BJig J &lt;/pre&gt; &lt;p&gt; &lt;strong&gt;序列操作 &lt;/strong&gt; &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;连接操作：和字符串一样，使用+，下面是一个例子： &lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&amp;lt;#list [&amp;quot;Joe&amp;quot;, &amp;quot;Fred&amp;quot;] + [&amp;quot;Julia&amp;quot;, &amp;quot;Kate&amp;quot;] as user&amp;gt;- ${user}&amp;lt;/#list&amp;gt;&lt;/pre&gt; &lt;p&gt; 输出结果是： &lt;/p&gt; &lt;pre&gt;- Joe- Fred- Julia- Kate&lt;/pre&gt; &lt;p&gt; &lt;strong&gt;散列操作 &lt;/strong&gt; &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;连接操作：和字符串一样，使用+，如果具有相同的key，右边的值替代左边的值，例如： &lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&amp;lt;#assign ages = {&amp;quot;Joe&amp;quot;:23, &amp;quot;Fred&amp;quot;:25} + {&amp;quot;Joe&amp;quot;:30, &amp;quot;Julia&amp;quot;:18}&amp;gt;- Joe is ${ages.Joe}- Fred is ${ages.Fred}- Julia is ${ages.Julia}  &lt;/pre&gt; &lt;p&gt; 输出结果是： &lt;/p&gt; &lt;pre&gt;- Joe is 30- Fred is 25- Julia is 18  &lt;/pre&gt; &lt;p&gt; &lt;strong&gt;算术运算 &lt;/strong&gt; &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;＋、－、&amp;times;、／、％，下面是一个例子： &lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;${x * x - 100}${x / 2}${12 % 10}&lt;/pre&gt; &lt;p&gt; 输出结果是（假设x为5）： &lt;/p&gt; &lt;pre&gt;-752.52  &lt;/pre&gt; &lt;p&gt; 操作符两边必须是数字，因此下面的代码是错误的： &lt;/p&gt; &lt;pre&gt;${3 * &amp;quot;5&amp;quot;} &amp;lt;#-- WRONG! --&amp;gt;  &lt;/pre&gt; &lt;p&gt; 使用+操作符时，如果一边是数字，一边是字符串，就会自动将数字转换为字符串，例如： &lt;/p&gt; &lt;pre&gt;${3 + &amp;quot;5&amp;quot;}  &lt;/pre&gt; &lt;p&gt; 输出结果是： &lt;/p&gt; &lt;pre&gt;35&lt;/pre&gt; &lt;p&gt; 使用内建的int（后面讲述）获得整数部分，例如： &lt;/p&gt; &lt;pre&gt;${(x/2)?int}${1.1?int}${1.999?int}${-1.1?int}${-1.999?int}&lt;/pre&gt; &lt;p&gt; 输出结果是（假设x为5）： &lt;/p&gt; &lt;pre&gt;211-1-1&lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;比较操作符 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;使用=（或==，完全相等）测试两个值是否相等，使用!= 测试两个值是否不相等 &lt;/p&gt; &lt;p&gt;=和!=两边必须是相同类型的值，否则会产生错误，例如&amp;lt;#if 1 = &amp;quot;1&amp;quot;&amp;gt;会引起错误 &lt;/p&gt; &lt;p&gt;Freemarker是精确比较，所以对&amp;quot;x&amp;quot;、&amp;quot;x &amp;quot;和&amp;quot;X&amp;quot;是不相等的 &lt;/p&gt; &lt;p&gt;对数字和日期可以使用&amp;lt;、&amp;lt;=、&amp;gt;和&amp;gt;=，但不能用于字符串 &lt;/p&gt; &lt;p&gt;由于Freemarker会将&amp;gt;解释成FTL标记的结束字符，所以对于&amp;gt;和&amp;gt;=可以使用括号来避免这种情况，例如&amp;lt;#if (x &amp;gt; y)&amp;gt; &lt;/p&gt; &lt;p&gt;另一种替代的方法是，使用lt、lte、gt和gte来替代&amp;lt;、&amp;lt;=、&amp;gt;和&amp;gt;= &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;逻辑操作符 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;amp;&amp;amp;（and）、||（or）、!（not），只能用于布尔值，否则会产生错误 &lt;/p&gt; &lt;p&gt;例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#if x &amp;lt; 12 &amp;amp;&amp;amp; color = &amp;quot;green&amp;quot;&amp;gt;  We have less than 12 things, and they are green.&amp;lt;/#if&amp;gt;&amp;lt;#if !hot&amp;gt; &amp;lt;#-- here hot must be a boolean --&amp;gt;  It&amp;rsquo;s not hot.&amp;lt;/#if&amp;gt;  &lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;内建函数 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;内建函数的用法类似访问散列的子变量，只是使用“?”替代“.”，下面列出常用的一些函数 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;   &lt;ul&gt;    &lt;li&gt;字符串使用的： &lt;/li&gt;   &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;html：对字符串进行HTML编码 &lt;/p&gt; &lt;p&gt;cap_first：使字符串第一个字母大写 &lt;/p&gt; &lt;p&gt;lower_case：将字符串转换成小写 &lt;/p&gt; &lt;p&gt;upper_case：将字符串转换成大写 &lt;/p&gt; &lt;p&gt;trim：去掉字符串前后的空白字符 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;   &lt;ul&gt;    &lt;li&gt;序列使用的： &lt;/li&gt;   &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;size：获得序列中元素的数目 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;   &lt;ul&gt;    &lt;li&gt;数字使用的： &lt;/li&gt;   &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;int：取得数字的整数部分（如-1.9?int的结果是-1） &lt;/p&gt; &lt;p&gt;例子（假设test保存字符串&amp;quot;Tom &amp;amp; Jerry&amp;quot;）： &lt;/p&gt; &lt;pre&gt;${test?html}${test?upper_case?html}&lt;/pre&gt; &lt;p&gt; 输出结果是： &lt;/p&gt; &lt;pre&gt;Tom &amp;amp;amp; JerryTOM &amp;amp;amp; JERRY  &lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;操作符优先顺序 &lt;/li&gt; &lt;/ul&gt; &lt;table class=&#34;wikitable&#34; border=&#34;1&#34;&gt; &lt;tbody&gt;   &lt;tr&gt;    &lt;th&gt;操作符组 &lt;/th&gt;    &lt;th&gt;操作符 &lt;/th&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;后缀 &lt;/td&gt;    &lt;td&gt;[subvarName] [subStringRange] . (methodParams) &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;一元 &lt;/td&gt;    &lt;td&gt;+expr、-expr、! &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;内建 &lt;/td&gt;    &lt;td&gt;? &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;乘法 &lt;/td&gt;    &lt;td&gt;*、 / 、% &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;加法 &lt;/td&gt;    &lt;td&gt;+、- &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;关系 &lt;/td&gt;    &lt;td&gt;&amp;lt;、&amp;gt;、&amp;lt;=、&amp;gt;=（lt、lte、gt、gte） &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;相等 &lt;/td&gt;    &lt;td&gt;==（=）、!= &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;逻辑and &lt;/td&gt;    &lt;td&gt;&amp;amp;&amp;amp; &lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;逻辑or &lt;/td&gt;    &lt;td&gt;双竖线&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;    &lt;td&gt;数字范围 &lt;/td&gt;    &lt;td&gt;.. &lt;/td&gt;   &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-4Interpolation&#34;&gt;（4）Interpolation &lt;/h4&gt; &lt;p&gt;Interpolation有两种类型： &lt;/p&gt; &lt;ol&gt;  &lt;li&gt;通用Interpolation：${expr} &lt;/li&gt; &lt;/ol&gt; &lt;ol&gt;  &lt;li&gt;数字Interpolation：#{expr}或#{expr; format} &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;注意：Interpolation只能用于文本部分 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;通用Interpolation &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;插入字符串值：直接输出表达式结果 &lt;/p&gt; &lt;p&gt;插入数字值：根据缺省格式（由#setting指令设置）将表达式结果转换成文本输出；可以使用内建函数string格式化单个Interpolation，下面是一个例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#setting number_format=&amp;quot;currency&amp;quot;/&amp;gt;&amp;lt;#assign answer=42/&amp;gt;${answer}${answer?string}  &amp;lt;#-- the same as ${answer} --&amp;gt;${answer?string.number}${answer?string.currency}${answer?string.percent} &lt;/pre&gt; &lt;p&gt; 输出结果是： &lt;/p&gt; &lt;pre&gt;$42.00$42.0042$42.004,200%&lt;/pre&gt; &lt;p&gt; 插入日期值：根据缺省格式（由#setting指令设置）将表达式结果转换成文本输出；可以使用内建函数string格式化单个Interpolation，下面是一个使用格式模式的例子： &lt;/p&gt; &lt;pre&gt;${lastUpdated?string(&amp;quot;yyyy-MM-dd HH:mm:ss zzzz&amp;quot;)}${lastUpdated?string(&amp;quot;EEE, MMM d, &amp;ldquo;yy&amp;quot;)}${lastUpdated?string(&amp;quot;EEEE, MMMM dd, yyyy, hh:mm:ss a &amp;lsquo;(&amp;lsquo;zzz&amp;rsquo;)&amp;rsquo;&amp;quot;)}  &lt;/pre&gt; &lt;p&gt; 输出的结果类似下面的格式： &lt;/p&gt; &lt;pre&gt;2003-04-08 21:24:44 Pacific Daylight TimeTue, Apr 8, &amp;lsquo;03Tuesday, April 08, 2003, 09:24:44 PM (PDT)&lt;/pre&gt; &lt;p&gt; 插入布尔值：根据缺省格式（由#setting指令设置）将表达式结果转换成文本输出；可以使用内建函数string格式化单个Interpolation，下面是一个例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#assign foo=true/&amp;gt;${foo?string(&amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;)}&lt;/pre&gt; &lt;p&gt; 输出结果是： &lt;/p&gt; &lt;pre&gt;yes&lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;数字Interpolation的#{expr; format}形式可以用来格式化数字，format可以是： &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;mX：小数部分最小X位 &lt;/p&gt; &lt;p&gt;MX：小数部分最大X位 &lt;/p&gt; &lt;p&gt;例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#-- If the language is US English the output is: --&amp;gt;&amp;lt;#assign x=2.582/&amp;gt;&amp;lt;#assign y=4/&amp;gt;#{x; M2}   &amp;lt;#-- 2.58 --&amp;gt;#{y; M2}   &amp;lt;#-- 4    --&amp;gt;#{x; m1}   &amp;lt;#-- 2.6 --&amp;gt;#{y; m1}   &amp;lt;#-- 4.0 --&amp;gt;#{x; m1M2} &amp;lt;#-- 2.58 --&amp;gt;#{y; m1M2} &amp;lt;#-- 4.0  --&amp;gt;  &lt;/pre&gt; &lt;h3 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-4_E6_9D_82_E9_A1_B9&#34;&gt;4、杂项 &lt;/h3&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-1_E7_94_A8_E6_88_B7_E5_AE_9A_E4_B9_89_E6_8C_87_E4_BB_A4&#34;&gt;（1）用户定义指令 &lt;/h4&gt; &lt;p&gt;宏和变换器变量是两种不同类型的用户定义指令，它们之间的区别是宏是在模板中使用macro指令定义，而变换器是在模板外由程序定义，这里只介绍宏 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;基本用法 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;宏是和某个变量关联的模板片断，以便在模板中通过用户定义指令使用该变量，下面是一个例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro greet&amp;gt;  &amp;lt;font size=&amp;quot;+2&amp;quot;&amp;gt;Hello Joe!&amp;lt;/font&amp;gt;&amp;lt;/#macro&amp;gt;  &lt;/pre&gt; &lt;p&gt; 作为用户定义指令使用宏变量时，使用@替代FTL标记中的# &lt;/p&gt; &lt;pre&gt;&amp;lt;@greet&amp;gt;&amp;lt;/@greet&amp;gt;&lt;/pre&gt; &lt;p&gt; 如果没有体内容，也可以使用： &lt;/p&gt; &lt;pre&gt;&amp;lt;@greet/&amp;gt;&lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;参数 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;在macro指令中可以在宏变量之后定义参数，如： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro greet person&amp;gt;  &amp;lt;font size=&amp;quot;+2&amp;quot;&amp;gt;Hello ${person}!&amp;lt;/font&amp;gt;&amp;lt;/#macro&amp;gt; &lt;/pre&gt; &lt;p&gt; 可以这样使用这个宏变量： &lt;/p&gt; &lt;pre&gt;&amp;lt;@greet person=&amp;quot;Fred&amp;quot;/&amp;gt; and &amp;lt;@greet person=&amp;quot;Batman&amp;quot;/&amp;gt; &lt;/pre&gt; &lt;p&gt; 输出结果是： &lt;/p&gt; &lt;pre&gt;  &amp;lt;font size=&amp;quot;+2&amp;quot;&amp;gt;Hello Fred!&amp;lt;/font&amp;gt; and   &amp;lt;font size=&amp;quot;+2&amp;quot;&amp;gt;Hello Batman!&amp;lt;/font&amp;gt;&lt;/pre&gt; &lt;p&gt;宏的参数是FTL表达式，所以下面的代码具有不同的意思： &lt;/p&gt; &lt;pre&gt;&amp;lt;@greet person=Fred/&amp;gt;&lt;/pre&gt; &lt;p&gt; 这意味着将Fred变量的值传给person参数，该值不仅是字符串，还可以是其它类型，甚至是复杂的表达式 &lt;/p&gt; &lt;p&gt;可以有多参数，下面是一个例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro greet person color&amp;gt;  &amp;lt;font size=&amp;quot;+2&amp;quot; color=&amp;quot;${color}&amp;quot;&amp;gt;Hello ${person}!&amp;lt;/font&amp;gt;&amp;lt;/#macro&amp;gt; &lt;/pre&gt; &lt;p&gt; 可以这样使用该宏变量： &lt;/p&gt; &lt;pre&gt;&amp;lt;@greet person=&amp;quot;Fred&amp;quot; color=&amp;quot;black&amp;quot;/&amp;gt; &lt;/pre&gt; &lt;p&gt; 其中参数的次序是无关的，因此下面是等价的： &lt;/p&gt; &lt;pre&gt;&amp;lt;@greet color=&amp;quot;black&amp;quot; person=&amp;quot;Fred&amp;quot;/&amp;gt;&lt;/pre&gt; &lt;p&gt; 只能使用在macro指令中定义的参数，并且对所有参数赋值，所以下面的代码是错误的： &lt;/p&gt; &lt;pre&gt;&amp;lt;@greet person=&amp;quot;Fred&amp;quot; color=&amp;quot;black&amp;quot; background=&amp;quot;green&amp;quot;/&amp;gt;&amp;lt;@greet person=&amp;quot;Fred&amp;quot;/&amp;gt;&lt;/pre&gt; &lt;p&gt; 可以在定义参数时指定缺省值，如： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro greet person color=&amp;quot;black&amp;quot;&amp;gt;  &amp;lt;font size=&amp;quot;+2&amp;quot; color=&amp;quot;${color}&amp;quot;&amp;gt;Hello ${person}!&amp;lt;/font&amp;gt;&amp;lt;/#macro&amp;gt;  &lt;/pre&gt; &lt;p&gt; 这样&amp;lt;@greet person=&amp;quot;Fred&amp;quot;/&amp;gt;就正确了 &lt;/p&gt; &lt;p&gt;宏的参数是局部变量，只能在宏定义中有效 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;嵌套内容 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;用户定义指令可以有嵌套内容，使用&amp;lt;#nested&amp;gt;指令执行指令开始和结束标记之间的模板片断 &lt;/p&gt; &lt;p&gt;例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro border&amp;gt;  &amp;lt;table border=4 cellspacing=0 cellpadding=4&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;    &amp;lt;#nested&amp;gt;  &amp;lt;/tr&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/#macro&amp;gt;  &lt;/pre&gt; &lt;p&gt; 这样使用该宏变量： &lt;/p&gt; &lt;pre&gt;&amp;lt;@border&amp;gt;The bordered text&amp;lt;/@border&amp;gt;&lt;/pre&gt; &lt;p&gt; 输出结果： &lt;/p&gt; &lt;pre&gt;  &amp;lt;table border=4 cellspacing=0 cellpadding=4&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;    The bordered text  &amp;lt;/tr&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/table&amp;gt;&lt;/pre&gt; &lt;p&gt;&amp;lt;#nested&amp;gt;指令可以被多次调用，例如： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro do_thrice&amp;gt;  &amp;lt;#nested&amp;gt;  &amp;lt;#nested&amp;gt;  &amp;lt;#nested&amp;gt;&amp;lt;/#macro&amp;gt;&amp;lt;@do_thrice&amp;gt;  Anything.&amp;lt;/@do_thrice&amp;gt;  &lt;/pre&gt; &lt;p&gt; 输出结果： &lt;/p&gt; &lt;pre&gt;  Anything.  Anything.  Anything. &lt;/pre&gt; &lt;p&gt; 嵌套内容可以是有效的FTL，下面是一个有些复杂的例子： &lt;tt&gt;&lt;span&gt;&amp;lt;@border&amp;gt;&amp;lt;ul&amp;gt; &amp;lt;@do_thrice&amp;gt; &amp;lt;li&amp;gt;&amp;lt;@greet person=&amp;quot;Joe&amp;quot;/&amp;gt;&amp;lt;/@do_thrice&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/@border&amp;gt; }}} 输出结果： &lt;/span&gt; &lt;/tt&gt; &lt;/p&gt; &lt;pre&gt;  &amp;lt;table border=4 cellspacing=0 cellpadding=4&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;      &amp;lt;ul&amp;gt;    &amp;lt;li&amp;gt;&amp;lt;font size=&amp;quot;+2&amp;quot;&amp;gt;Hello Joe!&amp;lt;/font&amp;gt;    &amp;lt;li&amp;gt;&amp;lt;font size=&amp;quot;+2&amp;quot;&amp;gt;Hello Joe!&amp;lt;/font&amp;gt;    &amp;lt;li&amp;gt;&amp;lt;font size=&amp;quot;+2&amp;quot;&amp;gt;Hello Joe!&amp;lt;/font&amp;gt;  &amp;lt;/ul&amp;gt;  &amp;lt;/tr&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/table&amp;gt;  &lt;/pre&gt; &lt;p&gt; 宏定义中的局部变量对嵌套内容是不可见的，例如： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro repeat count&amp;gt;  &amp;lt;#local y = &amp;quot;test&amp;quot;&amp;gt;  &amp;lt;#list 1..count as x&amp;gt;    ${y} ${count}/${x}: &amp;lt;#nested&amp;gt;  &amp;lt;/#list&amp;gt;&amp;lt;/#macro&amp;gt;&amp;lt;@repeat count=3&amp;gt;${y?default(&amp;quot;?&amp;quot;)} ${x?default(&amp;quot;?&amp;quot;)} ${count?default(&amp;quot;?&amp;quot;)}&amp;lt;/@repeat&amp;gt;&lt;/pre&gt; &lt;p&gt; 输出结果： &lt;/p&gt; &lt;pre&gt;    test &lt;sup&gt;3&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1&lt;/sub&gt;: ? ? ?    test &lt;sup&gt;3&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt;: ? ? ?    test &lt;sup&gt;3&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt;: ? ? ?&lt;/pre&gt; &lt;ul&gt;  &lt;li&gt;在宏定义中使用循环变量 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;用户定义指令可以有循环变量，通常用于重复嵌套内容，基本用法是：作为nested指令的参数传递循环变量的实际值，而在调用用户定义指令时，在&amp;lt;@…&amp;gt;开始标记的参数后面指定循环变量的名字 &lt;/p&gt; &lt;p&gt;例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro repeat count&amp;gt;  &amp;lt;#list 1..count as x&amp;gt;    &amp;lt;#nested x, x/2, x==count&amp;gt;  &amp;lt;/#list&amp;gt;&amp;lt;/#macro&amp;gt;&amp;lt;@repeat count=4 ; c, halfc, last&amp;gt;  ${c}. ${halfc}&amp;lt;#if last&amp;gt; Last!&amp;lt;/#if&amp;gt;&amp;lt;/@repeat&amp;gt;  &lt;/pre&gt; &lt;p&gt; 输出结果： &lt;/p&gt; &lt;pre&gt;  1. 0.5  2. 1  3. 1.5  4. 2 Last!&lt;/pre&gt; &lt;p&gt;指定的循环变量的数目和用户定义指令开始标记指定的不同不会有问题 &lt;/p&gt; &lt;p&gt;调用时少指定循环变量，则多指定的值不可见 &lt;/p&gt; &lt;p&gt;调用时多指定循环变量，多余的循环变量不会被创建 &lt;/p&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-2_E5_9C_A8_E6_A8_A1_E6_9D_BF_E4_B8_AD_E5_AE_9A_E4_B9_89_E5_8F_98_E9_87_8F&#34;&gt;（2）在模板中定义变量 &lt;/h4&gt; &lt;p&gt;在模板中定义的变量有三种类型： &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;plain变量：可以在模板的任何地方访问，包括使用include指令插入的模板，使用assign指令创建和替换 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;局部变量：在宏定义体中有效，使用local指令创建和替换 &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt;  &lt;li&gt;循环变量：只能存在于指令的嵌套内容，由指令（如list）自动创建 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;宏的参数是局部变量，而不是循环变量；局部变量隐藏（而不是覆盖）同名的plain变量；循环变量隐藏同名的局部变量和plain变量，下面是一个例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#assign x = &amp;quot;plain&amp;quot;&amp;gt;1. ${x}  &amp;lt;#-- we see the plain var. here --&amp;gt;&amp;lt;@test/&amp;gt;6. ${x}  &amp;lt;#-- the value of plain var. was not changed --&amp;gt;&amp;lt;#list [&amp;quot;loop&amp;quot;] as x&amp;gt;  7. ${x}  &amp;lt;#-- now the loop var. hides the plain var. --&amp;gt;&amp;lt;#assign x = &amp;quot;plain2&amp;quot;&amp;gt; &amp;lt;#-- replace the plain var, hiding does not mater here --&amp;gt; 8. ${x}  &amp;lt;#-- it still hides the plain var. --&amp;gt;&amp;lt;/#list&amp;gt;   9. ${x}  &amp;lt;#-- the new value of plain var. --&amp;gt;&amp;lt;#macro test&amp;gt;  2. ${x}  &amp;lt;#-- we still see the plain var. here --&amp;gt;  &amp;lt;#local x = &amp;quot;local&amp;quot;&amp;gt;  3. ${x}  &amp;lt;#-- now the local var. hides it --&amp;gt;  &amp;lt;#list [&amp;quot;loop&amp;quot;] as x&amp;gt;    4. ${x}  &amp;lt;#-- now the loop var. hides the local var. --&amp;gt;  &amp;lt;/#list&amp;gt;  5. ${x}  &amp;lt;#-- now we see the local var. again --&amp;gt;&amp;lt;/#macro&amp;gt;  &lt;/pre&gt; &lt;p&gt; 输出结果： &lt;/p&gt; &lt;pre&gt;1. plain  2. plain  3. local    4. loop  5. local6. plain    7. loop    8. loop9. plain2&lt;/pre&gt; &lt;p&gt;内部循环变量隐藏同名的外部循环变量，如： &lt;/p&gt; &lt;pre&gt;&amp;lt;#list [&amp;quot;loop 1&amp;quot;] as x&amp;gt;  ${x}  &amp;lt;#list [&amp;quot;loop 2&amp;quot;] as x&amp;gt;    ${x}    &amp;lt;#list [&amp;quot;loop 3&amp;quot;] as x&amp;gt;      ${x}    &amp;lt;/#list&amp;gt;    ${x}  &amp;lt;/#list&amp;gt;  ${x}&amp;lt;/#list&amp;gt;&lt;/pre&gt; &lt;p&gt; 输出结果： &lt;/p&gt; &lt;pre&gt;  loop 1    loop 2      loop 3    loop 2  loop 1 &lt;/pre&gt; &lt;p&gt; 模板中的变量会隐藏（而不是覆盖）数据模型中同名变量，如果需要访问数据模型中的同名变量，使用特殊变量global，下面的例子假设数据模型中的user的值是Big Joe： &lt;/p&gt; &lt;pre&gt;&amp;lt;#assign user = &amp;quot;Joe Hider&amp;quot;&amp;gt;${user}          &amp;lt;#-- prints: Joe Hider --&amp;gt;${.globals.user} &amp;lt;#-- prints: Big Joe --&amp;gt;  &lt;/pre&gt; &lt;h4 id=&#34;section-FreeMarker_E8_AE_BE_E8_AE_A1_E6_8C_87_E5_8D_97-3_E5_90_8D_E5_AD_97_E7_A9_BA_E9_97_B4&#34;&gt;（3）名字空间 &lt;/h4&gt; &lt;p&gt;通常情况，只使用一个名字空间，称为主名字空间 &lt;/p&gt; &lt;p&gt;为了创建可重用的宏、变换器或其它变量的集合（通常称库），必须使用多名字空间，其目的是防止同名冲突 &lt;/p&gt; &lt;ul&gt;  &lt;li&gt;创建库 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;下面是一个创建库的例子（假设保存在lib/my_test.ftl中）： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro copyright date&amp;gt;  &amp;lt;p&amp;gt;Copyright &amp;copy; ${date} Julia Smith. All rights reserved.  &amp;lt;br&amp;gt;Email: ${mail}&amp;lt;/p&amp;gt;&amp;lt;/#macro&amp;gt;  &amp;lt;#assign mail = &amp;quot;jsmith@acme.com&amp;quot;&amp;gt; &lt;/pre&gt; &lt;p&gt; 使用import指令导入库到模板中，Freemarker会为导入的库创建新的名字空间，并可以通过import指令中指定的散列变量访问库中的变量： &lt;/p&gt; &lt;pre&gt;&amp;lt;#import &amp;quot;/lib/my_test.ftl&amp;quot; as my&amp;gt;&amp;lt;#assign mail=&amp;quot;fred@acme.com&amp;quot;&amp;gt;&amp;lt;@my.copyright date=&amp;quot;1999-2002&amp;quot;/&amp;gt;${my.mail}${mail}  &lt;/pre&gt; &lt;p&gt; 输出结果： &lt;/p&gt; &lt;pre&gt;  &amp;lt;p&amp;gt;Copyright &amp;copy; 1999-2002 Julia Smith. All rights reserved.  &amp;lt;br&amp;gt;Email: jsmith@acme.com&amp;lt;/p&amp;gt;jsmith@acme.comfred@acme.com  &lt;/pre&gt; &lt;p&gt; 可以看到例子中使用的两个同名变量并没有冲突，因为它们位于不同的名字空间 &lt;/p&gt; &lt;p&gt;可以使用assign指令在导入的名字空间中创建或替代变量，下面是一个例子： &lt;/p&gt; &lt;pre&gt;&amp;lt;#import &amp;quot;/lib/my_test.ftl&amp;quot; as my&amp;gt;${my.mail}&amp;lt;#assign mail=&amp;quot;jsmith@other.com&amp;quot; in my&amp;gt;${my.mail}  &lt;/pre&gt; &lt;p&gt; 输出结果： &lt;/p&gt; &lt;pre&gt;jsmith@acme.comjsmith@other.com  &lt;/pre&gt; &lt;p&gt; 数据模型中的变量任何地方都可见，也包括不同的名字空间，下面是修改的库： &lt;/p&gt; &lt;pre&gt;&amp;lt;#macro copyright date&amp;gt;  &amp;lt;p&amp;gt;Copyright &amp;copy; ${date} ${user}. All rights reserved.&amp;lt;/p&amp;gt;&amp;lt;/#macro&amp;gt;&amp;lt;#assign mail = &amp;quot;${user}@acme.com&amp;quot;&amp;gt;   &lt;/pre&gt; &lt;p&gt; 假设数据模型中的user变量的值是Fred，则下面的代码： &lt;/p&gt; &lt;pre&gt;&amp;lt;#import &amp;quot;/lib/my_test.ftl&amp;quot; as my&amp;gt;&amp;lt;@my.copyright date=&amp;quot;1999-2002&amp;quot;/&amp;gt;${my.mail}   &lt;/pre&gt; &lt;p&gt; 输出结果： &lt;/p&gt; &lt;pre&gt;  &amp;lt;p&amp;gt;Copyright &amp;copy; 1999-2002 Fred. All rights reserved.&amp;lt;/p&amp;gt;Fred@acme.com   &lt;/pre&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>python写的个人博客系统 micolog</title>
      <link>https://helao.net/2010/12.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;div class=&#34;entry&#34;&gt;  &lt;p&gt;基于gae的python写的个人博客系统“micolog” &amp;nbsp;，下载 micolog，下载gae的python客户端，下载python2.5.4 ,依次安装 python ， gae的python客户端，使用客户端部署 micolog 应用。（这里需要修改 app.yaml中的appid 和 version 这两个地方）&lt;/p&gt;  &lt;p&gt;这里会提示 安装 python 的 ssl module ，不用理会它，等待安装完成即可，&lt;/p&gt;  &lt;h2&gt; &lt;a title=&#34;python写的个人博客系统  micolog&#34; rel=&#34;bookmark&#34; href=&#34;http://tiantianblog0.appspot.com/2010/06/25/micolog.html&#34;&gt; &lt;/a&gt; &lt;/h2&gt; &lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>在自己的网页添加谷歌地图</title>
      <link>https://helao.net/2010/11.html</link>
      <pubDate>2010-09-14 12:00:00 +0800</pubDate>
      <description>&lt;div class=&#34;entry&#34;&gt;  &lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;首先注册一个谷歌账号 &amp;nbsp;feiyan35488@gmail.com ,接下来 申请谷歌地图的 key（需要填入自己的地图页面所在的那个目录）&lt;/span&gt; &lt;/p&gt;  &lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;生成key后，在当前页面有一个简单安装地图的例子，拷贝那些代码到自己的页面 &amp;nbsp;就ok了 &amp;nbsp;&lt;/span&gt; &lt;/p&gt;  &lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;虽然谷歌网站说 这个地图只有用申请时填写的那个域名访问时 才能显示，但我用locahost访问也能成功显示了&amp;nbsp;&lt;/span&gt; &lt;/p&gt;  &lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;&lt;br /&gt;&lt;/span&gt; &lt;/p&gt;  &lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;在ie6下遇到了问题： 不能显示 ， &amp;nbsp;只需要在引入的那个js脚本上 后添加属性 charset=“utf-8”; &amp;nbsp;这个可能是由于编码的原因 ，具体怎么回事 我还不清楚&lt;/span&gt; &lt;/p&gt;  &lt;p&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;如何在谷歌地图中显示某个地方的经纬度： &amp;nbsp;在地图中找到自己的那个地方，将这个地方设置为地图中心，然后在地址栏输入命令 &amp;nbsp;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;javascript:void(prompt(&#39;&#39;,gApplication.getMap().getCenter()));&lt;/span&gt; &lt;/span&gt; &lt;/p&gt;  &lt;p&gt;&lt;span style=&#34;&#34;&gt;&lt;span style=&#34;font-size: medium;&#34;&gt;经纬度就弹出来了 &amp;nbsp;呵呵&lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;&#34;&gt;。&lt;/span&gt; &lt;/p&gt;  &lt;h2&gt; &lt;a title=&#34;在自己的网页添加谷歌地图&#34; rel=&#34;bookmark&#34; href=&#34;http://tiantianblog0.appspot.com/?p=13001&#34;&gt;&lt;br /&gt;&lt;/a&gt; &lt;/h2&gt; &lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>flex和red5下的视频会议(简单版)</title>
      <link>https://helao.net/2010/10.html</link>
      <pubDate>2010-01-07 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;很简单的一个视频会议,我也是学flex的新手,把代码放出来献丑了&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>java学习笔记2</title>
      <link>https://helao.net/2009/9.html</link>
      <pubDate>2009-11-18 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: Simsun; font-size: medium;&#34;&gt;   &lt;div style=&#34;color: #000000; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12px; background-color: #ffffff; margin: 8px;&#34;&gt;    &lt;p style=&#34;margin: 0px;&#34;&gt;static 在java中的作用&lt;/p&gt;    &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; static class 中的methods和variables必须都是static&lt;/p&gt;    &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; 这个类不需要实例化就可以引用&lt;/p&gt;    &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&lt;/p&gt;    &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; static methods，不需要实例化类就可以引用此methods&lt;/p&gt;    &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;variables &amp;nbsp; 类似&lt;/p&gt;    &lt;p style=&#34;margin: 0px;&#34;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;static &amp;nbsp;block &amp;nbsp;只在类加载时执行一次&lt;/p&gt;   &lt;/div&gt; &lt;/span&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>flash安全沙箱问题，访问域外的网站</title>
      <link>https://helao.net/2009/8.html</link>
      <pubDate>2009-11-06 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;p&gt; &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;pre name=&#34;code&#34; class=&#34;xml&#34;&gt;这是test例子的源码&lt;/pre&gt; &lt;pre name=&#34;code&#34; class=&#34;xml&#34;&gt;flex端得&lt;/pre&gt; &lt;pre name=&#34;code&#34; class=&#34;xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;mx:Application xmlns:mx=&amp;quot;&lt;a href=&#34;http://www.adobe.com/2006/mxml&amp;quot;&#34;&gt;http://www.adobe.com/2006/mxml&amp;quot;&lt;/a&gt; layout=&amp;quot;absolute&amp;quot;&amp;gt;    &amp;lt;mx:Script&amp;gt;     &amp;lt;![CDATA[            import mx.controls.Alert;           import mx.rpc.events.ResultEvent;           private function clickLocal():void{             httpLocal.send();           }           private function local_result(event:ResultEvent):void{              var str:String = event.result.name as String;               Alert.show(&amp;quot;show local result :&amp;quot;+str);            }           private function clickRemote():void{                httpRemote.send();          }           private function remote_result(event:ResultEvent):void{             var str:String = event.result.name as String;               Alert.show(&amp;quot;show remote result:&amp;quot;+str);            }                       ]]&amp;gt;    &amp;lt;/mx:Script&amp;gt;    &amp;lt;mx:HTTPService id=&amp;quot;httpLocal&amp;quot; url=&amp;quot;&lt;a href=&#34;http://localhost:8080/xuexiao/test.action&amp;quot;&#34;&gt;http://localhost:8080/xuexiao/test.action&amp;quot;&lt;/a&gt;       method=&amp;quot;post&amp;quot; result=&amp;quot;local_result(event)&amp;quot; /&amp;gt;    &amp;lt;mx:HTTPService id=&amp;quot;httpRemote&amp;quot; url=&amp;quot;&lt;a href=&#34;http://211.82.193.188:8080/xuanhua/test.action&amp;quot;&#34;&gt;http://211.82.193.188:8080/xuanhua/test.action&amp;quot;&lt;/a&gt;        method=&amp;quot;post&amp;quot; result=&amp;quot;remote_result(event)&amp;quot; /&amp;gt;    &amp;lt;mx:Button x=&amp;quot;75&amp;quot; y=&amp;quot;61&amp;quot; label=&amp;quot;sendtoLocal&amp;quot; click=&amp;quot;clickLocal()&amp;quot; /&amp;gt;  &amp;lt;mx:Button x=&amp;quot;75&amp;quot; y=&amp;quot;136&amp;quot; label=&amp;quot;sendtoRemote&amp;quot; click=&amp;quot;clickRemote()&amp;quot; /&amp;gt;   &amp;lt;/mx:Application&amp;gt;&lt;/pre&gt; &amp;nbsp; &lt;p&gt;&amp;nbsp;&amp;nbsp; action没做处理，通过jsp页面输出&lt;/p&gt; &lt;p&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; ?&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;name&amp;gt;tiantian&amp;lt;/name&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;span&gt;在地址为188的服务端 tomcat 的root目录下添加crossdomain.xml&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;span style=&#34;white-space: pre; background-color: #fafafa;&#34;&gt;&lt;span style=&#34;white-space: normal; background-color: #ffffff;&#34;&gt;&amp;nbsp;&lt;/span&gt; &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;pre name=&#34;code&#34; class=&#34;xml&#34;&gt;       &amp;lt;cross-domain-policy&amp;gt;           &amp;lt;allow-access-from domain=&amp;quot;*&amp;quot; /&amp;gt;       &amp;lt;/cross-domain-policy&amp;gt;&lt;/pre&gt; &lt;pre name=&#34;code&#34; class=&#34;xml&#34;&gt;重启tomcat 即可&lt;/pre&gt; &lt;pre name=&#34;code&#34; class=&#34;xml&#34;&gt;测试结果： 点击remote按钮  会弹出alert（“tiantian”）&lt;/pre&gt; &lt;pre name=&#34;code&#34; class=&#34;xml&#34;&gt;&lt;/pre&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>基于flex 和red5的视频聊天</title>
      <link>https://helao.net/2009/7.html</link>
      <pubDate>2009-11-04 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;源码过两天放出 &lt;br /&gt; &lt;br /&gt; &lt;br /&gt;首先&amp;nbsp; 向某人道个歉，没有按时把源码放出来 &lt;br /&gt; &lt;br /&gt;现在源码已经上传了 &lt;br /&gt;可以下载。 &lt;br /&gt; &lt;br /&gt;&lt;a href=&#34;http://www.uushare.com/user/feiyan35488/files/2390810&#34;&gt;http://www.uushare.com/user/feiyan35488/files/2390810&lt;/a&gt; &lt;br /&gt; &lt;br /&gt;不好意思&amp;nbsp; 放上的的视频会议的代码，没有使用框架，很简单。 &lt;br /&gt;我也是新手，把代码放出来献丑了。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>flex 下的动画</title>
      <link>https://helao.net/2009/6.html</link>
      <pubDate>2009-11-04 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;先记下，源码稍后放出&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>java学习笔记1</title>
      <link>https://helao.net/2009/5.html</link>
      <pubDate>2009-11-03 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;java JDK&amp;nbsp; 的安装就不说了，主要是安装完成后配置JAVA&lt;em&gt;HOME&amp;nbsp; CLASSPATH&amp;nbsp; PATH&amp;nbsp; 路径 &lt;br /&gt;&#xA;&lt;br /&gt;&#xA;java语言 命名规则： &lt;br /&gt;&#xA;1.类名首字母大写 &lt;br /&gt;&#xA;2.变量 为单个单词时： 全部小写 int value;， &lt;br /&gt;&#xA;为多个单词时int intValue;：首个单词小写以后的单词首字母要大写， &lt;br /&gt;&#xA;为常变量时：全部大写，单词之间用&amp;rdquo;&lt;/em&gt;&amp;ldquo;隔开&amp;nbsp; 如int INT_VALUE 21; &lt;br /&gt;&#xA;变量初始化： &lt;br /&gt;&#xA;全局变量中 &lt;br /&gt;&#xA;原始变量会在编译时赋给默认值 0 &lt;br /&gt;&#xA;String 初值 为null &lt;br /&gt;&#xA;对象的初值为&amp;nbsp; null &lt;br /&gt;&#xA;&lt;p&gt;&#xA;    在局部变量中 变量不会有默认值；int a;&amp;nbsp;&amp;nbsp;&amp;nbsp; a = null;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;pre class=&#34;prettyprint lang-java linenums&#34;&gt;public class Test_Variable {&#xA;        static int a;&#xA;        static int d;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    public static void main(String[] args) {&#xA;        int b = 0;&#xA;        String c = &amp;quot;cc&amp;quot;;&#xA;        System.out.println(a);&#xA;        System.out.println(b);&#xA;        System.out.println(c);&#xA;        printd();&#xA;    }&#xA;&#xA;    static void printd() {&#xA;        int e = 3;&#xA;        System.out.println(d);&#xA;        System.out.println(e);&#xA;        System.out.println(&amp;quot;str&amp;quot; + a + e);&#xA;        System.out.println(a + e);&#xA;        System.out.println(a + e + &amp;quot;str&amp;quot;);&#xA;        System.out.println(&amp;quot;str&amp;quot; + 0 + 3);&#xA;    }&#xA;}&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    运行结果&amp;nbsp; ：&#xA;&lt;/p&gt;&#xA;0 &lt;br /&gt;&#xA;0 &lt;br /&gt;&#xA;cc &lt;br /&gt;&#xA;0 &lt;br /&gt;&#xA;3 &lt;br /&gt;&#xA;str03 &lt;br /&gt;&#xA;3 &lt;br /&gt;&#xA;3str &lt;br /&gt;&#xA;str03 &lt;br /&gt;&#xA;&lt;br /&gt;&#xA;static 对variable 和methods的 作用？&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>随笔（1）</title>
      <link>https://helao.net/2009/4.html</link>
      <pubDate>2009-10-04 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;今天好不容易把代码敲完了，回头写文档的时候，发现我的需求分析有变。哎&amp;nbsp; 重写一次吧&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>